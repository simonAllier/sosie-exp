{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":221,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":688,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":464,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":803,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":313,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":58,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":176,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":738,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":545,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":191,"org.apache.commons.collections4.CollectionUtilsTest.get":342,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":718,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":661,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":605,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":623,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":731,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":883,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":636,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":866,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":443,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":3,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":828,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":1,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":265,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":723,"org.apache.commons.collections4.CollectionUtilsTest.select":337,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":302,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":227,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":482,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":141,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":242,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":709,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":812,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":692,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":542,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":488,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":65,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":843,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.CollectionUtilsTest.intersection":345,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":185,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":873,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":609,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":671,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":523,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":672,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":17,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":352,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":654,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":160,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":253,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":303,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":644,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":757,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":830,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":293,"org.apache.commons.collections4.map.CompositeMapTest.testPut":368,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":855,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":21,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":437,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":694,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":850,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":323,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":841,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":816,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":799,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":306,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":518,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":444,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":576,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":232,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":691,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":561,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":83,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":239,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":581,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":582,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":580,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":556,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":724,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":768,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":166,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":639,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":445,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":687,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":708,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":814,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":525,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":610,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":809,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":786,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":631,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":648,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":802,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":864,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":361,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":732,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":791,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":834,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":25,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":127,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":304,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":289,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":740,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":465,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":39,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":625,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":626,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":807,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":449,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":52,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":436,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":117,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":411,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":743,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":881,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":420,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":612,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":849,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":878,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":216,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":745,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":151,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":91,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":680,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":689,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":765,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":821,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.IteratorUtilsTest.testToList":817,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":34,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":575,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":750,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":212,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":458,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":887,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":441,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":53,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":764,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":862,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":763,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":586,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":762,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":820,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":96,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.LRUMapTest.testReset":727,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":825,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":813,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":106,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":332,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":269,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":270,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":530,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":257,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":634,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":870,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":451,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":557,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":179,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":717,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":733,"org.apache.commons.collections4.map.LinkedMapTest.testReset":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":486,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":748,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":573,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":85,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":608,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":797,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":156,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":877,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":519,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":767,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":172,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":842,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":214,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":132,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":524,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":183,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":781,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":95,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":845,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":479,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":815,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":811,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":529,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":660,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":364,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":574,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":228,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":334,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":653,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":539,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":498,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":540,"org.apache.commons.collections4.map.HashedMapTest.testClone":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":541,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":882,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":22,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":19,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":146,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":74,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":485,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":223,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":642,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":696,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":439,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":297,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":491,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":93,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":202,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":702,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":473,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":472,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":373,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":474,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":649,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":585,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":782,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":450,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":604,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":681,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":12,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":388,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":129,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":288,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":483,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":777,"org.apache.commons.collections4.list.TreeListTest.testBug35258":794,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":726,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":20,"org.apache.commons.collections4.ListUtilsTest.testSelect":387,"org.apache.commons.collections4.map.LinkedMapTest.testClone":776,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":139,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":382,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":350,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":597,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":684,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":209,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":619,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":536,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":632,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":598,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":739,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":113,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":38,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":301,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":666,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":734,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":144,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":730,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":858,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":859,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":637,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":662,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":42,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":286,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":613,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":86,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":716,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":463,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":31,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":30,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":268,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":533,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":847,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":377,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":287,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":707,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":193,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":735,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":178,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":504,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":110,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":823,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":343,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":527,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":569,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":852,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":677,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":240,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":452,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":177,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":695,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":721,"org.apache.commons.collections4.map.LRUMapTest.testLRU":729,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":784,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":822,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":134,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":879,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":385,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":663,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":592,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":282,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":300,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":427,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":424,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":758,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":244,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":652,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":844,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":261,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":756,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":440,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":338,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":173,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":755,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":407,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":416,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":489,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":572,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":679,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":594,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":766,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":478,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":222,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":161,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":674,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":874,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":51,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":588,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":885,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":258,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":630,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":559,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":546,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":839,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":220,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":456,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":460,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":330,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":567,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":462,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":522,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":499,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":614,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":601,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":520,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":796,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":174,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":779,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":535,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":831,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":404,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":211,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":853,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":290,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":142,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":570,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":770,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":658,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":507,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":771,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":55,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":281,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":699,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":824,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":121,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":335,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":154,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":155,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":153,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":584,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":553,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":249,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":720,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":180,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":294,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":422,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":876,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":217,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":833,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":650,"org.apache.commons.collections4.map.CompositeMapTest.testGet":367,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":461,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":848,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":432,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":615,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":417,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":683,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":319,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":470,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":736,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":838,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":871,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":805,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":104,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":836,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":700,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":617,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":854,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":315,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":246,"org.apache.commons.collections4.CollectionUtilsTest.union":344,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":606,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":790,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":195,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":607,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":863,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":725,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":266,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":508,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":189,"org.apache.commons.collections4.list.TreeListTest.testRemove":780,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":578,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":577,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":846,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":579,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":860,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":629,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":627,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":795,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":664,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":200,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":90,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":788,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":252,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":59,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":447,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":152,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":773,"org.apache.commons.collections4.map.LRUMapTest.testClone":728,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":210,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":659,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":471,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":706,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":737,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":521,"org.apache.commons.collections4.ListUtilsTest.testSubtract":865,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":358,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":633,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":264,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":840,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":675,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":175,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":481,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":182,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":826,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":875,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":137,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":596,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":168,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":868,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":120,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":248,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":772,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":616,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":804,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":233,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":396,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":371,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":566,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":243,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":284,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":311,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":480,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":76,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":792,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":775,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":526,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":744,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":778,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":296,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":339,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":528,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":68,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":317,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":230,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":425,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":62,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":514,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":419,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":827,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":275,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":646,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":138,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":226,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":477,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":429,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":469,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":476,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":225,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":299,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":357,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":467,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":516,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":26,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":277,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":547,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":722,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":197,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":54,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":415,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":835,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":331,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":682,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":543,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":333,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":742,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":46,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":713,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":372,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":714,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":208,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":251,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":237,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":418,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":641,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":531,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":806,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":61,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":124,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":591,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":298,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":87,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":752,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":774,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":602,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":819,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":255,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":665,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":454,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":769,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":856,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":697,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":785,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":872,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":241,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":560,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":215,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":340,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":438,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":431,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":832,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":149,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":4,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":184,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":698,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":861,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":810,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":103,"org.apache.commons.collections4.set.CompositeSetTest.testContains":318,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":421,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":676,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":754,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":125,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":801,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":165,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":562,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":851,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":312,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":793,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":651,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":386,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":198,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":186,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":28,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":295,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":837,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":328,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":589,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":67,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":741,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":686,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":719,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":685,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":571,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":77,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":224,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":800,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":869,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":635,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":164,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":292,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":94,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":711,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":712,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":510,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":710,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":667,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":109,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":886,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":884,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":190,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":310,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":247,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":668,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":669,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":595,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":751,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":199,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":693,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":130,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":280,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":690,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":701,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":399,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":260,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":818,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":398,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":400,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":501,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":375,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":18,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":245,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":761,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":170,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":329,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":88,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":829,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":867,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":808,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":433,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":759,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":760,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":283,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":880,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":857,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":670,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":457,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":497,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":611,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":783,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":503,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":150,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":140,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":435,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":517,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":430,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":749},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[],"tindex":"c5ab6322-2e7a-11e6-bc7a-8165364be2e0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"nCopies"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"c5ac4d83-2e7a-11e6-bc7a-7bb838cf51b6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:686","type":"CtMethodImpl","sourcecode":"protected int calculateThreshold(final int newCapacity, final float factor) {\n    if (newCapacity <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((int)(newCapacity * factor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"newCapacity"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c5ac4d84-2e7a-11e6-bc7a-ed985a92db82","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:117","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> m) {\n    if (m instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"m"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"c5ac7495-2e7a-11e6-bc7a-8745d20f4871","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if ((o instanceof java.util.Map) == false) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"c5ac7496-2e7a-11e6-bc7a-fb18ade828e9","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"c5ac9ba7-2e7a-11e6-bc7a-15f731c25074","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"c5acc2b8-2e7a-11e6-bc7a-bf634157feb5","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[53],"tindex":"c5acc2b9-2e7a-11e6-bc7a-49c4e8e0b8a2","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[],"tindex":"c5ace9ca-2e7a-11e6-bc7a-5b0395b790f4","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"c5ad10db-2e7a-11e6-bc7a-8d3ddd7edfee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"c5ad10dc-2e7a-11e6-bc7a-b3175e46547e","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index > index) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index","bound":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"c5ad37ed-2e7a-11e6-bc7a-2917bd00955b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[84,85,86,87,88,89,90,91],"tindex":"c5ad37ee-2e7a-11e6-bc7a-f5b714c2c0de","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1117","type":"CtInvocationImpl","sourcecode":"entry.isEmpty()"},"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"c5ad5eff-2e7a-11e6-bc7a-3bfba25b6012","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (tree.isEmpty()) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n            if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                    if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        break;\n                    } \n                    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } \n            if (current.isEmpty()) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                    return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n            } \n            while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (current == tree) {\n                    return null;\n                } \n                current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            if (current == tree) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                return null;\n            } \n            return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"tree"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"c5add430-2e7a-11e6-bc7a-336d529d975c","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[153,154,155,156,157,158],"tindex":"c5add431-2e7a-11e6-bc7a-63beb6b4472b","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"c5adfb42-2e7a-11e6-bc7a-67da08a53701","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c5ae2253-2e7a-11e6-bc7a-d11f3926c441","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtBinaryOperatorImpl","sourcecode":"estimatedSize < 1"},"failures":[159],"tindex":"c5ae2254-2e7a-11e6-bc7a-cd6806339c18","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"estimatedSize":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[160],"tindex":"c5ae4965-2e7a-11e6-bc7a-99583aa3d35b","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"tindex":"c5ae4966-2e7a-11e6-bc7a-3976bd15661c","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (insertBeforeNode == nodeToInsert) {\n        {\n            super.addNode(nodeToInsert, insertBeforeNode);\n            broadcastNodeInserted(nodeToInsert);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"insertBeforeNode","header":"nodeToInsert"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"tindex":"c5ae7077-2e7a-11e6-bc7a-53555158e8a4","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (len > bound) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bound","index":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[310],"tindex":"c5ae9788-2e7a-11e6-bc7a-f3fc2651f7d9","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[311],"tindex":"c5ae9789-2e7a-11e6-bc7a-6d98e7bd4cbf","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate1 == null) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[312,217,313,314],"tindex":"c5ae978a-2e7a-11e6-bc7a-a3cd8606f687","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"c5aebe9b-2e7a-11e6-bc7a-1506ec2adf3d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[160],"tindex":"c5aebe9c-2e7a-11e6-bc7a-3953b8d3f454","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (falseClosure == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"falseClosure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[315],"tindex":"c5aebe9d-2e7a-11e6-bc7a-bf72b97d1217","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"c5aee5ae-2e7a-11e6-bc7a-6dc3a6409a42","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl","sourcecode":"keys == null"},"failures":[],"tindex":"c5af0cbf-2e7a-11e6-bc7a-3529e50ffbc6","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c5af0cc0-2e7a-11e6-bc7a-9f5a7861afbc","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final K K : mapToCopy.keySet()) {\n                if (!(containsKey(key))) {\n                    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                } \n            }\n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[316,317,318,319,320,321,322,323,36,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,114,386,387,388],"tindex":"c5af0cc1-2e7a-11e6-bc7a-7b2d50ee6d14","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if ((coll == null) || (coll == null)) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c5af33d2-2e7a-11e6-bc7a-750846a65323","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map.isEmpty()) {\n                        return ((java.util.Map<K, V>)(map));\n                    } \n                    final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n                    }\n                    return result;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[389],"tindex":"c5af33d3-2e7a-11e6-bc7a-0b616b97a4ac","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"c5af5ae4-2e7a-11e6-bc7a-8f5497157cbf","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[390,391],"tindex":"c5af5ae5-2e7a-11e6-bc7a-dfb1c890c165","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[392],"tindex":"c5af5ae6-2e7a-11e6-bc7a-7788a3856f3c","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) < (wrappedIteratorIndex)"},"failures":[],"tindex":"c5af81f7-2e7a-11e6-bc7a-353a7390a451","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"index","currentIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"c5b01e38-2e7a-11e6-bc7a-8b005aa21b58","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[393,394],"tindex":"c5b01e39-2e7a-11e6-bc7a-d3385e80306e","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[395,396],"tindex":"c5b01e3a-2e7a-11e6-bc7a-85ef5e130816","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"c5b06c5b-2e7a-11e6-bc7a-05e59ef646cd","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"c5b0936c-2e7a-11e6-bc7a-750fd2282e66","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"c5b0936d-2e7a-11e6-bc7a-e34925226e7a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"hashCode"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[],"tindex":"c5b0ba7e-2e7a-11e6-bc7a-bda850605047","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[397,398],"tindex":"c5b0e18f-2e7a-11e6-bc7a-8fc2a89cc5b2","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (b.isEmpty()) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[],"tindex":"c5b107a0-2e7a-11e6-bc7a-2f9f3666b386","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"c5b107a1-2e7a-11e6-bc7a-45a3ce6d81e9","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                {\n                    return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE)) != null"},"failures":[],"tindex":"c5b12eb2-2e7a-11e6-bc7a-2d5884bbdcac","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:879","type":"CtMethodImpl","sourcecode":"private void doRedBlackInsert(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> insertedNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((insertedNode.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = insertedNode;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(currentNode, dataElement);\n            while (((currentNode != null) && (currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]))) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(currentNode.getParent(dataElement), dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isRightChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateLeft(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                } else {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateRight(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateLeft(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()], dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"insertedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[399,400,401],"tindex":"c5b155c3-2e7a-11e6-bc7a-7dedf1cd15e1","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[402],"tindex":"c5b17cd4-2e7a-11e6-bc7a-5d806b323374","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[403,404,33,37,405,406,407,408,409,410,411,412,413],"tindex":"c5b17cd5-2e7a-11e6-bc7a-a7fdb4c6d858","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"c5b17cd6-2e7a-11e6-bc7a-25be1ca029cc","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[414],"tindex":"c5b1a3e7-2e7a-11e6-bc7a-537b51631ce9","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"c5b1a3e8-2e7a-11e6-bc7a-639e6fe140ba","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (((input == null) && (input == null)) || ((object != null) && (object.equals(current)))) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"input","object":"input"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[],"tindex":"c5b1caf9-2e7a-11e6-bc7a-55556d3f53eb","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (defaultValue != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,159,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,381,481,482,483,484,485,486,487,488],"tindex":"c5b1f20a-2e7a-11e6-bc7a-efe323a31c85","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (hashIndex > 0) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"hashIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"c5b2191b-2e7a-11e6-bc7a-51377c054b79","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"c5b2402c-2e7a-11e6-bc7a-9dac62e82776","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c5b2402d-2e7a-11e6-bc7a-2f34fde4768d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[],"tindex":"c5b2673e-2e7a-11e6-bc7a-0fcdd3eb14fb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[254],"tindex":"c5b2673f-2e7a-11e6-bc7a-4f3aeb7274ec","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o instanceof org.w3c.dom.NodeList) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtBinaryOperatorImpl","sourcecode":"index1 >= endIndex1"},"failures":[],"tindex":"c5b28e50-2e7a-11e6-bc7a-6940c8385358","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:514","type":"CtMethodImpl","sourcecode":"protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex >= hashIndex) {\n        {\n            (int)++;\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = createEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex], hashCode, key, value);\n            addEntry(entry, hashIndex);\n            (int)++;\n            checkCapacity();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"endIndex1":"hashIndex","index1":"hashIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[489,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,353,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,355,586,587,588,589,590,591,592,593,594,595,391,596,597,598,599,600,433,601,390,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,357,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,362,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,377,719,720,721,722,723,724,725,726,727,728,435,729,730,434,436,437,731,732,438,439,440,441,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,380,768,769,770,771,772,773,774,775,442,776,443,777,444,445,159,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,381,481,482,483,484,485,486,487,488],"tindex":"c5b28e51-2e7a-11e6-bc7a-cd9a0c519819","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"c5b2dc72-2e7a-11e6-bc7a-c1e92ea0bf52","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"c5b2dc73-2e7a-11e6-bc7a-672bf5dc444a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[778,779,780,781,782,783,784,785,786,787,788,789,790,791],"tindex":"c5b2dc74-2e7a-11e6-bc7a-457cf24fc7c2","method":{"position":"org.apache.commons.collections4.list.TreeList:781","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> previous) {\n    if (previous == null) {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? previous : node;\n            recalcHeight();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"previous"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"c5b2dc75-2e7a-11e6-bc7a-49593883dcd6","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[510,513,524,550,551,554,565,591,592],"tindex":"c5b30386-2e7a-11e6-bc7a-f1dca4d21157","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"c5b30387-2e7a-11e6-bc7a-553641102716","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"c5b30388-2e7a-11e6-bc7a-5de5266f4666","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (((coll1 == null) || (coll1 == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll1","set1":"coll1"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"c5b32a99-2e7a-11e6-bc7a-abdc91143184","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"c5b32a9a-2e7a-11e6-bc7a-ad7efb8314dd","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"c5b32a9b-2e7a-11e6-bc7a-b19401c86eed","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"c5b351ac-2e7a-11e6-bc7a-afb767ac6b5e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[792,793,794,778,779,780,795,796,781,797,798],"tindex":"c5b351ad-2e7a-11e6-bc7a-f5edfe4fec67","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index == 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtBinaryOperatorImpl","sourcecode":"(y.getRight(dataElement)) != null"},"failures":[799,800,801,327,802,803,804,805,806,807],"tindex":"c5b378be-2e7a-11e6-bc7a-4bd1946b8037","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[518,519,521,522,523,526,528,531,532,595,612,638,639,645,656,682,683,808,809,810,811,812,813,686,687,698,724,725,159,776,460,486,487],"tindex":"c5b378bf-2e7a-11e6-bc7a-b9b51dde8834","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[10,29],"tindex":"c5b39fd0-2e7a-11e6-bc7a-e117f1ad3ca6","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"c5b39fd1-2e7a-11e6-bc7a-e5c6f9cc88b8","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map.isEmpty()) {\n                        return ((java.util.Map<K, V>)(map));\n                    } \n                    final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n                    }\n                    return result;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"c5b3c6e2-2e7a-11e6-bc7a-ab115821d355","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    } else {\n        throw new java.lang.NullPointerException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c5b3edf3-2e7a-11e6-bc7a-09b9a938bdce","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list1 instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"c5b41504-2e7a-11e6-bc7a-33630520fe16","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (lengthInBits >= lengthInBits) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits","index":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"c5b41505-2e7a-11e6-bc7a-b96d976dc82f","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[814,815,816,817,818,819],"tindex":"c5b41506-2e7a-11e6-bc7a-5116655a76c2","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (estimatedSize == 0) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"estimatedSize"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[333,334,339,348,349,85,86,87,820,821,91,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866],"tindex":"c5b43c17-2e7a-11e6-bc7a-25065a8037c7","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (nCopies == 0) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[],"tindex":"c5b43c18-2e7a-11e6-bc7a-25da936dd0bf","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (removeCollection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"removeCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"c5b46329-2e7a-11e6-bc7a-b59d0cd59fc7","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"(((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))"},"failures":[],"tindex":"c5b4632a-2e7a-11e6-bc7a-51262d6c0855","method":{"position":"org.apache.commons.collections4.list.TreeList:709","type":"CtMethodImpl","sourcecode":"private int setOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final int newOffest) {\n    if ((((newOffest % 2) != 0) && ((delta - newOffest) <= newOffest)) && (k <= (delta + d))) {\n        {\n            if (node == null) {\n                return 0;\n            } \n            final int int = getOffset(node);\n            node.int = newOffest;\n            return oldOffset;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"newOffest","delta":"newOffest","k":"newOffest"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[867,868],"tindex":"c5b4632b-2e7a-11e6-bc7a-111811b5d5c7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[],"tindex":"c5b48a3c-2e7a-11e6-bc7a-49c316f38e10","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index > index) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[7,8,869,870,871],"tindex":"c5b48a3d-2e7a-11e6-bc7a-c5900ce49fc2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"c5b48a3e-2e7a-11e6-bc7a-3d6fa04a8cb1","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[28],"tindex":"c5b48a3f-2e7a-11e6-bc7a-c380fcf60bed","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"c5b48a40-2e7a-11e6-bc7a-db0584aa5636","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[161,162,163,172,175,177,178,179,183,208,184,185,186,187,188,189,190,193,194,195,197,202,165,169,170,167,212,213,214,215,216,228,231,232,233,234,240,245,246,247,248],"tindex":"c5b4b151-2e7a-11e6-bc7a-bf981acda645","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[872,873,874,875,876,877,878,879,880,881,882,883,884,885,886],"tindex":"c5b4b152-2e7a-11e6-bc7a-378af217568a","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator<?>) {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"c5b4b153-2e7a-11e6-bc7a-e54191825569","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[887,802],"tindex":"c5b4d864-2e7a-11e6-bc7a-b121c0515dd9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[402],"tindex":"c5b4d865-2e7a-11e6-bc7a-79cbfb9c3de2","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}