{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":3,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":31,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":148,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":65,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":13,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":4,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":89,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":145,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":17,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":19,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":152,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":74,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":114,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":126,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":110,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":1,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":64,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":140,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSerializeDeserializeThenCompare":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":102,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":101,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":100,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":14,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":135,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":70,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":58,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":23,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":9,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":11,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":136,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":45,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":62,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":52,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":92,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":93,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":21,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":142,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":132,"org.apache.commons.collections4.ListUtilsTest.testEquals":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":30,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":99,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":10,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":18,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":105,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":124,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":133,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":57,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":121,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":107,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":98,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":76,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":108,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":143,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToString":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":25,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":75,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":83,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":117,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":82,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":106,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":24,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":130,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":78,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":20,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":120,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":63,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":68,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":44,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":48},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"20c74615-2ea9-11e6-9071-7bc215fcbd4c","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other == null) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"other"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[],"tindex":"20c83076-2ea9-11e6-9071-39da57d6cccc","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if ((count < 0) || (index >= count)) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"count","index":"count"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[53],"tindex":"20c83077-2ea9-11e6-9071-0ba12989c7d7","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list1 == list1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[54,55],"tindex":"20c85788-2ea9-11e6-9071-e9d94a1c32b9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsValue(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"20c87e99-2ea9-11e6-9071-d5acd48aa379","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count < 0) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[82,83],"tindex":"20c8a5aa-2ea9-11e6-9071-39a0a44d2c62","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if (a == null) {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"20c8ccbb-2ea9-11e6-9071-071e144a8a2d","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:129","type":"CtMethodImpl","sourcecode":"public void setTransformer(final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.org.apache.commons.collections4.Transformer<? super I, ? extends O> = transformer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"20c8ccbc-2ea9-11e6-9071-d9ce89726970","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtBinaryOperatorImpl","sourcecode":"deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))"},"failures":[],"tindex":"20c8f3cd-2ea9-11e6-9071-59f12abc1a6a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"20c91ade-2ea9-11e6-9071-93a8c3e9e720","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                {\n                    return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"20c941ef-2ea9-11e6-9071-4fe66536e0e2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"20c96900-2ea9-11e6-9071-ff53ec86e6c5","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"20c96901-2ea9-11e6-9071-23d8644008c2","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                {\n                    return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[114],"tindex":"20c99012-2ea9-11e6-9071-47df4f7bedc7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[115],"tindex":"20c99013-2ea9-11e6-9071-87b8bcf80e69","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"offsetInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"20c9b724-2ea9-11e6-9071-a38a0329f2f9","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"20c9b725-2ea9-11e6-9071-21c9f8f10d60","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[116],"tindex":"20c9de36-2ea9-11e6-9071-452bb3cac108","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"20c9de37-2ea9-11e6-9071-6b12d048a081","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"20c9de38-2ea9-11e6-9071-81b74f65cd5d","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"20cc4f39-2ea9-11e6-9071-7d6ffb0bbdf2","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:349","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection) {\n    if (compositeCollection == null) {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"compositeCollection"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":21,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}