{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":499,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":257,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":770,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":1207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":411,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":568,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":1054,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":1166,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":196,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":778,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":155,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":60,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":591,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":289,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":884,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsSelfHashCode":1239,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":252,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":939,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":878,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":350,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":507,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":546,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":245,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":547,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":577,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":1128,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":376,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":973,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":958,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":381,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":866,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":889,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":681,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":566,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":359,"org.apache.commons.collections4.CollectionUtilsTest.get":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":326,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":258,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":1030,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":1172,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":1191,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":1275,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":1208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":748,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":14,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":1036,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":503,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":451,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":844,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":1248,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":934,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":449,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":810,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":858,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":783,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":661,"org.apache.commons.collections4.CollectionUtilsTest.select":950,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":535,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":626,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":669,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":417,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":1067,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":81,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":594,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":6,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":764,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":1024,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":1008,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":699,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":679,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":1286,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":887,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":559,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":702,"org.apache.commons.collections4.CollectionUtilsTest.intersection":585,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":390,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":822,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":401,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":971,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":1195,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":725,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":508,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":695,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":726,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":789,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":1181,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":465,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":187,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":1165,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":892,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":1003,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":198,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":1092,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":500,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":877,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":771,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":1278,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":161,"org.apache.commons.collections4.map.CompositeMapTest.testPut":576,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":469,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":620,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":1010,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":968,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":1285,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":515,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":1107,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":922,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":30,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":232,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":1035,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":1150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":422,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":542,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":1007,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":1136,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":1271,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":714,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":926,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":1219,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":431,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":776,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":145,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":838,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":101,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":931,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":712,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":1154,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":825,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":711,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":662,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":708,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":864,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":1250,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":485,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":530,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":688,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":586,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":751,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":1038,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":1006,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":1023,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":1228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":1113,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":166,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":872,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":582,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":935,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":165,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":959,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":1196,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":47,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":45,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":1220,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":905,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":1213,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":723,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":533,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":1072,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":203,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":173,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":237,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":841,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":1222,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":829,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":215,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":756,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":775,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":1077,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":1055,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":834,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":481,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":982,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":1209,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":891,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":1210,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":1211,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":375,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":288,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":1042,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":243,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":1021,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":1237,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":1071,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":318,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":1039,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":740,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":804,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":564,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":1080,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":849,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":107,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":898,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":717,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":919,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":993,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":1198,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":425,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":900,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":167,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":407,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":1082,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":730,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":652,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":794,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":354,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":686,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":374,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":815,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":704,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":859,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":496,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":851,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":824,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":1296,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":476,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":1149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":505,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":1086,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":405,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":1048,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":447,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":1242,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":598,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":1274,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":297,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":596,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":1097,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":685,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":684,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":715,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":1270,"org.apache.commons.collections4.map.LRUMapTest.testReset":1069,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":886,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":833,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":365,"org.apache.commons.collections4.CollectionUtilsTest.exists":306,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":1121,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":1233,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":765,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":212,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":248,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":828,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":557,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":949,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":1045,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":1118,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":1265,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":1215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":493,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":791,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":1020,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":587,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":667,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":556,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":852,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":709,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":1104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":384,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":797,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":1029,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":1073,"org.apache.commons.collections4.map.LinkedMapTest.testReset":1033,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":760,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":941,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":677,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":1084,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":943,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":710,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":1194,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":816,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":963,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":287,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":1259,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":250,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":908,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":801,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":1190,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":122,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":616,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":1108,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":1099,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":396,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":985,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":332,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":21,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":46,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":128,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":404,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":22,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":74,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":994,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":430,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":1103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":360,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":915,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":1112,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":629,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":703,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":1269,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":1065,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":642,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":168,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":1184,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":870,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":1117,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":842,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":1171,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":125,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":100,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":1148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":316,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":608,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":418,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":1164,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":697,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":980,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":698,"org.apache.commons.collections4.map.HashedMapTest.testClone":1159,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":1126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":1279,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":102,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":787,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":231,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":1206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":336,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":141,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":974,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":467,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":1229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":1249,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":555,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":907,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":676,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":902,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":413,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":1218,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":1012,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":91,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":285,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":295,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":975,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":309,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":584,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":1266,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":206,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":372,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":83,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":795,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":342,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":1018,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":37,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":75,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":158,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":1062,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":1061,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":581,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":1063,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":1160,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":1156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":502,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":666,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":952,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":149,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":731,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":741,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":151,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":1043,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":752,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":638,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":846,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":867,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":233,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":641,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":460,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":929,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":936,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":781,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":946,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":1284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":19,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":20,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":18,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":227,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":675,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":1068,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":118,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":1034,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":664,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":280,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":468,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":625,"org.apache.commons.collections4.ListUtilsTest.testSelect":945,"org.apache.commons.collections4.map.LinkedMapTest.testClone":1037,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":814,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":918,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":80,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":812,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":632,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":957,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":278,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":279,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":735,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":734,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":1205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":1123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":1124,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":1214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":1125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":737,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":558,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":766,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":923,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":480,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":875,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":1176,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":1074,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":348,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":749,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":857,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":328,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":1173,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":193,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":1272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":152,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":869,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":1199,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":836,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":657,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":1297,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":1053,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":707,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":823,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":12,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":1143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":1281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":1120,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":592,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":50,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":658,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":1022,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":1276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":202,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":924,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":1075,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":1223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":383,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":645,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":175,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":1294,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":1293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":1292,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":1,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":819,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":1115,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":253,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":255,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":254,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":99,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":1144,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":729,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":976,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":432,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":668,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":911,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":382,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":1011,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":1032,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":324,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":890,"org.apache.commons.collections4.map.LRUMapTest.testLRU":300,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":333,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":51,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":773,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":840,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":550,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":1261,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":1174,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":1231,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":25,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":719,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":26,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":863,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":649,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":133,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":308,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":903,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":995,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":1093,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":805,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":137,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":942,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":813,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":705,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":1238,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":501,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":1163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":488,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":1091,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":296,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":860,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":951,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":1133,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":463,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":782,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":397,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":619,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":683,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":856,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":755,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":750,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":386,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":646,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":989,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":1147,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":1185,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1189,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":1098,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":511,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":1083,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":759,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":850,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":412,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":728,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":843,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":853,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":398,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1264,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":1158,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":188,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":606,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":120,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":549,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":868,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":788,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":745,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":955,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":916,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":1134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":1129,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":514,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":1046,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":1050,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":947,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":832,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":1142,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":1243,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":1052,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":344,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":830,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":937,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":997,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":1111,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":55,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":981,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":1200,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":772,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":240,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":696,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":112,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":871,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":1187,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":1109,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":172,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":970,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":134,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":1257,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":458,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":379,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":185,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":1122,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":607,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":610,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":722,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":767,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":393,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":36,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":246,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":524,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":761,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":1224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":525,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":523,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":61,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":1145,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":1101,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":1169,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":987,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":807,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":689,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":303,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":551,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":195,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":1015,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":1295,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":567,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":611,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":1244,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":304,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":111,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":1155,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":1131,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":906,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":441,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":1031,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":1049,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":385,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":648,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":1138,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":106,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":497,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":367,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":967,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":144,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":291,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":1161,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":117,"org.apache.commons.collections4.map.CompositeMapTest.testGet":575,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":1132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":442,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":563,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":757,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":1258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":486,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":1051,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":861,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":720,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":837,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":758,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":802,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":1001,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":543,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":986,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":808,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":1201,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":600,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":733,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":990,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":572,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":1059,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":1076,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":494,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":538,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":1288,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":1282,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":1016,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":1203,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":876,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":438,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":28,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":622,"org.apache.commons.collections4.CollectionUtilsTest.union":953,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":1192,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":95,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":920,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":865,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":234,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":617,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":67,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":665,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":522,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":1193,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":103,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":1298,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":190,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":663,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":512,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":925,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":267,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":518,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":269,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":132,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":1152,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":1151,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":785,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":504,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":917,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":327,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":1153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":148,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":790,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":938,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":1212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":1273,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":744,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":1056,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":743,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":72,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":1260,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":724,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":1256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":370,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":323,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":879,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":444,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":528,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":1040,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":527,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":526,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":799,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":53,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":90,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":965,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.map.LRUMapTest.testClone":5,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":402,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":848,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":1170,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":595,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":654,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":1060,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":680,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":845,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":1230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":1110,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":747,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":353,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":114,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":640,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":1182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":380,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":831,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":209,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":674,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":644,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":387,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":612,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":784,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":1283,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":97,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":510,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":17,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":1241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":347,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":630,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":754,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":94,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":160,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":554,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":171,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":153,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":163,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":265,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":24,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":263,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":639,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":293,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":618,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":77,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":440,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":305,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":631,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":690,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":1168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":1202,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":537,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":261,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":423,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":343,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":313,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":839,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":1267,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":455,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":565,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":621,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":624,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":913,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":534,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":41,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":579,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":634,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":578,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":1141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":310,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":435,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":826,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":1066,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":909,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":855,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":207,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":284,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":283,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":282,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":972,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":932,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":691,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":1105,"org.apache.commons.collections4.ListUtilsTest.testHashCode":780,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":1081,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":1114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":509,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":777,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":1167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":1116,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":192,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":896,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":570,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":978,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":1255,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":996,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":883,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":692,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":157,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":899,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":1221,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":811,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":992,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":109,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":142,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":238,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":721,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":492,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":314,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":416,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":1064,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":650,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":671,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":979,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":1058,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":415,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":746,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":1057,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1263,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":854,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":940,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalFullCollectionExists":1234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":694,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":1157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":472,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":569,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":1130,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":793,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":366,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":862,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":988,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":138,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":732,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":948,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":1127,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":583,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":199,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":1079,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":544,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":655,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":580,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":656,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":1028,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":964,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":763,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":1253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":443,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":573,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":1188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":429,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":602,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":991,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":1217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":1119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":539,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":613,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":718,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":1088,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":904,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalEmptyCollectionExists":1236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":1254,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":897,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":954,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":739,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":270,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":191,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":272,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":1175,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":271,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":827,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":322,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":1044,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":131,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":1100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":448,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":1013,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":179,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":108,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":966,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":433,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":927,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":1135,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":406,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":140,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":294,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":63,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":605,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":1000,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":603,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":483,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":998,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":1204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":452,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":893,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":636,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":977,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":389,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":1227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":820,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":1014,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":1280,"org.apache.commons.collections4.set.CompositeSetTest.testContains":571,"org.apache.commons.collections4.CollectionUtilsTest.isFull":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":647,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":143,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":1090,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":1183,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":319,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":1041,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":529,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":219,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":633,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":331,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":885,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":944,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":394,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":881,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":1137,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":162,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":65,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":1162,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":956,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":368,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":426,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":921,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":769,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":64,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":894,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":545,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":391,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":462,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":1002,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":1235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":477,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":1277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":474,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":590,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":593,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":792,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":454,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":716,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":768,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":873,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":960,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":228,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":962,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":177,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":961,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":895,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":1078,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":266,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":225,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":247,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":1005,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":659,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":352,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":933,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":1004,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":1146,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":910,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":281,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":57,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":888,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":803,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":182,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":1226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":1287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":414,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":519,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":1140,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":1139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":774,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":562,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":821,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":1232,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":1240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":693,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":882,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":371,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":1089,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":1216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":364,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":85,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":197,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":628,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":1026,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":1268,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":1027,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":1025,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":1102,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":1177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":1247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":1289,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":52,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":901,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":1290,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":1291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":358,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":912,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":1019,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":1262,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":1251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":439,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":914,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":614,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":560,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":1178,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":1179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":1186,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":186,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":928,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":127,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":1087,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":450,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":818,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":1252,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":119,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":880,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":1009,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":809,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":1245,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":786,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":653,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":635,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":800,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":1017,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":290,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":588,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":983,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":930,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":346,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":466,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":806,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":427,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":437,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":1096,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":399,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":301,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":1094,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":1095,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":1246,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":136,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":589,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":969,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":1180,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":217,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":1047,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":643,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":817,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":1197,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":249,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":44,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":349,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":984,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":224,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":1070,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":1106,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":874,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":706,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":999,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":1085,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":1225,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":835},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"64b398c9-2e7d-11e6-ac31-8578896ef660","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[0],"tindex":"64b51f6a-2e7d-11e6-ac31-1190ae375f6b","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                {\n                    if (nodeList == null) {\n                        throw new java.lang.NullPointerException(\"NodeList must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[1],"tindex":"64b5467b-2e7d-11e6-ac31-fb0daa01b302","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[2],"tindex":"64b56d8c-2e7d-11e6-ac31-ad98987b59f4","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[3,4,5,6,7,8],"tindex":"64b56d8d-2e7d-11e6-ac31-d3a5afbad9c6","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[9,10],"tindex":"64b5949e-2e7d-11e6-ac31-a5baf3b245b6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"tindex":"64b5bbaf-2e7d-11e6-ac31-f943634beb21","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[286],"tindex":"64b5e2c0-2e7d-11e6-ac31-176cb939f4a9","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[287],"tindex":"64b609d1-2e7d-11e6-ac31-95b63cd3dc1f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[],"tindex":"64b609d2-2e7d-11e6-ac31-dde3cc34cf55","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"64b630e3-2e7d-11e6-ac31-319487cc9db7","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"64b630e4-2e7d-11e6-ac31-1d0c7f1c89e0","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n            } \n            org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[288,289],"tindex":"64b657f5-2e7d-11e6-ac31-e17a7c8e9ad0","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[290],"tindex":"64b657f6-2e7d-11e6-ac31-21f59a84a71c","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index > 0) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[291],"tindex":"64b67f07-2e7d-11e6-ac31-073ae40e2254","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[292],"tindex":"64b67f08-2e7d-11e6-ac31-8f4d75585329","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[293],"tindex":"64b67f09-2e7d-11e6-ac31-3126d2dbe835","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            if (key1 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = hash(key1, key2, key3, key4, key5);\n                    final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                            final V V = entry.getValue();\n                            decorated().removeMapping(entry, index, previous);\n                            return oldValue;\n                        } \n                        previous = entry;\n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"64b6a61a-2e7d-11e6-ac31-e53c99ddbf17","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"64b6cd2b-2e7d-11e6-ac31-c5f604f82944","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"64b6cd2c-2e7d-11e6-ac31-83440e41d9f4","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[4,294,295,296,297,298,299,300,301],"tindex":"64b6cd2d-2e7d-11e6-ac31-a58b9caeca26","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[302,303,304,305],"tindex":"64b6f43e-2e7d-11e6-ac31-b106477bacb2","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (label != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[306],"tindex":"64b6f43f-2e7d-11e6-ac31-25b16cec79e9","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"64b71b50-2e7d-11e6-ac31-ff1a814c0bac","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,11,12,13,14,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540],"tindex":"64b74261-2e7d-11e6-ac31-518e4f985701","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"64b74262-2e7d-11e6-ac31-2122a26502ba","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[541,542,543,544],"tindex":"64b74263-2e7d-11e6-ac31-1bea0b44236a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[496],"tindex":"64b76974-2e7d-11e6-ac31-a589020c7e46","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565],"tindex":"64b76975-2e7d-11e6-ac31-3df4d8f0e882","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[566,567],"tindex":"64b76976-2e7d-11e6-ac31-8b0e5ccb306f","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"64b79087-2e7d-11e6-ac31-cb66c67fda17","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"64b79088-2e7d-11e6-ac31-89a14a519c11","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value != null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"64b79089-2e7d-11e6-ac31-5572e833abc9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[568],"tindex":"64b7b79a-2e7d-11e6-ac31-914c22c204fa","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"64b7b79b-2e7d-11e6-ac31-c1539218d45d","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            if ((a == null) || (a == null)) {\n                {\n                    final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n                    for (final O O : helper) {\n                        helper.setCardinality(obj, helper.min(obj));\n                    }\n                    return helper.list();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[587,588,589,590,591],"tindex":"64b7b79c-2e7d-11e6-ac31-41d38f901c86","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"64b7dead-2e7d-11e6-ac31-5da454c7bfd4","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[592],"tindex":"64b7deae-2e7d-11e6-ac31-812c02601595","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641],"tindex":"64b805bf-2e7d-11e6-ac31-5b71b9331ace","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"64b805c0-2e7d-11e6-ac31-8341b5ea6287","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,294,295,296,297,680,681,682,683,684,685,686,687,688,689,690,7,8,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,293,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766],"tindex":"64b805c1-2e7d-11e6-ac31-f919ed132205","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"64b82cd2-2e7d-11e6-ac31-9108c090f201","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[767],"tindex":"64b82cd3-2e7d-11e6-ac31-b71de4786b89","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[768],"tindex":"64b853e4-2e7d-11e6-ac31-b5f86b5fbfe8","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[769],"tindex":"64b853e5-2e7d-11e6-ac31-35a915200a48","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[770,771,772,773,774],"tindex":"64b853e6-2e7d-11e6-ac31-8d0784d023f2","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"64b87af7-2e7d-11e6-ac31-77c156874704","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[775,776,777,778,779,290],"tindex":"64b87af8-2e7d-11e6-ac31-252903d8607c","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((end2 - end1) > (start2 - end2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"start2","end1":"end2","start2":"end2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[780],"tindex":"64b8a209-2e7d-11e6-ac31-f38bf051e1e9","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[781],"tindex":"64b8c91a-2e7d-11e6-ac31-7d4fec9c10f3","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[782],"tindex":"64b8c91b-2e7d-11e6-ac31-8b393e612a4a","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"64b8c91c-2e7d-11e6-ac31-a93a615d9dee","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"64b8c91d-2e7d-11e6-ac31-8b4f073001d8","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,270,271,272,812,813,814,815,273,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847],"tindex":"64b8f02e-2e7d-11e6-ac31-d5cc6fc536da","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867],"tindex":"64b9173f-2e7d-11e6-ac31-f3de1e98058f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"64b91740-2e7d-11e6-ac31-4d391e17f897","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[868,869,870],"tindex":"64b91741-2e7d-11e6-ac31-efa9254c41ef","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[871],"tindex":"64b93e52-2e7d-11e6-ac31-3d05a45a7654","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"64b93e53-2e7d-11e6-ac31-357ee2ee36fe","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"64b93e54-2e7d-11e6-ac31-d93cc15a389f","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914],"tindex":"64b96565-2e7d-11e6-ac31-77d2731ada02","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[452,459,462,463,465,466,467,469,470,484,485,489,497,505,506,508,509,510,512,513,515,518,519,529,532,533,536,537,538,539,540],"tindex":"64b96566-2e7d-11e6-ac31-7d2a730a925a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"64b96567-2e7d-11e6-ac31-073febed069c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"64b98c78-2e7d-11e6-ac31-23e9a371bbc0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            if (key1 != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = hash(key1, key2, key3, key4, key5);\n                    final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                            final V V = entry.getValue();\n                            decorated().removeMapping(entry, index, previous);\n                            return oldValue;\n                        } \n                        previous = entry;\n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[300,4,294,295,296,297,301],"tindex":"64b9b389-2e7d-11e6-ac31-291378a6ab5a","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[915,916,917,918,919,920,921],"tindex":"64b9b38a-2e7d-11e6-ac31-d7f7b42f858b","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"64b9b38b-2e7d-11e6-ac31-0b1c856e4de9","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"64b9b38c-2e7d-11e6-ac31-258265e3b6c8","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                {\n                    if (nodeList == null) {\n                        throw new java.lang.NullPointerException(\"NodeList must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:117","type":"CtBinaryOperatorImpl","sourcecode":"valueTransformer == null"},"failures":[922,923,924,925,926,927,928,929],"tindex":"64b9da9d-2e7d-11e6-ac31-a35400eadfb0","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"64b9da9e-2e7d-11e6-ac31-958fceff5b6a","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"64b9da9f-2e7d-11e6-ac31-f51cfb88e6e4","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[930,931,932,933,934,935,936,49,937,938,939,50,51,940,941,942,943,944],"tindex":"64b9daa0-2e7d-11e6-ac31-0b64eb9bfbd9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[569,570,571,572,573,574,945,946,575,576,577,578,579,580,581,582,947,948,949,583,584,950,951,952,1,953,585,954,955,586,956,957],"tindex":"64ba01b1-2e7d-11e6-ac31-79bee847875d","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[462,463,465,466,467,470,11,12,13,505,506,508,509,510,513,515,518,519,523,524,525],"tindex":"64ba01b2-2e7d-11e6-ac31-cf512c1a34c8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[958],"tindex":"64ba28c3-2e7d-11e6-ac31-5da7e25c76cc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[578,579,580,581,959,960,961,962,963,964,965,966,967,968,969],"tindex":"64ba28c4-2e7d-11e6-ac31-3999e6fbf426","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[],"tindex":"64ba28c5-2e7d-11e6-ac31-5d12de4038c7","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (label != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"64ba4fd6-2e7d-11e6-ac31-e1b861a2c9ee","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            if ((a == null) || (a == null)) {\n                {\n                    final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n                    for (final O O : helper) {\n                        helper.setCardinality(obj, helper.min(obj));\n                    }\n                    return helper.list();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[207,214],"tindex":"64ba76e7-2e7d-11e6-ac31-078e99e7abb4","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"64ba76e8-2e7d-11e6-ac31-377c4ca597c5","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"64ba9df9-2e7d-11e6-ac31-2ff58aa806b5","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"64ba9dfa-2e7d-11e6-ac31-0b23f2c15961","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"64bac50b-2e7d-11e6-ac31-8d10fa309bf7","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (transform == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transform"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[970],"tindex":"64bac50c-2e7d-11e6-ac31-ab35fd21de3c","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"64bac50d-2e7d-11e6-ac31-2d20e0901cd1","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[971,972,973],"tindex":"64bac50e-2e7d-11e6-ac31-ed3da3b91d96","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[925,974,975,976,977,978,979,642,643,980,981,982,983,644,984,645,985,986,987,646,988,989,990,991,992,993,647,648,994,995,996,997,649,998,650,999,1000,1001,1002,1003,1004,1005,1006,651,652,653,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,654,1022,1023,1024,1025,1026,1027,655,656,1028,657,1029,1030,658,659,1031,1032,660,661,662,663,664,1033,1034,1035,1036,1037,665,1038,1039,1040,1041,1042,666,667,668,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,669,1058,1059,1060,1061,1062,1063,670,671,1064,672,1065,1066,673,674,1067,1068,675,676,677,678,679,1069,5,3,298,1070,1071,299,4,1072,294,295,296,297,300,1073,1074,1075,1076,680,681,682,1077,1078,1079,1080,1081,1082,1083,6,1084,1085,1086,1087,1088,1089,1090,683,1091,1092,1093,1094,1095,1096,684,685,1097,686,1098,1099,687,688,1100,1101,689,690,7,8,691,1102,1103,1104,1105,692,693,694,1106,1107,1108,1109,1110,1111,695,1112,1113,1114,1115,1116,1117,1118,1119,696,1120,1121,1122,1123,1124,1125,697,698,1126,699,1127,1128,700,701,1129,1130,702,703,704,705,706,1131,1132,707,708,709,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,710,1148,1149,1150,1151,1152,1153,711,712,1154,713,1155,1156,714,715,1157,1158,716,717,718,719,720,1159,721,722,723,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,724,1175,1176,1177,1178,1179,1180,725,726,1181,727,1182,1183,728,729,1184,1185,730,731,732,733,734,1186,1187,1188,1189,1190,293,735,736,737,738,301,739,740,741,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,742,1206,1207,1208,1209,1210,1211,743,744,1212,745,1213,1214,746,747,1215,1216,748,749,750,751,752,1217,1218,1219],"tindex":"64baec1f-2e7d-11e6-ac31-e9815aae6ec0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[923],"tindex":"64bb1230-2e7d-11e6-ac31-9bfee3e372b1","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[931,932,933,934,935,936,49,937,938,939,50,51,940,941,942,943,944,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,64,1231,768,1232,65,66,1233,1234,1235,1236,1237,1238,1239],"tindex":"64bb1231-2e7d-11e6-ac31-3d388c0ddc98","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"64bb1232-2e7d-11e6-ac31-23a5e05c2118","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[1240,1241,1242,1243,1244],"tindex":"64bb3943-2e7d-11e6-ac31-61cdc9ebdc61","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index > 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"64bb3944-2e7d-11e6-ac31-c7501b33f047","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1020","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((index + (int)), obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1245],"tindex":"64bb3945-2e7d-11e6-ac31-3388dd6a7029","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"64bb3946-2e7d-11e6-ac31-55686a9fd2cd","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1246],"tindex":"64bb6057-2e7d-11e6-ac31-43d9c31379ef","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[974,976,985,988,990,999,1008,1009,1011,1012,1013,1016,654,1044,1045,1047,1048,1049,1052,1054,1057,669,1078,1079,1081,1082,1083,1085,1087,1090,683,1104,1131,1161,1162,1164,1165,1166,1169,1171,1174,724,1187,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,756],"tindex":"64bb6058-2e7d-11e6-ac31-3d1123b66504","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1257,93,94,1258,95,1259,96,1260,1261,1262],"tindex":"64bb6059-2e7d-11e6-ac31-ed3362c2ca5f","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"64bb876a-2e7d-11e6-ac31-115f0f058129","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[1263,289,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,557,1286,1287,1288,1289,1290,1291,1292,1293,1294,558,1295,1296,559,560,1297,1298,561,562,563,564,565],"tindex":"64bb876b-2e7d-11e6-ac31-8581acacde9a","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[1262],"tindex":"64bb876c-2e7d-11e6-ac31-85812436ea6f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}