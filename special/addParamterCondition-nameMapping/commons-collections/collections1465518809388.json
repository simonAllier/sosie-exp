{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":54,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":555,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalEmptyCollectionExists":328,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":589,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":461,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":615,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":565,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyListIteratorIsIndeedEmpty":318,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":98,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":265,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":644,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":562,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":264,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":531,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":212,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":544,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":207,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":62,"org.apache.commons.collections4.CollectionUtilsTest.collect":338,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":127,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":170,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":646,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":76,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":218,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":398,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":283,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":550,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":431,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":664,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":69,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalFullCollectionExists":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":23,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":248,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":321,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenSet":319,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":137,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":147,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":580,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":58,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":585,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":101,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":506,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":529,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":510,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":547,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":386,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.CollectionUtilsTest.transform2":657,"org.apache.commons.collections4.CollectionUtilsTest.transform1":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":572,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectEqualsSelf":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":413,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":107,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":647,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":509,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":628,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":367,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":157,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":106,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":606,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":281,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":245,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":215,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":191,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":243,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":311,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":152,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":80,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":665,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":493,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":175,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":638,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":536,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":357,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":409,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":63,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":119,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":520,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":641,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":621,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":228,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":262,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":637,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":419,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":55,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":556,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":337,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":52,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":651,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":498,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":21,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":160,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":120,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":482,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":457,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":500,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":668,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":103,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":114,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":122,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":453,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":653,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":100,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":296,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":49,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":312,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":259,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":155,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":162,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":497,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":543,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":294,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":293,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":290,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":465,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":405,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":563,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":77,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":435,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":238,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":67,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":202,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":559,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":374,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":255,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":595,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":73,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":429,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":596,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":597,"org.apache.commons.collections4.list.TreeListTest.testRemove":373,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenRemove":315,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":389,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":88,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":542,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":406,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":513,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":59,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":399,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":472,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":128,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":669,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":37,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":71,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":403,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":532,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":203,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":249,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":378,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":622,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":371,"org.apache.commons.collections4.map.LRUMapTest.testClone":366,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":410,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":604,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":564,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":603,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":681,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":586,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":102,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":143,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":658,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":299,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":587,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":172,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":614,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":660,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":617,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":455,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":560,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":414,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":303,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":459,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":620,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":16,"org.apache.commons.collections4.list.TreeListTest.testListEquals":385,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":481,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":427,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":65,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":134,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":253,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":528,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":582,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":444,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":495,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":527,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":683,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":508,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":51,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":138,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":390,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":474,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":598,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":613,"org.apache.commons.collections4.IteratorUtilsTest.testToList":140,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":340,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":356,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":136,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":611,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":233,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":454,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":309,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":165,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":518,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":567,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":297,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":557,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":552,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":214,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":89,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":507,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":676,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":181,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":577,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsSelfHashCode":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":97,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":231,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":254,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":375,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":150,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":488,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":291,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":677,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":640,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":282,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":418,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":623,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":361,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":64,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":292,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":404,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":566,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":261,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":169,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":168,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":642,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":451,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":230,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":590,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":490,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":99,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":224,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":362,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":129,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":594,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":239,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemoveThenSet":320,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":568,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":643,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":448,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":154,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":210,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":450,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":24,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":384,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":666,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":141,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":650,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":504,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":201,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":383,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":251,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":263,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":558,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":477,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":131,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":674,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":423,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":257,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":467,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":279,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":584,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":19,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":369,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":372,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":684,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":229,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":511,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":267,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":534,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":475,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":605,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":341,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":149,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":609,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":630,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":0,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":442,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyIterator":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":579,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":195,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":396,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":206,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":156,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":401,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":388,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":492,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":256,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":246,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":479,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator":313,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":57,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":522,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":526,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":4,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":221,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":505,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":392,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":176,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":471,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":345,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":627,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":182,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":344,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":317,"org.apache.commons.collections4.list.TreeListTest.testBug35258":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":576,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":659,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":428,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":575,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":213,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":306,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":400,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":209,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":408,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":610,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":501,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":411,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":652,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":535,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":633,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":46,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":476,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":438,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":521,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":36,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":204,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":236,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":470,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":426,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":581,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSerializeDeserializeThenCompare":332,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":355,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":600,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":26,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":111,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":354,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":132,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":242,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":485,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":523,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":663,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":133,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":112,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":333,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":192,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":27,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":222,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":269,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":635,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":124,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":130,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":232,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":289,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":216,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":554,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":540,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":616,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":648,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":447,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":667,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":74,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":270,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":599,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":186,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":514,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":108,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":145,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":537,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":433,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":342,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":96,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemove":324,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":360,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":194,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":417,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":661,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":237,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":649,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":443,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":430,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":629,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":235,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":462,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":240,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":618,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":234,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":682,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":458,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":247,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":219,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":339,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":480,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":139,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":258,"org.apache.commons.collections4.map.LRUMapTest.testLRU":363,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":308,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":439,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":116,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":271,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":499,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":208,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsContract":330,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":301,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":227,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":516,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":545,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":645,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":304,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":351,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":350,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":18,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testFullIterator":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":456,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":158,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":607,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":56,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEqualsNull":327,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":178,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":44,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":551,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":353,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":548,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":15,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":167,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":489,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":561,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSimpleSerialization":329,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":473,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":538,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":314,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":675,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":486,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":420},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"f637f2ce-2ea2-11e6-b533-add61ed42636","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"f657fdef-2ea2-11e6-b533-d90c3ebe5ff8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"f6582500-2ea2-11e6-b533-8f0ea657a9bc","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"f6584c11-2ea2-11e6-b533-1588e9cbb3f5","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"f66125b2-2ea2-11e6-b533-952ab9bbbae3","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f66125b3-2ea2-11e6-b533-6b76841fd073","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f66396b4-2ea2-11e6-b533-bda9d1f10658","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[96,97,98,99,100],"tindex":"f663bdc5-2ea2-11e6-b533-37b067e209d8","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[101],"tindex":"f663bdc6-2ea2-11e6-b533-5ffa3311d7c3","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[102,103],"tindex":"f6689fc7-2ea2-11e6-b533-996e287f8005","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f66d5ab8-2ea2-11e6-b533-ff023c9e845a","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f66d5ab9-2ea2-11e6-b533-b3bc50c1c303","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[104,105],"tindex":"f66d5aba-2ea2-11e6-b533-4b4983a8d19e","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set == null) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"f674117b-2ea2-11e6-b533-0564d4cd5c75","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[106],"tindex":"f674117c-2ea2-11e6-b533-fbeaf7de80f9","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[19,107,65,108],"tindex":"f674388d-2ea2-11e6-b533-0356741e7747","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[109,110,111,112,113,114],"tindex":"f674388e-2ea2-11e6-b533-f5fe88ae9397","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[115,116],"tindex":"f6776cdf-2ea2-11e6-b533-2d02ed9b352d","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[117,118,119,120,121],"tindex":"f6776ce0-2ea2-11e6-b533-41e600b3e6b7","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:214","type":"CtBinaryOperatorImpl","sourcecode":"get instanceof java.util.Map"},"failures":[122,123],"tindex":"f67a7921-2ea2-11e6-b533-0de2f940cb0b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"f67f5b22-2ea2-11e6-b533-e9fd85618f2d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"f67f8233-2ea2-11e6-b533-6ffe55fc3d16","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[124,125,126,127,128,129,130,131,132,133],"tindex":"f67f8234-2ea2-11e6-b533-0561b2f89cb6","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f67f8235-2ea2-11e6-b533-b9fc29b2a675","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[134,135],"tindex":"f682b686-2ea2-11e6-b533-e372aea3fb1a","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f68a0987-2ea2-11e6-b533-4558a99a19cd","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (defaultValue == null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[136,137,138,139],"tindex":"f68a3098-2ea2-11e6-b533-bd20c3477ad3","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[140,141,142],"tindex":"f68e0129-2ea2-11e6-b533-1936ff8626ed","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[143,144,145,146,147,148,149,150,151,152,153],"tindex":"f693cd8a-2ea2-11e6-b533-f7bbffd59d79","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"f69728eb-2ea2-11e6-b533-573d89bf5020","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"tindex":"f6974ffc-2ea2-11e6-b533-85fe568a4f70","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[257],"tindex":"f6974ffd-2ea2-11e6-b533-e516e9566e17","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f69f8d5e-2ea2-11e6-b533-b12032493be8","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f69fb46f-2ea2-11e6-b533-c19ef5612b01","method":{"position":"org.apache.commons.collections4.map.SingletonMap:231","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[258,259,260,261],"tindex":"f69fb470-2ea2-11e6-b533-e1dc2c5c33f7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274],"tindex":"f69fb471-2ea2-11e6-b533-d93ce1797fad","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302],"tindex":"f6a0ecf2-2ea2-11e6-b533-11894c454066","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[303],"tindex":"f6a11403-2ea2-11e6-b533-bda4fd2c2640","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f6a35df4-2ea2-11e6-b533-ebe81a42a1d7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[304],"tindex":"f6a69245-2ea2-11e6-b533-2b6a7ddc82d7","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[305],"tindex":"f6a6b956-2ea2-11e6-b533-01f2a7102ce5","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[306],"tindex":"f6a6e067-2ea2-11e6-b533-5747033d197e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[255,256],"tindex":"f6ad9728-2ea2-11e6-b533-f35894174249","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"f6b27929-2ea2-11e6-b533-f90e765e3bbc","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[307,308,236,237,309,238,239,241,243,244,245,310,246,247,248,249,250,251,311,252,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"f6b2792a-2ea2-11e6-b533-6949c56fa7f3","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[201,202,333,334,335,336,337,206],"tindex":"f6b8458b-2ea2-11e6-b533-97acd3d3e73b","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"f6ba686c-2ea2-11e6-b533-0b8ec8c0031b","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"f6ba686d-2ea2-11e6-b533-0d2eef855428","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"f6c0a9fe-2ea2-11e6-b533-db06fc5954de","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (to == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"to"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[110],"tindex":"f6c0a9ff-2ea2-11e6-b533-4b83906422f2","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[338],"tindex":"f6c14640-2ea2-11e6-b533-13d01ddfb152","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[339],"tindex":"f6c16d51-2ea2-11e6-b533-ffc5ab873e9f","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[340,341],"tindex":"f6c16d52-2ea2-11e6-b533-b5840562231b","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f6c45383-2ea2-11e6-b533-97dbc36136aa","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f6c45384-2ea2-11e6-b533-25feb433fee4","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f6c45385-2ea2-11e6-b533-9bbae15698b0","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[342,343,344],"tindex":"f6c45386-2ea2-11e6-b533-6586f769078d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f6c47a97-2ea2-11e6-b533-5d848f9d12b1","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[345,345,346,347,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"f6cb5868-2ea2-11e6-b533-e3e0a0ad01ec","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f6cedad9-2ea2-11e6-b533-138a73ced44a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[363,364,365,366,367,368,369,370,371,372],"tindex":"f6cf01ea-2ea2-11e6-b533-4da79d74de01","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408],"tindex":"f6cf28fb-2ea2-11e6-b533-8373c2a2c02c","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[350,351,356,362],"tindex":"f6cf28fc-2ea2-11e6-b533-07161ea25c4a","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,154,155,462,156,157,463,158,464,465,159,466,467,468,469],"tindex":"f6d124cd-2ea2-11e6-b533-c385dac9addd","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[470],"tindex":"f6d124ce-2ea2-11e6-b533-efe618b18fc7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[373,391,394,395,396,381,403,404,405,406],"tindex":"f6d14bdf-2ea2-11e6-b533-eb3ae8f3bd35","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[471],"tindex":"f6d654f0-2ea2-11e6-b533-2733864d9f79","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[472,473],"tindex":"f6d9d761-2ea2-11e6-b533-5942d6b7b5fc","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558],"tindex":"f6d9d762-2ea2-11e6-b533-050259241690","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[559,560],"tindex":"f6d9d763-2ea2-11e6-b533-d7d39c81be7b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"f6dd80e4-2ea2-11e6-b533-d1b8458282a7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:382","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[],"tindex":"f6dd80e5-2ea2-11e6-b533-996352a27de0","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[561,562,563,446,160,154,155,156,157,158,159,564,167,161,162,163,164,165,166],"tindex":"f6dda7f6-2ea2-11e6-b533-f9303dd0b9ca","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[411,443,444,445,458,459,460,461,446,447,448,449,456,457,154,155,462,156,157,463,158,464,465,159,466,467,468,565,566,469,567,568,569,570,564,571,572,573,574,575,576,577,161,162,578,163,164,579,165,580,581,166,582,583,584,585,586,587],"tindex":"f6dda7f7-2ea2-11e6-b533-418cc6aca14b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"f6ddcf08-2ea2-11e6-b533-ad0a8b2713d8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"f6ddcf09-2ea2-11e6-b533-1738316f2932","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"f6ddcf0a-2ea2-11e6-b533-efa0f2cd30bc","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"f6ddf61b-2ea2-11e6-b533-ef59a0da603d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[588,589,590],"tindex":"f6ddf61c-2ea2-11e6-b533-dd2164707a48","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[177,216],"tindex":"f6de1d2d-2ea2-11e6-b533-61ec2f19f67f","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().listIterator(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639],"tindex":"f6de1d2e-2ea2-11e6-b533-cd8e0d0add83","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f6de1d2f-2ea2-11e6-b533-d5367adf1386","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f6de1d30-2ea2-11e6-b533-b3d48eb03a43","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[640,641],"tindex":"f6de4441-2ea2-11e6-b533-45739596a306","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"f6de4442-2ea2-11e6-b533-5b4f222333a2","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"f6e1edc3-2ea2-11e6-b533-2da0485b3ae0","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"f6e1edc4-2ea2-11e6-b533-71acb51c23dd","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[642],"tindex":"f6e1edc5-2ea2-11e6-b533-7593d9f1f203","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[],"tindex":"f6e1edc6-2ea2-11e6-b533-5d99bca57aaa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[643,644,645,646,647,648,649,650,651,652,653,654,655],"tindex":"f6e214d7-2ea2-11e6-b533-b1ef49738fe3","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (transformer != null)"},"failures":[656,657],"tindex":"f6e214d8-2ea2-11e6-b533-6560b7d907b9","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[658,659,660,661,662],"tindex":"f6e214d9-2ea2-11e6-b533-87df082d36cb","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"f6e23bea-2ea2-11e6-b533-ade3c3d7700a","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[663,664,482,483,665,666,667,668],"tindex":"f6e23beb-2ea2-11e6-b533-59d82629aa36","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[669,670,659,671,672,673,674,675,676,642],"tindex":"f6e23bec-2ea2-11e6-b533-09e76d44e405","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"f6e23bed-2ea2-11e6-b533-fbd47e3e2afc","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f6e23bee-2ea2-11e6-b533-074f855c36c0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[129,677,678,679,680,681,470,682,683,684],"tindex":"f6e262ff-2ea2-11e6-b533-07f6935140f5","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f6e26300-2ea2-11e6-b533-c5f8dddaa23d","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f6e26301-2ea2-11e6-b533-cb018f90f247","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}