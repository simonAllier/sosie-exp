{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":968,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":255,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":3,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":802,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":364,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":394,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":395,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":806,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":16,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":516,"org.apache.commons.collections4.CollectionUtilsTest.collect":865,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":520,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":522,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":521,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":542,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":419,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":575,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":21,"org.apache.commons.collections4.CollectionUtilsTest.get":433,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":173,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":903,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":485,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":567,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":538,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":744,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":718,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":458,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":922,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":155,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":758,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":732,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":69,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":90,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":138,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":603,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":797,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":92,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":544,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":66,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":881,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":323,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":845,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":428,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":851,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":808,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":377,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":271,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":608,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":265,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":183,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":8,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":589,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":705,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":389,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":809,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":908,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":890,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":528,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":462,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":766,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":915,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":27,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":440,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":296,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":657,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":698,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":40,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":697,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":696,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":97,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":456,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":18,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":443,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":904,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":733,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":490,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":253,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":555,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":384,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":898,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":245,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":570,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":737,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":371,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":739,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":738,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":842,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":849,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":286,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":753,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":143,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":134,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":86,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":158,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":798,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":58,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":644,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":452,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":839,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":224,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":777,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":373,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":721,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":778,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":482,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":300,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":351,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":477,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":54,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":891,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":327,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":750,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEmptyMapCompatibility":417,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":892,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":689,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":316,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":503,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":114,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":232,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":941,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":731,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":365,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":289,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":241,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":109,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":6,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":560,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":791,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":855,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":85,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":536,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":586,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":872,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":149,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":812,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSimpleSerialization":912,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":953,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":906,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":776,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":210,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":292,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":878,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":533,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":304,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":11,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":252,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":361,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":357,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":710,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":916,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":660,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":360,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":583,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":184,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":449,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":549,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":545,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":460,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":727,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":821,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":967,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":332,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":341,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":741,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEmptyMapCompatibility":413,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":885,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":807,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":133,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":661,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":621,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":122,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":321,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":711,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":749,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":491,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":889,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":223,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":902,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":91,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":767,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":645,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":919,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":771,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":399,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":622,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":101,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":780,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":781,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":779,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":336,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":746,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":593,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":123,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":532,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":202,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":818,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":827,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":33,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":310,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":231,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":31,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":165,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":945,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":216,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":647,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":254,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":700,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":280,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":956,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":331,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":848,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":218,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":269,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":937,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":319,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":274,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":509,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":240,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":248,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":559,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":120,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":74,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":640,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":408,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":844,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":369,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":42,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":242,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":939,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":338,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":318,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":846,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":900,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":454,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":659,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":680,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":126,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":641,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":835,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":444,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":759,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":267,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":931,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":442,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":817,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":46,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":814,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":847,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":414,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":932,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":566,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":770,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":524,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":628,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":627,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":626,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":571,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":790,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":556,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":182,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":457,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":194,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":353,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":722,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":856,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":678,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":576,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":841,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":437,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":225,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":662,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":688,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":800,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":880,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSimpleSerialization":424,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":824,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":313,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":893,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":869,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":354,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":237,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":432,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":88,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":77,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":701,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":78,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":407,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":719,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":64,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":617,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":451,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":356,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":337,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":445,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":653,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":624,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":748,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":447,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":48,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":446,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":928,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":921,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":329,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":633,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":612,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":9,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":486,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":909,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":450,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":930,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":569,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":763,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":400,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":944,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":209,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":496,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":129,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":495,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":864,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":760,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364":412,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":67,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":666,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEmptyMapCompatibility":425,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":693,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":565,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":118,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":422,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":933,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":822,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":378,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":879,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":789,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":568,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":128,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":695,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":189,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":345,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":534,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":84,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":572,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":578,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":894,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":895,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":838,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":896,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":632,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":877,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":960,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":288,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":330,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":815,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":882,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":957,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":684,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":261,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":236,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":258,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":135,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":729,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":244,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":852,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":459,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":511,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":266,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":874,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEmptyMapCompatibility":887,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":439,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":287,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":703,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":60,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":843,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":832,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":754,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":720,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":949,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":32,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":886,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":426,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":613,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":691,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":875,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":529,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":966,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":730,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":883,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":540,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":588,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":235,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":502,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":765,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":761,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":203,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":233,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":466,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":582,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":581,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":785,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":786,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":858,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":751,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":599,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":375,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":959,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":347,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":131,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":940,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":89,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":49,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":125,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":519,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":320,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":362,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":828,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":518,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":95,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":664,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":826,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":139,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":324,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":110,"org.apache.commons.collections4.CollectionUtilsTest.transform2":382,"org.apache.commons.collections4.CollectionUtilsTest.transform1":381,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":24,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":169,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":573,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":284,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":105,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":585,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":708,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":552,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":863,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":859,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":472,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":740,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":470,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":176,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":222,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":834,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":393,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":947,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":831,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":132,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":293,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":591,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":592,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":94,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":590,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":816,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":618,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSimpleSerialization":416,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":546,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":955,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":531,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":36,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":745,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":455,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":836,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":186,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":742,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":326,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":93,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":285,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":79,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":343,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":513,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":656,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":854,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":418,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":291,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":964,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":434,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":946,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":636,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":950,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":510,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":111,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":230,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":489,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":857,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":187,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":219,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":601,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":305,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":702,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":51,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":897,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":201,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":314,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":339,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":390,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":47,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":130,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":783,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":784,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":468,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":736,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":674,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":14,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":672,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":297,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":888,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":270,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":782,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":315,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":294,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":677,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":716,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":715,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":714,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":204,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":161,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":178,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":606,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":925,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":352,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":970,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":871,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":334,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":735,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":475,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":965,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":473,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":911,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":136,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":651,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":602,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":650,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":649,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":430,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":563,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":597,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":281,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":596,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":595,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":195,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":631,"org.apache.commons.collections4.ListUtilsTest.testSubtract":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":512,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":717,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":383,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":679,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":108,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":234,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":829,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":146,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":500,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":752,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":943,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":642,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":115,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSerializeDeserializeThenCompare":907,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":464,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":725,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":634,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":199,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":299,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":901,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":153,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":185,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":322,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":530,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":358,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":298,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":350,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":217,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":246,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSimpleSerialization":420,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":683,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":34,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":681,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":682,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":71,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":600,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":43,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":927,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":398,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":870,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":713,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":923,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":840,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":478,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":884,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":376,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":756,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":860,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":372,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":312,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":333,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalEmptyCollectionExists":913,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":141,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":349,"org.apache.commons.collections4.map.SingletonMapTest.testClone":918,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":924,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":819,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":259,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":228,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":905,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":463,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":837,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":80,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":811,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":403,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":935,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":551,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":958,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":805,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":663,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":676,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":726,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":23,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":813,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":723,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":952,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":53,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":667,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":282,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":668,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":669,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":515,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":655,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":936,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":961,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":508,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":611,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalFullCollectionExists":914,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":769,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":796,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":279,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":55,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":686,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":948,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":926,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":262,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":348,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":899,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":41,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":792,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":793,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":652,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":794,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":401,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator":411,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":671,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":192,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":406,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":481,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":951,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":584,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":96,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":5,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":643,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":728,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":685,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEmptyMapCompatibility":421,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":607,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":673,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":629,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":340,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":431,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":724,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":404,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":166,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":325,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":706,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":803,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":150,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":743,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":25,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":172,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":648,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":543,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":548,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":309,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":220,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":243,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":208,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":505,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":506,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":151,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":507,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":527,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":850,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":876,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":910,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":250,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":113,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":112,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":707,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":70,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":263,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":969,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":275,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":639,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":963,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":550,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":579,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":307,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":637,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":638,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":174,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":171,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":249,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":929,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":435,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":934,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":317,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":747,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":82,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":26,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":762,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":488,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":604,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":764,"org.apache.commons.collections4.CollectionUtilsTest.isFull":380,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":954,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":283,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":116,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":917,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":476,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSimpleSerialization":427,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":273,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":873,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":65,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":164,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":268,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":191,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":654,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":830,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":119,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":124,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":366,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":374,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":335,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":833,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":177,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":487,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":523,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":391,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":665,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":392,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":44,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":256,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":229,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":868,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":768,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":866,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":344,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":215,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":690,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":825,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":920,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":810,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":37,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":499,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":504,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":788,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":795,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":787,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":635,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":820,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":694,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":867,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":363,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":278,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":734,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":107,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":12,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":658,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":558,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":773,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":772,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":301,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":68,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":594,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":801,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":498,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":175,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":605,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":295,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":625,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":127,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":646,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":276,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":609,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":494,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":541,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":539,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":239,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":206,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":853,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":823,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":774,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":461,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":526,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":251,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":429,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":610,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":117,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":804,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":423,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":38,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":385,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":386,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":29,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":942,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":861,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":441,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":396,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":598,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":302,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":342,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":553,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":409,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":514,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":387,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":22,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":410,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":388,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":535,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":19,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":938,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":862,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":147,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":757,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":121,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":962,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":620},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d20526eb-3e44-11e6-89cf-0fcb0ea6e8f2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[0,1,2,3,4,5,6],"tindex":"d2059c1c-3e44-11e6-89cf-313aabb16c72","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"d205ea3d-3e44-11e6-89cf-d9d70d8c66c3","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d205ea3e-3e44-11e6-89cf-4f8d5851f0b3","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.Get<K, V>.remove(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"d206114f-3e44-11e6-89cf-3778632e6833","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[28,29,30,31],"tindex":"d2061150-3e44-11e6-89cf-7fea86c50f81","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[32,33,34],"tindex":"d2061151-3e44-11e6-89cf-c7341290511c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[35,36,37,38,39],"tindex":"d2065f72-3e44-11e6-89cf-fbb87dd07e5b","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtBinaryOperatorImpl","sourcecode":"(trueClosure == null) || (falseClosure == null)"},"failures":[40],"tindex":"d2068683-3e44-11e6-89cf-333f6a71d3f6","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if ((falseClosure == null) || (trueClosure == null)) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseClosure":"trueClosure","trueClosure":"falseClosure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[41],"tindex":"d2068684-3e44-11e6-89cf-a337c8593183","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d2068685-3e44-11e6-89cf-5bedfa877910","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[42],"tindex":"d2068686-3e44-11e6-89cf-77437722ae23","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"d206ad97-3e44-11e6-89cf-5f3b5b9ca190","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d206ad98-3e44-11e6-89cf-374b2101e0d1","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"d206ad99-3e44-11e6-89cf-8bbbebb9ed24","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[34],"tindex":"d206ad9a-3e44-11e6-89cf-510e2859fb7e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"d206d4ab-3e44-11e6-89cf-6d6f45319bd6","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,8,9,10,11,12,13,14,15,16,17,18,110,19,20,21,22,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,23,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,24,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,25,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,26,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,27,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374],"tindex":"d206d4ac-3e44-11e6-89cf-21cf70fd49b9","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"d206fbbd-3e44-11e6-89cf-9fdb1241c1d1","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[375,376,377,378,379],"tindex":"d206fbbe-3e44-11e6-89cf-73a0b6712390","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[380],"tindex":"d206fbbf-3e44-11e6-89cf-953a13d73e5e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"d206fbc0-3e44-11e6-89cf-3f7010bad3e7","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[381,382],"tindex":"d20722d1-3e44-11e6-89cf-ffb9fb9cd895","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[383,384,385,386,387,388,389,390,391,392,30,393,394,395,396,397,398,399,400,401,402,402,403,404,404,405,406,407],"tindex":"d20722d2-3e44-11e6-89cf-9f99a26ef207","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"d20722d3-3e44-11e6-89cf-35f8cab6a46a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[408],"tindex":"d20722d4-3e44-11e6-89cf-f9ecede56aab","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[409],"tindex":"d20722d5-3e44-11e6-89cf-916a733e4f49","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[410],"tindex":"d20749e6-3e44-11e6-89cf-0de943aee45d","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,70,426,427],"tindex":"d20749e7-3e44-11e6-89cf-6bd49e280835","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[428,429,430,431],"tindex":"d20749e8-3e44-11e6-89cf-e7ed5be34f34","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"d20770f9-3e44-11e6-89cf-db46b428ebba","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[432],"tindex":"d20770fa-3e44-11e6-89cf-f91f2e775d0f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[433,371,434,41],"tindex":"d207980b-3e44-11e6-89cf-7992bea3b46e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,2,477,3,478,4,5,6],"tindex":"d207980c-3e44-11e6-89cf-1d9faf24c9cc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            if (node == null) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n                    if (node == null) {\n                        rval = null;\n                    } else if ((node.getRight(dataElement)) != null) {\n                        rval = leastNode(node.getRight(dataElement), dataElement);\n                    } else {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                        while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                            child = parent;\n                            parent = parent.getParent(dataElement);\n                        }\n                        rval = parent;\n                    }\n                    return rval;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"d207980d-3e44-11e6-89cf-1ffcc42f3488","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[438,439,440,441,442,444,460,461,462,463,464,466,467,468,469],"tindex":"d207bf1e-3e44-11e6-89cf-9d51b4533126","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[479,480],"tindex":"d207bf1f-3e44-11e6-89cf-61d7ecacddaf","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d207bf20-3e44-11e6-89cf-81070f6573e0","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.Get<K, V>.remove(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"d207bf21-3e44-11e6-89cf-efaa062003c8","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[481,32,33,34,409],"tindex":"d207bf22-3e44-11e6-89cf-5551399a7afd","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[482],"tindex":"d207e633-3e44-11e6-89cf-a18338b24e3f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d207e634-3e44-11e6-89cf-a1762c8f2f8d","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"d207e635-3e44-11e6-89cf-5be8b06ac599","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d207e636-3e44-11e6-89cf-51311a3a0cbc","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523],"tindex":"d207e637-3e44-11e6-89cf-1d5060fc9901","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[524,525],"tindex":"d2080d48-3e44-11e6-89cf-ab5de751d7e1","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[526,432],"tindex":"d2080d49-3e44-11e6-89cf-5595ea7f7ed2","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d2080d4a-3e44-11e6-89cf-496bd7f6eecd","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[],"tindex":"d2080d4b-3e44-11e6-89cf-65d16f799997","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            if (node == null) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n                    if (node == null) {\n                        rval = null;\n                    } else if ((node.getRight(dataElement)) != null) {\n                        rval = leastNode(node.getRight(dataElement), dataElement);\n                    } else {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                        while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                            child = parent;\n                            parent = parent.getParent(dataElement);\n                        }\n                        rval = parent;\n                    }\n                    return rval;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[527,528,529,530,531,532,533,534,535,536,537,538,539,540,541],"tindex":"d208345c-3e44-11e6-89cf-7f530d8c019a","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[542],"tindex":"d208345d-3e44-11e6-89cf-6144dfd01141","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[543],"tindex":"d208345e-3e44-11e6-89cf-2d908b007c33","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"d208345f-3e44-11e6-89cf-39a127ded602","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[123],"tindex":"d2083460-3e44-11e6-89cf-bb2ce2c3bc0c","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"d2085b71-3e44-11e6-89cf-47649e9cf9b8","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[32],"tindex":"d2085b72-3e44-11e6-89cf-1590c87f5626","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d2085b73-3e44-11e6-89cf-67a50989a79d","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[544],"tindex":"d2088284-3e44-11e6-89cf-3118a90f9d6a","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[440,451,452,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,47,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,33,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764],"tindex":"d2088285-3e44-11e6-89cf-d5f1f8e8a2b5","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[765,766,677,767,768,769,770,771,772,773,774,775,776],"tindex":"d2088286-3e44-11e6-89cf-1b2af8f554b3","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"d2088287-3e44-11e6-89cf-a3079e5a72d8","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"d2088288-3e44-11e6-89cf-4d7c3880534e","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800],"tindex":"d208a999-3e44-11e6-89cf-dfb538ee015c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[801],"tindex":"d208a99a-3e44-11e6-89cf-237c033d5e27","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"d208a99b-3e44-11e6-89cf-19bab6cedf3c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[802,803],"tindex":"d208a99c-3e44-11e6-89cf-bf2127843c75","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823],"tindex":"d208d0ad-3e44-11e6-89cf-ff4597a3310a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[384],"tindex":"d208d0ae-3e44-11e6-89cf-4f736bcd03ec","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[824],"tindex":"d208d0af-3e44-11e6-89cf-4d1514a8b86b","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < end) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"d208d0b0-3e44-11e6-89cf-05eb431392cd","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[825],"tindex":"d208d0b1-3e44-11e6-89cf-3141789f2e8b","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[400,401],"tindex":"d208d0b2-3e44-11e6-89cf-0d60c0366e66","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d208f7c3-3e44-11e6-89cf-4320153af4bf","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,44,844,43,54,55,57,845,53],"tindex":"d208f7c4-3e44-11e6-89cf-45d3b7d14710","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[846],"tindex":"d208f7c5-3e44-11e6-89cf-49d7fd811128","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"d208f7c6-3e44-11e6-89cf-e3c850e9bf50","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(size(), coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862],"tindex":"d208f7c7-3e44-11e6-89cf-6b3d8ffc5699","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[42,863],"tindex":"d2091ed8-3e44-11e6-89cf-1351c935e933","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[382,864,865],"tindex":"d2091ed9-3e44-11e6-89cf-ed4f5d8fb2cc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d2091eda-3e44-11e6-89cf-f1d369bd0508","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[866,867,868,869,376,870,871,872,377,873,874,875,876,877],"tindex":"d2091edb-3e44-11e6-89cf-9fbadbaa47a9","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[878,879,844,43,44,880,881,882,883,45,884,46,885,47,48,49,50,886,51,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,575,576,906,907,908,909,910,911,912,913,914],"tindex":"d20945ec-3e44-11e6-89cf-979dad6cf2be","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[915,916],"tindex":"d20945ed-3e44-11e6-89cf-7f9866ad12c0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d20945ee-3e44-11e6-89cf-51e78b41f060","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"d20945ef-3e44-11e6-89cf-89e14f97b559","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[917],"tindex":"d20945f0-3e44-11e6-89cf-31b8d7e1a69f","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[918,765,766,677,767,768,770,771,919],"tindex":"d20945f1-3e44-11e6-89cf-ef89f39e244a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"d20945f2-3e44-11e6-89cf-019c8d959d8b","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[920,921,922,923,924,925,926,927,928,929,930],"tindex":"d2096d03-3e44-11e6-89cf-29dd3516dcdf","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[918,765,766,677,767,768,769,770,771,772,773,774,775,776],"tindex":"d2096d04-3e44-11e6-89cf-699d15fbe68f","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d2096d05-3e44-11e6-89cf-d3e8d2f2aefb","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964],"tindex":"d2096d06-3e44-11e6-89cf-f1a17f254246","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"d2096d07-3e44-11e6-89cf-63553987bd83","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d2099418-3e44-11e6-89cf-9d649b075b6f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[933,950],"tindex":"d2099419-3e44-11e6-89cf-d3b801bd2ad7","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[965],"tindex":"d209941a-3e44-11e6-89cf-6501385b2c11","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"d209941b-3e44-11e6-89cf-a30b46f25604","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[966],"tindex":"d209941c-3e44-11e6-89cf-6b5644e32774","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[967,968],"tindex":"d209941d-3e44-11e6-89cf-753e630353c7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[969,970],"tindex":"d209bb2e-3e44-11e6-89cf-e1c5e36702e0","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467233398335/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}