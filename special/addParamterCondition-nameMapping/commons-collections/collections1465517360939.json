{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":19,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":373,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":447,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":123,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":174,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":196,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":342,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":350,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":349,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":450,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":429,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":294,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":289,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":255,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":515,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":121,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":28,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":138,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":105,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":495,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":40,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":298,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":361,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":404,"org.apache.commons.collections4.CollectionUtilsTest.get":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":60,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":102,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":422,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":4,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":480,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":90,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":23,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":63,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":158,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains3":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":0,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":276,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":275,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":189,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":155,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":229,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":197,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":345,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsNull":445,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":171,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":402,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":425,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":129,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":405,"org.apache.commons.collections4.CollectionUtilsTest.intersection":152,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":179,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":36,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":29,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":348,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":410,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":257,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":520,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":178,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":313,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":431,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":443,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":190,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":244,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":11,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":288,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":17,"org.apache.commons.collections4.map.CompositeMapTest.testPut":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":81,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":128,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":377,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.map.CompositeMapTest.testGet":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":34,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":524,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":322,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":432,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":493,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":341,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":250,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":420,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":240,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":419,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":127,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":187,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":243,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":147,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":462,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":114,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":523,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":223,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":287,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":328,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":161,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":230,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":49,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":212,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":483,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":366,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":267,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":41,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":149,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":489,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":490,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":526,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":32,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":283,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":358,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":37,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":312,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":52,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":488,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":471,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":359,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":166,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":96,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":35,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":337,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":453,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":225,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":215,"org.apache.commons.collections4.map.LRUMapTest.testClone":458,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":374,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":479,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":382,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":363,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":306,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":333,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":434,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":518,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":506,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":308,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":198,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":77,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":428,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":525,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":208,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":24,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":251,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":338,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":387,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":103,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":521,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":264,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":435,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":132,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":214,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":18,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":381,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":281,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":510,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":472,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":446,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":467,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":386,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":331,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":385,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":516,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":68,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":172,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":140,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":116,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":135,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":139,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":192,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":13,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":316,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":498,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":369,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":258,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":325,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":403,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":217,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":263,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":501,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":442,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":207,"org.apache.commons.collections4.ListUtilsTest.testHashCode":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":343,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":486,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":271,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":278,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":487,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":201,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":509,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":326,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":388,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":112,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":145,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":165,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":269,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":315,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":293,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":396,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":307,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":260,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":423,"org.apache.commons.collections4.ListUtilsTest.testPartition":492,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":239,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":1,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":12,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":245,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":427,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":457,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":372,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":417,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":362,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":406,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":83,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":108,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":437,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":144,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":411,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":508,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":2,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":499,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":242,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":444,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":117,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":206,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":421,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":392,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":104,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":141,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":159,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":517,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":148,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":3,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":400,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":118,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":82,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":334,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":160,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":216,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":476,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":314,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":311,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":164,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":279,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":222,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":355,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":379,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":272,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":274,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":273,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":150,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":218,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":224,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":455,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":454,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":142,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":22,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":368,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":378,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":357,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":66,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":64,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":302,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":451,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":491,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":505,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.set.CompositeSetTest.testContains":146,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":433,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":415,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":125,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":265,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":80,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":351,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":10,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":352,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":173,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":426,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":95,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":286,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":303,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":473,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":253,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":67,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":284,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":86,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":304,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":394,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":482,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":227,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":438,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":481,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":317,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":323,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":94,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":503,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":502,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":38,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":397,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":254,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":461,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":413,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":156,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":157,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":39,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":319,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":424,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":162,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":183,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":234,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":370,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":318,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":474,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":221,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":511,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":299,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":69,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":113,"org.apache.commons.collections4.map.LRUMapTest.testLRU":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":163,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":291,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":220,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":181,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":335,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":391,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":416,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":310,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":237,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":408,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":354,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":464,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":8,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":468,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":380,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":193,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":235,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":238,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":109,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":339,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":285,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":409,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":5,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":209,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":414},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0],"tindex":"94a41e2b-2e9f-11e6-8f23-152a4300e18a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1],"tindex":"94a5088c-2e9f-11e6-8f23-b9f94c48bfbb","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[2],"tindex":"94a5088d-2e9f-11e6-8f23-13ad4fe5a05e","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"94a52f9e-2e9f-11e6-8f23-e367b4a85fe5","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"94a556af-2e9f-11e6-8f23-23fad2cfce24","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"94a57dc0-2e9f-11e6-8f23-7734b2ebf3f1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[3,4],"tindex":"94a5a4d1-2e9f-11e6-8f23-235ef073d34b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[5,6],"tindex":"94a5a4d2-2e9f-11e6-8f23-7b28cf5f98c8","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"94a5cbe3-2e9f-11e6-8f23-4f9d450e3963","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"94a5f2f4-2e9f-11e6-8f23-29b1ada79628","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().getKey(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"94a5f2f5-2e9f-11e6-8f23-4525de9c6084","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[103,104],"tindex":"94a61a06-2e9f-11e6-8f23-23babef0b706","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[105,106],"tindex":"94a64117-2e9f-11e6-8f23-bf4e6d305839","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[107,108,109,110],"tindex":"94a64118-2e9f-11e6-8f23-437336d4bd4b","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[111,112,113,114],"tindex":"94a66829-2e9f-11e6-8f23-19ad542e6ca2","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"94a6682a-2e9f-11e6-8f23-972f0ac741a3","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return ((java.util.Collection<V>)(decorated().get(key)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[115],"tindex":"94a68f3b-2e9f-11e6-8f23-4b7142d458c6","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"94a68f3c-2e9f-11e6-8f23-d73602059156","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        {\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    if (unknownObjectBehavior == null) {\n                        throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n                    } \n                    org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[116,117],"tindex":"94a6b64d-2e9f-11e6-8f23-cd50e0a8e72b","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (b.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[118,119],"tindex":"94a6b64e-2e9f-11e6-8f23-ddc25c8f087d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[120],"tindex":"94a6dd5f-2e9f-11e6-8f23-774f7ecbda47","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[121],"tindex":"94a6dd60-2e9f-11e6-8f23-814d61763a5b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"94a6dd61-2e9f-11e6-8f23-61b58527d463","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[135],"tindex":"94a70472-2e9f-11e6-8f23-e5ab1704b89d","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"94a70473-2e9f-11e6-8f23-c3dcf893868d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,117,150,151,152,153,154],"tindex":"94a70474-2e9f-11e6-8f23-01652d8c9b8a","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"94a72b85-2e9f-11e6-8f23-7fa23307f457","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[155],"tindex":"94a72b86-2e9f-11e6-8f23-3789a879bcdd","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll1.size())) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[156],"tindex":"94a72b87-2e9f-11e6-8f23-ab0113ef848f","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map == null) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,124,197,198,199,200,201,202,203,204,205,206,207,208,209,210,125,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"94a75298-2e9f-11e6-8f23-038afc3516a9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    key = convertKey(key);\n                    final int int = hash(key);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[34,38,48,51,52,55,56,57,58,59],"tindex":"94a779a9-2e9f-11e6-8f23-b1a899078578","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[251,252],"tindex":"94a779aa-2e9f-11e6-8f23-331db0185cd3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[253,254,255],"tindex":"94a779ab-2e9f-11e6-8f23-f1aee6ef7a45","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[256,257],"tindex":"94a7eedc-2e9f-11e6-8f23-318cc1e86f84","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[258],"tindex":"94a7eedd-2e9f-11e6-8f23-29e3e618bb1c","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[259],"tindex":"94a7eede-2e9f-11e6-8f23-5f5c98f92131","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"94a815ef-2e9f-11e6-8f23-c755e54a4678","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().remove(index);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[260,261,262],"tindex":"94a815f0-2e9f-11e6-8f23-6575ad139fad","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[263,264],"tindex":"94a815f1-2e9f-11e6-8f23-c91ef02f50e9","method":{"position":"org.apache.commons.collections4.functors.WhileClosure:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure, final boolean doLoop) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.WhileClosure<E>(predicate , closure , doLoop);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[265,266],"tindex":"94a815f2-2e9f-11e6-8f23-e3d50e622182","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[267],"tindex":"94a83d03-2e9f-11e6-8f23-f3fb87e74e77","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"94a83d04-2e9f-11e6-8f23-b34ac6a63e8c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>"},"failures":[],"tindex":"94a83d05-2e9f-11e6-8f23-db412520c536","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[268],"tindex":"94a86416-2e9f-11e6-8f23-35b3b51dd9f6","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"94a86417-2e9f-11e6-8f23-7f2dc1cc8c12","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"94a86418-2e9f-11e6-8f23-a18e1880819d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[269,270,271,272,273,274,275,276,277],"tindex":"94a88b29-2e9f-11e6-8f23-57a5f19d7aa3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[278],"tindex":"94a8b23a-2e9f-11e6-8f23-d7fc7b14c6a5","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                {\n                    if ((count <= 0) || (closure == null)) {\n                        return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n                    } \n                    if (count == 1) {\n                        return ((org.apache.commons.collections4.Closure<E>)(closure));\n                    } \n                    return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"94a8b23b-2e9f-11e6-8f23-577907d1807e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[279],"tindex":"94a8b23c-2e9f-11e6-8f23-c7977799d4bd","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"94a8d94d-2e9f-11e6-8f23-43f130645b93","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[280],"tindex":"94a8d94e-2e9f-11e6-8f23-37bc657368f5","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[281],"tindex":"94a8d94f-2e9f-11e6-8f23-13e69ffd0fa6","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[282],"tindex":"94a90060-2e9f-11e6-8f23-8b0d0c8b98c1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"94a90061-2e9f-11e6-8f23-896ed4d67f1a","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,280,298,299,300,301,302,303,304,112,305,306,307,308,309,279,310,311,312,313,314,315,316,317,318,319,320,321],"tindex":"94a92772-2e9f-11e6-8f23-37aa2cd5974e","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            return addAll(size(), coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[322],"tindex":"94a92773-2e9f-11e6-8f23-55efa9b0f1e7","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,167,340,341,342,343,168,169,170,171,172,173,344,345,346,182,347,348,349,350,183,184,185,186,187,188,282,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,5,366,367,267,368,369,370,197,371,372,373,374,198,199,200,201,202,203,375,376,377,378,379,380,381,382,383,384,211,385,386,387,388,212,213,214,215,216,217,389,390,391,226,392,393,394,395,227,228,229,230,231,232,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,235,412,413,414,415,244,416,417],"tindex":"94a92774-2e9f-11e6-8f23-d904fb8799ae","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"previous"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"94a94e85-2e9f-11e6-8f23-9b14de650c55","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[418,419,420,421,422],"tindex":"94a94e86-2e9f-11e6-8f23-196dc2de809b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,66],"tindex":"94a97597-2e9f-11e6-8f23-15f9620bc642","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"94a97598-2e9f-11e6-8f23-5d3190ca0df7","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"94a97599-2e9f-11e6-8f23-215f2fe9718d","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[441,442],"tindex":"94a99caa-2e9f-11e6-8f23-edc7c77d29c9","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[],"tindex":"94a99cab-2e9f-11e6-8f23-a1202f2d27fc","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[443,444,445,446,447],"tindex":"94a9c3bc-2e9f-11e6-8f23-b7f4a6e2e535","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"94a9c3bd-2e9f-11e6-8f23-93f09e821d30","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[448,449],"tindex":"94a9c3be-2e9f-11e6-8f23-553add24a69f","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"94a9c3bf-2e9f-11e6-8f23-f9a3ee28c016","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[450],"tindex":"94a9ead0-2e9f-11e6-8f23-b50e515a389b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[451],"tindex":"94a9ead1-2e9f-11e6-8f23-ed648a2a57b9","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"94a9ead2-2e9f-11e6-8f23-4743ff13f61e","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                {\n                    if ((count <= 0) || (closure == null)) {\n                        return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n                    } \n                    if (count == 1) {\n                        return ((org.apache.commons.collections4.Closure<E>)(closure));\n                    } \n                    return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"94aa11e3-2e9f-11e6-8f23-4325b7849030","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"94aa11e4-2e9f-11e6-8f23-a1264976a594","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"94aa11e5-2e9f-11e6-8f23-9741516fb017","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    key = convertKey(key);\n                    final int int = hash(key);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"94aa38f6-2e9f-11e6-8f23-65ee4cf126a5","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return ((java.util.Collection<V>)(decorated().get(key)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[452,453,190,191,192,193,194,195,196,124,197,454,455,456,371,372,457,200,458,459,460,461,462,204,205,206,207,208,463,209,210,125,211,464,465,466,385,386,467,214,215,216],"tindex":"94aa38f7-2e9f-11e6-8f23-d5e1a24f38fa","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[226],"tindex":"94aa38f8-2e9f-11e6-8f23-0708454b90eb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"94aa8719-2e9f-11e6-8f23-0384e24d314b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"94aaae2a-2e9f-11e6-8f23-8b1b139e4687","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[468],"tindex":"94aaae2b-2e9f-11e6-8f23-51f11c7052fb","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[469,470,471,472],"tindex":"94aad53c-2e9f-11e6-8f23-b3657e1fd5c6","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"94aad53d-2e9f-11e6-8f23-af144a0c248b","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"94aad53e-2e9f-11e6-8f23-253e27481a75","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"94aafc4f-2e9f-11e6-8f23-85e791e40b9f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"94aafc50-2e9f-11e6-8f23-1ddc6bdf3490","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:162","type":"CtMethodImpl","sourcecode":"public void setUnknownObjectBehavior(final org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior unknownObjectBehavior) {\n    if (unknownObjectBehavior == null) {\n        {\n            if (unknownObjectBehavior == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    if (unknownObjectBehavior == null) {\n                        throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n                    } \n                    org.apache.commons.collections4.comparators.FixedOrderComparator.this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = unknownObjectBehavior;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"unknownObjectBehavior"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"94aafc51-2e9f-11e6-8f23-bd0f475a6e89","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().getKey(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[260,261,262,473,474,475,476,477,478,479],"tindex":"94aafc52-2e9f-11e6-8f23-45d89170826a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[480,481,482,483,484,485,486,487,488,489,490,491,230,231],"tindex":"94ab2263-2e9f-11e6-8f23-7fd3191dc63c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"94ab2264-2e9f-11e6-8f23-0d73df7b7ae3","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[492],"tindex":"94ab4975-2e9f-11e6-8f23-3df4567b8155","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[493],"tindex":"94ab4976-2e9f-11e6-8f23-7da5a891dea7","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"94ab7087-2e9f-11e6-8f23-076ac82f2650","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[494,495,496,497,498,499,500,501,502,503,504,505,506],"tindex":"94ab7088-2e9f-11e6-8f23-bb9b79efc77a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526],"tindex":"94ab7089-2e9f-11e6-8f23-fbf9933a4404","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"94ab708a-2e9f-11e6-8f23-8583b99a2036","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"94ab979b-2e9f-11e6-8f23-e15971022183","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[527,528],"tindex":"94ab979c-2e9f-11e6-8f23-0d9cf2fdc81f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index > 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[493],"tindex":"94ab979d-2e9f-11e6-8f23-db288e065dc2","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"94ab979e-2e9f-11e6-8f23-f17b5d82f2b0","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}