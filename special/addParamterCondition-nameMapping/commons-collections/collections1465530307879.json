{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":215,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":218,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":249,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":281,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":505,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":547,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":521,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":444,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionSize":353,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":217,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":276,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":319,"org.apache.commons.collections4.CollectionUtilsTest.collect":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":320,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":322,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":321,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":66,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSerializeDeserializeThenCompare":363,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":437,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":192,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":553,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":366,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":219,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":195,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":254,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":387,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":297,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":417,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":190,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":497,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":185,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":614,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":122,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":183,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToString":259,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":599,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":439,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":128,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":400,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":550,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":576,"org.apache.commons.collections4.CollectionUtilsTest.transform2":109,"org.apache.commons.collections4.CollectionUtilsTest.transform1":108,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":191,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":228,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":500,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":583,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":492,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":432,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":448,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":169,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":138,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":96,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":257,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":50,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":239,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":565,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":221,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":416,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":280,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":323,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":382,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":234,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":486,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":449,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":178,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":40,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":18,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":127,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":357,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":537,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":180,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":230,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":255,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":283,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":9,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":106,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":329,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":384,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":610,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":67,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":115,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":33,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":568,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":21,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":458,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":588,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":170,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":316,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":585,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":581,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":45,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":335,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":346,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":438,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":313,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":555,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":569,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":327,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":212,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":237,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":232,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":251,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":301,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":261,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":171,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":163,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":487,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":512,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":546,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":586,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":388,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":124,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":429,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":461,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":30,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":460,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":368,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":225,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":420,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":608,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":455,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":63,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":345,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":421,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":224,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":136,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":426,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":427,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":430,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":43,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":516,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":493,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":46,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":359,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":137,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":407,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":545,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":496,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":563,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":216,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":425,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":494,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":166,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":296,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":83,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":591,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":602,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":51,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":397,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":358,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":506,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":360,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":575,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":433,"org.apache.commons.collections4.collection.TransformedCollectionTest.testSimpleSerialization":370,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":379,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":377,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":288,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":378,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":315,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":580,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":95,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":116,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":160,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":140,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":236,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":131,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":478,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":144,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":177,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":285,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":80,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":113,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":607,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":193,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":105,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":165,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":42,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":558,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":598,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":604,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":595,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":374,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":468,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":120,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":352,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":577,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":589,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":72,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":282,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":562,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":596,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":502,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":151,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":611,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":243,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":214,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":141,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":355,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":456,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsSelfHashCode":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":94,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":273,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":573,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":436,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":435,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":6,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":503,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":135,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":488,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":501,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":459,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":227,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":269,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":5,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":605,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":350,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":472,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":303,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":294,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":411,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":157,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":381,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":211,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":584,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":229,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":513,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":395,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalEmptyCollectionExists":369,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":510,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":412,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":134,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":423,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":525,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":375,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":111,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":422,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":41,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":241,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":344,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":62,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":252,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":613,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":104,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":389,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":235,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":559,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":532,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":454,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":64,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":560,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":121,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":150,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":167,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":210,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":318,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":331,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":616,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":311,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":467,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":524,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":196,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":534,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":161,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":349,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":86,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":312,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":499,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":271,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":574,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":340,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":618,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":446,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":508,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":609,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":268,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":440,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":495,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":32,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":129,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":59,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":451,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":22,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":20,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":406,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":414,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":73,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":557,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":11,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":117,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":233,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":336,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":530,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":182,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":264,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":348,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":154,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":142,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":347,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":118,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":263,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":279,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":365,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":518,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":14,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":36,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":536,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":593,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":597,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":443,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":476,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":441,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":205,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":15,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":13,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":474,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":428,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":535,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":240,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":300,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":385,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":245,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":401,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":194,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":463,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":471,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":97,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":528,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":470,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":101,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":538,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":208,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":242,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":603,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":592,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":203,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":409,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":99,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":100,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":299,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":198,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":295,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":29,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":431,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":594,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCanonicalFullCollectionExists":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":187,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToString":354,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":12,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":149,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":79,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":84,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":419,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":418,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":514,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":91,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":24,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":202,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":543,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":175,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":47,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":209,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":112,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":540,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":179,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":247,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":619,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":28,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":146,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":262,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":246,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":403,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":466,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":143,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":306,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":304,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":328,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":291,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":1,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":483,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":222,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":482,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":587,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":147,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":452,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":307,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":39,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":504,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":189,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":275,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":164,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":238,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":485,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":184,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":567,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":76,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":523,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":286,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":413,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":615,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":564,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":173,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":548,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":473,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":606,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":390,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":19,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":132,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":391,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":526,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":509,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":133,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":314,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":491,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":394,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":582,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":330,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":571,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":453,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":162,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":317,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":207,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":554,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":98,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":287,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":551,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":197,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":17,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":356,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":531,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":393,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":408,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":457,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":333,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":114,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":541},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[0],"tindex":"b99f9a26-2ebd-11e6-afd9-cd722439ce5a","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[1,2],"tindex":"b9a08487-2ebd-11e6-afd9-171340a8897a","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[3,4,5],"tindex":"b9a0ab98-2ebd-11e6-afd9-3dd5dd375fd5","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"b9a0d2a9-2ebd-11e6-afd9-f958a248e7dd","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[6,7],"tindex":"b9a1bd0a-2ebd-11e6-afd9-4159c37ff1db","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[8,9,10,11],"tindex":"b9a1e41b-2ebd-11e6-afd9-c1917ced9ef3","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[12],"tindex":"b9a1e41c-2ebd-11e6-afd9-4fce4525ca7c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,7,54,55,56,57,58,59,60],"tindex":"b9a20b2d-2ebd-11e6-afd9-0d2f1eb9e779","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[61,62],"tindex":"b9a20b2e-2ebd-11e6-afd9-e7867387cb2f","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b9a2323f-2ebd-11e6-afd9-95d16df8cafd","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(inRange(castKey(key)))) {\n                        return null;\n                    } \n                    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"b9a23240-2ebd-11e6-afd9-b99f97e532fd","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[63],"tindex":"b9a23241-2ebd-11e6-afd9-11d5208a09dd","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[64,65,66,67,68,69,70,71,72,73],"tindex":"b9a25952-2ebd-11e6-afd9-3f046a205e15","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(k);\n            return entry != null ? entry.getValue() : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[74],"tindex":"b9a25953-2ebd-11e6-afd9-c30d6e3099a5","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"b9a28064-2ebd-11e6-afd9-7fb4771b91c6","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[75,76,77,78],"tindex":"b9a28065-2ebd-11e6-afd9-0911f4660d27","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:357","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeAllExpired(now());\n            return super.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"b9a28066-2ebd-11e6-afd9-29253fce756c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b9a2a777-2ebd-11e6-afd9-9f3aee608d34","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"b9a3dff8-2ebd-11e6-afd9-c9a78f5dc5db","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"b9a40709-2ebd-11e6-afd9-4107b301a96a","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[79,80,81,82,83,64,84,85,86,87,88],"tindex":"b9a4070a-2ebd-11e6-afd9-1f7abc2d5df7","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"b9a42e1b-2ebd-11e6-afd9-972b62235f26","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (transformer != null)"},"failures":[108,109],"tindex":"b9a42e1c-2ebd-11e6-afd9-5ddfe9e31340","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[110],"tindex":"b9a4552d-2ebd-11e6-afd9-e52483e6d538","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"b9a4552e-2ebd-11e6-afd9-03160fff5296","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"b9a47c3f-2ebd-11e6-afd9-27bad64a3a34","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"b9a47c40-2ebd-11e6-afd9-358e92e5b36e","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[181],"tindex":"b9a47c41-2ebd-11e6-afd9-53c8e6a1a28a","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[182,183,184,185,13,186,187,188,189,190,191,14,15,192,16,17,193,18,19,20,194,21,22,195,196,197,198,23,24,25,26,199,200,201,27,202,203,204,28,205,29,30,31,206,207,32,208,209,210,211,212,213,214,33,6,215,34,35,36,37,216,38,39,217,40,41,42,218,43,44,219,45,220,221,46,47,222,223,224,48,49,50,51,52,53,7,225,226,54,55,227,228,56,57,58,59,60],"tindex":"b9a4a352-2ebd-11e6-afd9-e18d9fbd608a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[229,230],"tindex":"b9a4a353-2ebd-11e6-afd9-43c74b207141","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[231],"tindex":"b9a4ca64-2ebd-11e6-afd9-5d94323b3523","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key3 != null) {\n                {\n                    final int int = hash(key1, key2, key3, key4);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[232,233],"tindex":"b9a4ca65-2ebd-11e6-afd9-451cb066aa45","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"b9a4f176-2ebd-11e6-afd9-bb1a6f8d1858","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[271],"tindex":"b9a4f177-2ebd-11e6-afd9-fdc36ad736d6","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[272],"tindex":"b9a4f178-2ebd-11e6-afd9-8f9201ee9043","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[273],"tindex":"b9a602e9-2ebd-11e6-afd9-836c150e68fe","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[274,275],"tindex":"b9a602ea-2ebd-11e6-afd9-eb39f1529daf","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"b9a629fb-2ebd-11e6-afd9-67176c59964b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key3 != null) {\n                {\n                    final int int = hash(key1, key2, key3, key4);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[276,277,278],"tindex":"b9a629fc-2ebd-11e6-afd9-bdd560141eaa","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b9a6510d-2ebd-11e6-afd9-db0073f5344b","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    if (listIterator == null) {\n                        throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.NullPointerException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"b9a6510e-2ebd-11e6-afd9-6301b60d8881","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b9a6510f-2ebd-11e6-afd9-694446b9f824","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[294],"tindex":"b9a67820-2ebd-11e6-afd9-33a9a629a3ae","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[79,80,81,82,83,84,65,66,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,68,69,310,70,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,72,73,326],"tindex":"b9a67821-2ebd-11e6-afd9-8f2594354883","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[327,328,329,330,331,261,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"b9a67822-2ebd-11e6-afd9-eb1ea94c6ede","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[345,346],"tindex":"b9a69f33-2ebd-11e6-afd9-5113059cf972","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[347],"tindex":"b9a69f34-2ebd-11e6-afd9-437ff3f614a3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[348],"tindex":"b9a6c645-2ebd-11e6-afd9-674afa0b8c47","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"b9a6c646-2ebd-11e6-afd9-03aaec08536f","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[349],"tindex":"b9a6c647-2ebd-11e6-afd9-63a9bf0f23f7","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[232,233,350,351,352,353,354,355,333,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"b9a6c648-2ebd-11e6-afd9-b111c06818c8","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                {\n                    return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[373,374],"tindex":"b9a6ed59-2ebd-11e6-afd9-414a79211095","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"b9a6ed5a-2ebd-11e6-afd9-95356ed5b2fc","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[375],"tindex":"b9a6ed5b-2ebd-11e6-afd9-3b162f59249a","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 3) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[376],"tindex":"b9a7146c-2ebd-11e6-afd9-3dc3f9e4a4eb","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415],"tindex":"b9a7146d-2ebd-11e6-afd9-a3fac9de1464","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[82,416],"tindex":"b9a7146e-2ebd-11e6-afd9-7f1f6239710d","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"b9a7146f-2ebd-11e6-afd9-e70a2164995e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[417,418,419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"b9a73b80-2ebd-11e6-afd9-1b0743977ddb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"tindex":"b9a73b81-2ebd-11e6-afd9-adbc80400a99","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b9a76292-2ebd-11e6-afd9-9b627e07ab94","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[480,481],"tindex":"b9a76293-2ebd-11e6-afd9-5d90e508db8d","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[482,483],"tindex":"b9a76294-2ebd-11e6-afd9-3f2cb6405abe","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"b9a789a5-2ebd-11e6-afd9-95c7810eda4c","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"b9a789a6-2ebd-11e6-afd9-637f5d51d862","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                {\n                    return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[484,485,328,486,487,488,489,121,490,491,329,492,493,494,495,496],"tindex":"b9a789a7-2ebd-11e6-afd9-11f9e2e8cebe","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[182,183,184,185,13,186,187,188,189,190,191,14,15,192,16,17,193,18,19,20,194,21,22,497,195,498,196,197,198,23,24,25,26,199,200,201,27,202,203,204,28,205,29,30,31,499,500,501,502,503,504,505,506],"tindex":"b9a789a8-2ebd-11e6-afd9-f95ba548e6d8","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[507],"tindex":"b9a7b0b9-2ebd-11e6-afd9-23d99455d578","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[508],"tindex":"b9a7b0ba-2ebd-11e6-afd9-5f15771b78a7","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[187,188,189,209,210,211,212,214],"tindex":"b9a7b0bb-2ebd-11e6-afd9-2fbc2a7514d3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[509,510],"tindex":"b9a7d7cc-2ebd-11e6-afd9-152470d18365","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"b9a7d7cd-2ebd-11e6-afd9-a1b72370f635","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                        while (i.hasNext()) {\n                            final java.lang.Object java.lang.Object = i.next();\n                            final boolean boolean = remove(obj, getCount(obj));\n                            result = result || changed;\n                        }\n                        return result;\n                    } else {\n                        return decorated().removeAll(null);\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"b9a7d7ce-2ebd-11e6-afd9-e56dc73148f7","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],"tindex":"b9a7fedf-2ebd-11e6-afd9-6bedf9a697d2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554],"tindex":"b9a7fee0-2ebd-11e6-afd9-fdc009050091","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b9a7fee1-2ebd-11e6-afd9-7113b86a00ae","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[120,135,155,175],"tindex":"b9a7fee2-2ebd-11e6-afd9-91f45ec4e632","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[555,556],"tindex":"b9a825f3-2ebd-11e6-afd9-ebd898e18f18","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[],"tindex":"b9a825f4-2ebd-11e6-afd9-2bdf6d8f1800","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"b9a84d05-2ebd-11e6-afd9-17e2129cb7ee","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[557,558,559,560],"tindex":"b9a84d06-2ebd-11e6-afd9-b5a8d0520fc1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b9a84d07-2ebd-11e6-afd9-019e30922e04","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"b9a87418-2ebd-11e6-afd9-e35be9e02bb7","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b9a87419-2ebd-11e6-afd9-0790f2162680","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b9a8741a-2ebd-11e6-afd9-53d9ed10a6ba","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b9a8741b-2ebd-11e6-afd9-f9923c0d1efa","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[561,562],"tindex":"b9a89b2c-2ebd-11e6-afd9-8555c695f5e2","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582],"tindex":"b9a89b2d-2ebd-11e6-afd9-155ad4322ed9","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[583,584],"tindex":"b9a89b2e-2ebd-11e6-afd9-d726501c0a74","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b9a89b2f-2ebd-11e6-afd9-797f219443d4","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    if (listIterator == null) {\n                        throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n                    } \n                    if (predicate == null) {\n                        throw new java.lang.NullPointerException(\"Predicate must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"b9a8c240-2ebd-11e6-afd9-c55347566eaa","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll != null) {\n                        boolean boolean = false;\n                        final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                        while (i.hasNext()) {\n                            final java.lang.Object java.lang.Object = i.next();\n                            final boolean boolean = remove(obj, getCount(obj));\n                            result = result || changed;\n                        }\n                        return result;\n                    } else {\n                        return decorated().removeAll(null);\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[45,47,7,54,55,56,57,58,59,60],"tindex":"b9a8c241-2ebd-11e6-afd9-4f78e097e81d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"b9a8c242-2ebd-11e6-afd9-0525c0bc83ee","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[585,586,587,588,589,551],"tindex":"b9a8c243-2ebd-11e6-afd9-a16592c6289a","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"b9a8e954-2ebd-11e6-afd9-4fac4d4e9d2e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[590],"tindex":"b9a8e955-2ebd-11e6-afd9-2bff2a25c691","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[591,537,592,593,594,595,596,597,589,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619],"tindex":"b9a8e956-2ebd-11e6-afd9-b5c9f4cff021","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b9a91067-2ebd-11e6-afd9-bb2722c7a1a4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(inRange(castKey(key)))) {\n                        return null;\n                    } \n                    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"b9a91068-2ebd-11e6-afd9-19f118c38b02","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[620],"tindex":"b9a91069-2ebd-11e6-afd9-9fc2f4a8a123","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}