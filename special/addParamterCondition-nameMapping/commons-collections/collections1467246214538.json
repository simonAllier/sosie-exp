{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":158,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":245,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":405,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":556,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":605,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":579,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":373,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":728,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":167,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":710,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":711,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":537,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":712,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":268,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":552,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":119,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":127,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":453,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":31,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":675,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":484,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":92,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":688,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":113,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":772,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":135,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":163,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":107,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":824,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":104,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":428,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":795,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":314,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":382,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":326,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":739,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":501,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":239,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":534,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":79,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":195,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":291,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":16,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":252,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":406,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":544,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":336,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":604,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":260,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":703,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":384,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":549,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":238,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":395,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":177,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":671,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":809,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":168,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":121,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":449,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":255,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":730,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":315,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":648,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":647,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":646,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":365,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":217,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":282,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":159,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":698,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":574,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":125,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":430,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":53,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":625,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":745,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":475,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":71,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":487,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":583,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":777,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":584,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":397,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":443,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":527,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":811,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":145,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":313,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":190,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":474,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":284,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":624,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":655,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":419,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":495,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":413,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":193,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":515,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":541,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":58,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":821,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":440,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":29,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":461,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":817,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":141,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":316,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":427,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":214,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":700,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":580,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":357,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":786,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":750,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":707,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":451,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":389,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":230,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":608,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":511,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":17,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":733,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":415,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":446,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":681,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":120,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":744,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":312,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":59,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":23,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":803,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":155,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":810,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.IteratorUtilsTest.testToList":626,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":469,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":136,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":164,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":578,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":157,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":787,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":420,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":784,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":603,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":816,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":88,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":673,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":20,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":439,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":701,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":152,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":349,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":719,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":368,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":746,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":249,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":89,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":529,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":103,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":638,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":513,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":411,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":84,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":505,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":804,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":633,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":663,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":679,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":74,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":206,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":507,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":614,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":355,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":519,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":286,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":22,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":425,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":213,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":771,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":521,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":726,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":600,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":506,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":293,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":250,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":670,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":477,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":736,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":766,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":623,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":226,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":822,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":236,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":479,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":6,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":568,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":149,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":756,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":364,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":743,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":123,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":329,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":718,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":613,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":222,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":610,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":304,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":68,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":215,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":573,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":483,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":779,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":341,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":352,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":488,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":476,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":162,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":100,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":82,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":296,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":825,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":116,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":356,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":516,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":407,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":398,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":535,"org.apache.commons.collections4.list.TreeListTest.testBug35258":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":124,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":509,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":802,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":800,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalEmptyCollectionExists":789,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":220,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":517,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":520,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":381,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":696,"org.apache.commons.collections4.map.ListOrderedMapTest.testCanonicalFullCollectionExists":790,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":418,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":150,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":278,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":702,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":429,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalFullCollectionExists":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":140,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":543,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":435,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":522,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":392,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":576,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":144,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":374,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":639,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":504,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":575,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":818,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":86,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":768,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":24,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":132,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":224,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":94,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":93,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":55,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":9,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":265,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":680,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":327,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":540,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":486,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":807,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":645,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":482,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":246,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":618,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":481,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":325,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":485,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":345,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":764,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":551,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":388,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":444,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":683,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":489,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":714,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":436,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":34,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":271,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":721,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":611,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":751,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":72,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":518,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":334,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":375,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":424,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":801,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":148,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":118,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":546,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":391,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":372,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":330,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":524,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":287,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":85,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":761,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":565,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":171,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":266,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":370,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":308,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":532,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":36,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":823,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":280,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":674,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":757,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":426,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":358,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":693,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":713,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":346,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":380,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":181,"org.apache.commons.collections4.set.TransformedSetTest.testSimpleSerialization":562,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":101,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":666,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":207,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":174,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":815,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":759,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":299,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":814,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":318,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullKey":769,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":75,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":237,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":459,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":416,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":780,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":729,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":201,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":114,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":498,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":490,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":376,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":26,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":724,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":185,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":183,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":555,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":538,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":317,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":828,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":792,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":567,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":650,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":553,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":587,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":753,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":773,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":81,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":788,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":631,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":632,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":687,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":630,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":248,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":612,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":657,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":466,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":677,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":785,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":156,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":434,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":778,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":354,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":422,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":57,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":154,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":706,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":204,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":450,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":542,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":819,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":731,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":353,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":242,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":686,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":793,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":83,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":270,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":337,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":198,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":531,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":52,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":629,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsSelfHashCode":564,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":48,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":697,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":254,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":244,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":463,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":523,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":227,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.CollectionUtilsTest.union":455,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":205,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":514,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":464,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":223,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":621,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":410,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":172,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":73,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":620,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":178,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":433,"org.apache.commons.collections4.list.TreeListTest.testRemove":493,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":378,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":404,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":166,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":508,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":502,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":348,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":39,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":7,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":208,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":499,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":257,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":643,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":272,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":512,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":589,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":637,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":432,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":188,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":186,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":747,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":324,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":667,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveAll":782,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":480,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":399,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":445,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":273,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":644,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":359,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":297,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":441,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":15,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":720,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":307,"org.apache.commons.collections4.list.TreeListTest.testListEquals":500,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":653,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":740,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":170,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":755,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":240,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":294,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":203,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":651,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":652,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":46,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":717,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":234,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":676,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":691,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":218,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":530,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":734,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":569,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":665,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":197,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":274,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":820,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":219,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":708,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":288,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":194,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":812,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":656,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":492,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":563,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":615,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":259,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":11,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":64,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":497,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":776,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":169,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":560,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":458,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":547,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":775,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":471,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":774,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":601,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":277,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":322,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":581,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":340,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":609,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":796,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":722,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":151,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":558,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":298,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":264,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":128,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":351,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":586,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":319,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":694,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutNullValue":770,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":99,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":210,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":447,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":664,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":199,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":285,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":361,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":423,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":599,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":258,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":333,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":640,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":754,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":283,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":460,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":400,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":607,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":14,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":797,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":539,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":627,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":799,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":798,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":813,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":468,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":105,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":760,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":668,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":491,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":115,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":229,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":763,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":528,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":622,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":402,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":362,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":536,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":593,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":592,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":470,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":143,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":309,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":108,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":437,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":636,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":591,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":251,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":732,"org.apache.commons.collections4.CollectionUtilsTest.isFull":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":37,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":295,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":300,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":598,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":462,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":67,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRetainAll":783,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":494,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":457,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":661,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":669,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":269,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":263,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":566,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":725,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":709,"org.apache.commons.collections4.map.ListOrderedMapTest.testMakeMap":765,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":735,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":137,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":130,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":328,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":525,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":570,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":10,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":350,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":342,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":110,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":762,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":369,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":590,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":658,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":660,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":659,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":606,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":737,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":233,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalEmptyCollectionExists":561,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":279,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":616,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":421,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":431,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":749,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":139,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":554,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":306,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":335,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":478,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":160,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":672,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":705,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":571,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":808,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":752,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":12,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":2,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":557,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":292,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":261,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":695,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":396,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":690,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":180,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":253,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":50,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":95,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":723,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":619,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":192,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":339,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":303,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":649,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":90,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":112,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":106,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":806,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":597,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":27,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":331,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":366,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":794,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":503,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":320,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":742,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":748,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":628,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":302,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":654,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":62,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":122,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":63,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":791,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":526,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":634,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":393,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":473,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":689,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":386,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":684,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":44,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":827,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":826,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":414,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":805,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":310,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":767,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":202,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":21,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":577,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":442},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"e1ab902e-3e58-11e6-afe2-5752952601d1","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[0],"tindex":"e1abde4f-3e58-11e6-afe2-7d344f97c9d4","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"e1abde50-3e58-11e6-afe2-7f4317a15ab0","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e1abde51-3e58-11e6-afe2-831b3960dfa4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[1],"tindex":"e1ac0562-3e58-11e6-afe2-1f40241d3fcb","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"e1ac0563-3e58-11e6-afe2-692d97fdc0b7","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[2],"tindex":"e1ac0564-3e58-11e6-afe2-2db31850d758","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                {\n                    java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n                    return super.remove(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[3],"tindex":"e1ac2c75-3e58-11e6-afe2-d31b673e9e13","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"e1ac2c76-3e58-11e6-afe2-9908cbbdd852","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"e1ac2c77-3e58-11e6-afe2-b35676be3c6c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[38,39],"tindex":"e1ac5388-3e58-11e6-afe2-71ecb876979f","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[40],"tindex":"e1ac5389-3e58-11e6-afe2-0b2ac6ffb4d4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"e1ac538a-3e58-11e6-afe2-2b60d3737675","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"e1ac7a9b-3e58-11e6-afe2-2374b50eea75","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:213","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"e1ac7a9c-3e58-11e6-afe2-2f6ea03d0bc0","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[87],"tindex":"e1ac7a9d-3e58-11e6-afe2-956ef95ae29e","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e1ac7a9e-3e58-11e6-afe2-41b7dcff26fd","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[88,89,90,91,92,93,94],"tindex":"e1aca1af-3e58-11e6-afe2-fdf430159332","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[95,96],"tindex":"e1aca1b0-3e58-11e6-afe2-2b732df15722","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map instanceof org.apache.commons.collections4.MultiMap) {\n                        for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                            putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                        }\n                    } else {\n                        for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[97],"tindex":"e1aca1b1-3e58-11e6-afe2-25488c223713","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e1aca1b2-3e58-11e6-afe2-2394c42fdf22","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[],"tindex":"e1aca1b3-3e58-11e6-afe2-6b379c95bf1a","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[98,99,100,101],"tindex":"e1acc8c4-3e58-11e6-afe2-9147d3ac3549","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[102],"tindex":"e1acc8c5-3e58-11e6-afe2-7bc728f833dc","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[103],"tindex":"e1acc8c6-3e58-11e6-afe2-d5a642f777c3","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e1acc8c7-3e58-11e6-afe2-a1d6b1d94ea3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"e1acc8c8-3e58-11e6-afe2-35aacd6d3560","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"e1acefd9-3e58-11e6-afe2-bd065947ab33","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (otherOffsetInBits == 0) {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"otherOffsetInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"e1acefda-3e58-11e6-afe2-bd29dd1ace74","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e1ad16eb-3e58-11e6-afe2-a9fb47fad253","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    return decorated().containsAll(coll);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[201,202,203,204,205,206,207,208,209,50],"tindex":"e1ad16ec-3e58-11e6-afe2-71e33f77bfcc","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[117,118,121,122,123,124,126,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,2,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446],"tindex":"e1ad16ed-3e58-11e6-afe2-a967a25c97a1","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e1ad16ee-3e58-11e6-afe2-3b122cb8a488","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e1ad3dff-3e58-11e6-afe2-b14f778acc57","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map instanceof org.apache.commons.collections4.MultiMap) {\n                        for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                            putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                        }\n                    } else {\n                        for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[447,448,449,450,451],"tindex":"e1ad3e00-3e58-11e6-afe2-d3d3980cc529","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[452,453],"tindex":"e1ad3e01-3e58-11e6-afe2-5d720ff5da34","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[50],"tindex":"e1ad3e02-3e58-11e6-afe2-99d93e23708f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e1ad6513-3e58-11e6-afe2-4d6d80ad8fc3","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e1ad6514-3e58-11e6-afe2-753596c279ac","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (defaultList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"defaultList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e1ad6515-3e58-11e6-afe2-bf2568b4e332","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e1ad6516-3e58-11e6-afe2-2179b567f2b8","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"e1ad6517-3e58-11e6-afe2-e3f450e2c0d1","method":{"position":"org.apache.commons.collections4.MapUtils:1283","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[454,455,456,457],"tindex":"e1ad6518-3e58-11e6-afe2-4d2c687c8136","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[458,459,460,461,462,463,464],"tindex":"e1ad6519-3e58-11e6-afe2-dd9bab694e85","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"tindex":"e1ad8c2a-3e58-11e6-afe2-fbebb1c04dc0","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519],"tindex":"e1ad8c2b-3e58-11e6-afe2-5f6b5abdbc6e","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (endIndex > 0) {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"endIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[383,386,388,520,521,522,523,524,525],"tindex":"e1ad8c2c-3e58-11e6-afe2-63d662166e3f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key != null) {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[452],"tindex":"e1ad8c2d-3e58-11e6-afe2-bd6bd080f1c5","method":{"position":"org.apache.commons.collections4.MapUtils:1363","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[526],"tindex":"e1ad8c2e-3e58-11e6-afe2-016cd406289d","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[527],"tindex":"e1adb33f-3e58-11e6-afe2-fd1b86041007","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e1adb340-3e58-11e6-afe2-599c15eda632","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[528],"tindex":"e1adb341-3e58-11e6-afe2-03f36358bb6c","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[529],"tindex":"e1adb342-3e58-11e6-afe2-17087e69e019","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e1adb343-3e58-11e6-afe2-038155558d2b","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e1adb344-3e58-11e6-afe2-dbe5e2f446ba","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    return decorated().containsAll(coll);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"e1adda55-3e58-11e6-afe2-531631dcccb5","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                {\n                    java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n                    return super.remove(key);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[530],"tindex":"e1adda56-3e58-11e6-afe2-4726da8727b0","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[531,532,533],"tindex":"e1adda57-3e58-11e6-afe2-416db206fbc0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[534,535,536],"tindex":"e1adda58-3e58-11e6-afe2-794cb84b1c66","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[537,538],"tindex":"e1adda59-3e58-11e6-afe2-cbcc92ca12f9","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"e1adda5a-3e58-11e6-afe2-3b7d0a6c773c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564],"tindex":"e1ae016b-3e58-11e6-afe2-bffdaec3436c","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[110,111,112,565,566,567,568,569,570],"tindex":"e1ae016c-3e58-11e6-afe2-2d72609ac9eb","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"e1ae016d-3e58-11e6-afe2-dbf285f22d54","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[571,572,573,574,267,575,576,577,578,579,580,581,582,433,583,584,585],"tindex":"e1ae016e-3e58-11e6-afe2-1f32ce071b26","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619],"tindex":"e1ae287f-3e58-11e6-afe2-3d08fccdddbd","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"e1ae2880-3e58-11e6-afe2-010e41c77d7c","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[620],"tindex":"e1ae2881-3e58-11e6-afe2-cf6d14ff0f88","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[621,622],"tindex":"e1ae2882-3e58-11e6-afe2-ff3a66ce60b5","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"e1ae2883-3e58-11e6-afe2-0393a0a391f1","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[623,624,625,626,627,628],"tindex":"e1ae4f94-3e58-11e6-afe2-f739cfddef49","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[629],"tindex":"e1ae4f95-3e58-11e6-afe2-bdfc5c24babc","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"e1ae4f96-3e58-11e6-afe2-a3662cf57e71","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e1ae4f97-3e58-11e6-afe2-73d14310426a","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e1ae4f98-3e58-11e6-afe2-b5c4ac6b1cf8","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[176],"tindex":"e1ae4f99-3e58-11e6-afe2-6bc633a3742c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e1ae4f9a-3e58-11e6-afe2-0f5f2bf32588","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[630,631,632,633,634,635],"tindex":"e1ae76ab-3e58-11e6-afe2-791b04223b29","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[636],"tindex":"e1ae76ac-3e58-11e6-afe2-3ff0688ddaf6","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[637,638,639,640,641,642,643,60],"tindex":"e1ae76ad-3e58-11e6-afe2-9172ae11dbc7","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[175,179,189,192,193,196,197,198,199,200],"tindex":"e1ae76ae-3e58-11e6-afe2-e9c8637c5762","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"e1ae76af-3e58-11e6-afe2-c5d618214f31","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[644],"tindex":"e1ae9dc0-3e58-11e6-afe2-31d16724e09b","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[645,383,388,646,647,648,520,521,522,523,524,525],"tindex":"e1ae9dc1-3e58-11e6-afe2-7f0c8e73a503","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e1ae9dc2-3e58-11e6-afe2-9bffe80af4f3","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[649,650],"tindex":"e1ae9dc3-3e58-11e6-afe2-05b3260284bc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:382","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[448,449,450,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,451,685,686,687,688,689,690,691,692,693,694,695],"tindex":"e1aec4d4-3e58-11e6-afe2-ef858c05afd1","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[155],"tindex":"e1aec4d5-3e58-11e6-afe2-2b7fe02914b2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e1aec4d6-3e58-11e6-afe2-a1f3f6d6be1d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[696],"tindex":"e1aec4d7-3e58-11e6-afe2-dbf91d424b78","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[697],"tindex":"e1aeebe8-3e58-11e6-afe2-1d52417ed86c","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e1aeebe9-3e58-11e6-afe2-eb4ef1ef873d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[639,698],"tindex":"e1aeebea-3e58-11e6-afe2-4d813395031e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[158,186,187,188,197],"tindex":"e1aeebeb-3e58-11e6-afe2-9bba2d0283f2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[699,700],"tindex":"e1aeebec-3e58-11e6-afe2-dbe9b02afea2","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isExternalNode())"},"failures":[701,702,703,649,704,705,706,707,708,709,710,711,712,713,714,650,715,716,717,718,719],"tindex":"e1aeebed-3e58-11e6-afe2-17030abd3f1d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isExternalNode())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[720,721],"tindex":"e1af12fe-3e58-11e6-afe2-0b933040bdce","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,346,347,743,348,349,350,351,744,352,745,746,353,747,354,355,748,749,750,751,752,753,754,755,756,757,579,758,759,760,578,761,762,763,764,581,582,580,423,424,765,425,426,427,428,429,766,430,767,768,431,769,770,432,433,771,772,773,774,775,776,583,584,777,532,778,779,780,781,782,783,784,585,91,92,785,434,786,435,436,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,533,804,805,806,807,437,808,809,438,810,811,812,813,439,440,814,441,815,816,817,442,818,819,443,820,444,821,822,823,824,445,825,446],"tindex":"e1af12ff-3e58-11e6-afe2-5d9c9edbda42","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"e1af1300-3e58-11e6-afe2-85e14e7bdb69","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[826,827,828],"tindex":"e1af3a11-3e58-11e6-afe2-87f599cf8286","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467241993345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}