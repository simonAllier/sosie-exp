{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":106,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":254,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":386,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":355,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":107,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":330,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":354,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":42,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":425,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":61,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":214,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":192,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":240,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":404,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":77,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":105,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":148,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":285,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":159,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":197,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":177,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":230,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":356,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":324,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":374,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":344,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":182,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":154,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":349,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":221,"org.apache.commons.collections4.CollectionUtilsTest.select":288,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":378,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":59,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":441,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":112,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":153,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":359,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":243,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":336,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":33,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.CollectionUtilsTest.intersection":273,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":71,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":53,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":380,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":178,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":423,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":387,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":255,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":65,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":150,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":333,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":412,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":305,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":195,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":297,"org.apache.commons.collections4.map.CompositeMapTest.testPut":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":102,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":413,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":293,"org.apache.commons.collections4.map.CompositeMapTest.testGet":275,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":417,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":133,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":263,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":370,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":422,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":345,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":317,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":13,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":328,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":30,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":202,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":203,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":315,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":51,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":274,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":81,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":270,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":149,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":282,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":329,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":75,"org.apache.commons.collections4.list.TreeListTest.testRemove":438,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":323,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":252,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":450,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":16,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":19,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":163,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":80,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":95,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":237,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":302,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":405,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":358,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":246,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":223,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":420,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":176,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":157,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":167,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":119,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":164,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":60,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":233,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":11,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":216,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":101,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":39,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":94,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":389,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":390,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":411,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":313,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":49,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":430,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":131,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":97,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":316,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":118,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":9,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":168,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":165,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":85,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":256,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":279,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":278,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":126,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":394,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":436,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":64,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":162,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":141,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":179,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":25,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":300,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":200,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":448,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":180,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":383,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":444,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":151,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":266,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":262,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":373,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":175,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":56,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":242,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":143,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":212,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":10,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":114,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":445,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":68,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":442,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":86,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":426,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":211,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":286,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":271,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":327,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":280,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":12,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":134,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":183,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":185,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":210,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":108,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":290,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":364,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":222,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":5,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":272,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":321,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":308,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":257,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":34,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":138,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":343,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":338,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":193,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":100,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":443,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":224,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":428,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":381,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":335,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":351,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":2,"org.apache.commons.collections4.set.CompositeSetTest.testContains":267,"org.apache.commons.collections4.list.TreeListTest.testBug35258":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":74,"org.apache.commons.collections4.ListUtilsTest.testSelect":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":194,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":248,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":155,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":292,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":366,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":340,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":21,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":88,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":6,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":399,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":120,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":298,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":319,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":24,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":431,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":244,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":432,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":396,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":398,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":397,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":296,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":385,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":295,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":147,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":109,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":139,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":232,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":172,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":196,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":409,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":79,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":82,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":259,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":173,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":93,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":76,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":258,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":198,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":20,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":156,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":418,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":311,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":227,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":170,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":371,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":392,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":304,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":361,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":190,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":261,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":419,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":353,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":57,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":314,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":66},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtBinaryOperatorImpl","sourcecode":"replacement != null"},"failures":[],"tindex":"f59200a0-2ec5-11e6-8beb-2d34264e415e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[0],"tindex":"f592c3f1-2ec5-11e6-8beb-fb6276e17bd2","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                    } \n                    for (int int = 0 ; i < (closures.int) ; i++) {\n                        if ((closures[i]) == null) {\n                            throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                        } \n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[1],"tindex":"f592eb02-2ec5-11e6-8beb-c37472427aaa","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"f5931213-2ec5-11e6-8beb-67b86f32dd67","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:493","type":"CtMethodImpl","sourcecode":"protected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (insertBeforeNode == nodeToInsert) {\n        {\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode;\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            (int)++;\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"insertBeforeNode","header":"nodeToInsert"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.List<?>"},"failures":[138,139],"tindex":"f5933924-2ec5-11e6-8beb-a577d30acd79","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[140],"tindex":"f5936035-2ec5-11e6-8beb-dbc644683c71","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    final int int = map.size();\n                    if (size == 0) {\n                        return ;\n                    } \n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                        return ;\n                    } \n                    if (size < 4) {\n                        for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    } else {\n                        convertToMap();\n                        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"tindex":"f5938746-2ec5-11e6-8beb-9333195cc6a3","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtBinaryOperatorImpl","sourcecode":"leastIndex == (-1)"},"failures":[],"tindex":"f593ae57-2ec5-11e6-8beb-0f6c65fcbc01","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"f593ae58-2ec5-11e6-8beb-130f1fcc61f0","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl","sourcecode":"largestKey == (-1)"},"failures":[170,18,19,64,68,69,70,71,79,87,92,171,112,113],"tindex":"f593d569-2ec5-11e6-8beb-9716b7809d56","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index == (-1)) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"f593fc7a-2ec5-11e6-8beb-e1934f2f6a55","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"f593fc7b-2ec5-11e6-8beb-2d9dd40212e8","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1050","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(fromIndexInclusive)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fromIndexInclusive == (-1)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (fromIndexInclusive + (int)) , (toIndexExclusive + (int)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"fromIndexInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f594238c-2ec5-11e6-8beb-cbd8043d7da3","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"f5944a9d-2ec5-11e6-8beb-3f36bf87bab5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1050","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(fromIndexInclusive)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fromIndexInclusive == (-1)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (fromIndexInclusive + (int)) , (toIndexExclusive + (int)));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndexInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[172],"tindex":"f5944a9e-2ec5-11e6-8beb-1794266d822d","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[],"tindex":"f59471af-2ec5-11e6-8beb-5d95675b1d96","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index > 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f59471b0-2ec5-11e6-8beb-61594eb3daa9","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"f59498c1-2ec5-11e6-8beb-af6e909e91ed","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"f594bfd2-2ec5-11e6-8beb-f5d3c46af87f","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[264],"tindex":"f594bfd3-2ec5-11e6-8beb-4feb9a4fc9ef","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282],"tindex":"f594e6e4-2ec5-11e6-8beb-0f78afc60cb5","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"f5950df5-2ec5-11e6-8beb-fd956f9b6b83","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[283,284,285,286,287,288,289,290,274,291,292],"tindex":"f5950df6-2ec5-11e6-8beb-9b5bedb27cec","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (a != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[],"tindex":"f5950df7-2ec5-11e6-8beb-4171e514fef9","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"f5953508-2ec5-11e6-8beb-efd40d6dc72b","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[293,294,295,296,297],"tindex":"f5953509-2ec5-11e6-8beb-b30f9116fcb2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[298,299,300,301,302,303,304,305,306,307,258,308,309,259,310,311,260,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,261,334,335,262,336,337,263,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"tindex":"f5955c1a-2ec5-11e6-8beb-cb0cf4c91c24","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap == null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[],"tindex":"f5955c1b-2ec5-11e6-8beb-83b2bc6f9e96","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Long) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[],"tindex":"f5955c1c-2ec5-11e6-8beb-41d440b373e7","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[359],"tindex":"f595832d-2ec5-11e6-8beb-ab71c78b72ec","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"f595832e-2ec5-11e6-8beb-0fdc6816bacc","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[360],"tindex":"f595832f-2ec5-11e6-8beb-8702d9f4fd5f","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[265,266,267,268,269,270,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427],"tindex":"f595aa40-2ec5-11e6-8beb-9b0207705477","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[],"tindex":"f595aa41-2ec5-11e6-8beb-530cda3773c6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[428],"tindex":"f595d152-2ec5-11e6-8beb-ab5139b2b50c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"f595d153-2ec5-11e6-8beb-4da56f26bce1","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl","sourcecode":"((object == null) && (current == null)) || ((object != null) && (object.equals(current)))"},"failures":[],"tindex":"f595d154-2ec5-11e6-8beb-e3174b000f0b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (((obj == null) && (obj == null)) || ((object != null) && (object.equals(current)))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"obj","object":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[429,430,431,432,433,434,435,298,299],"tindex":"f595f865-2ec5-11e6-8beb-d5e786625860","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f595f866-2ec5-11e6-8beb-33dadb3e1666","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    final int int = map.size();\n                    if (size == 0) {\n                        return ;\n                    } \n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                        return ;\n                    } \n                    if (size < 4) {\n                        for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    } else {\n                        convertToMap();\n                        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"f5961f77-2ec5-11e6-8beb-27f9e8d5b1a4","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                    } \n                    for (int int = 0 ; i < (closures.int) ; i++) {\n                        if ((closures[i]) == null) {\n                            throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                        } \n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"f5961f78-2ec5-11e6-8beb-1b5a029561e0","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[436,437,438,439,440,441,442,443,444,445,446,447,448,449,450],"tindex":"f5964689-2ec5-11e6-8beb-e9d1117898e0","method":{"position":"org.apache.commons.collections4.list.TreeList:793","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> next) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? next : node;\n            recalcHeight();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[],"tindex":"f596468a-2ec5-11e6-8beb-ef5b66eb8f8c","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"f596468b-2ec5-11e6-8beb-7fd7f75898f8","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":44,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}