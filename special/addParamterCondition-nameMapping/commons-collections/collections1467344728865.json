{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":352,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":936,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":447,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":461,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":168,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":804,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":93,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":221,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":849,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":844,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":292,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":826,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":981,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":291,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":34,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":26,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":27,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":874,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":320,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":324,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":854,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":908,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":339,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":575,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":536,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":192,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":833,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":591,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":634,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":962,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":754,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":544,"org.apache.commons.collections4.ListUtilsTest.testLazyList":817,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":14,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":526,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":611,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":626,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":176,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":675,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":422,"org.apache.commons.collections4.CollectionUtilsTest.select":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":524,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":975,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":486,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":203,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":852,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":638,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":894,"org.apache.commons.collections4.CollectionUtilsTest.intersection":76,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":716,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":717,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":333,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":950,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":35,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":797,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":157,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":937,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":460,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":660,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":775,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":774,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":504,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":790,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":980,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":195,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":104,"org.apache.commons.collections4.map.CompositeMapTest.testPut":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":62,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":627,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":913,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":957,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":202,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":366,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":605,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":566,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":231,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":361,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":630,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":188,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":876,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":896,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":368,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":703,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":423,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":475,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":521,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":8,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":788,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":757,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":154,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":839,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":90,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":808,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":153,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":700,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":927,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":732,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":550,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":510,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":625,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":856,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":169,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":317,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":418,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":218,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":960,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":820,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":129,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":713,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":228,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":229,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":859,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":363,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":956,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":350,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":916,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":535,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":347,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":165,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":161,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":678,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":316,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":783,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":164,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":710,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":119,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":883,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":915,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":597,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":343,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":444,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":918,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":384,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":92,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":869,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":502,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":191,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":917,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":18,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":572,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":851,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":305,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":784,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":647,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":487,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":19,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":966,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":442,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":184,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":498,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":904,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":768,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":132,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":928,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":326,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":648,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":453,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":880,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":138,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":579,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":815,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":696,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":665,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":947,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":955,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":569,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":890,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":866,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":382,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":747,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":244,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":321,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":275,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":650,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":345,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":777,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":396,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":307,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":340,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":816,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":330,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":582,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":814,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":17,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":836,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":463,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":584,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":262,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":357,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":391,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":459,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":983,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":405,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":140,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":961,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":196,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":723,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":782,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":612,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":474,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":865,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":452,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":862,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":354,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":414,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":560,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":563,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":185,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":283,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":684,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":683,"org.apache.commons.collections4.SetUtilsTest.testHashCode":113,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":682,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":898,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":594,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":417,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":565,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":241,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":831,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":506,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":968,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":156,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":468,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":159,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":758,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":721,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":533,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":252,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":554,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":451,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":879,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":692,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":731,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":919,"org.apache.commons.collections4.list.TreeListTest.testBug35258":809,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":903,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":61,"org.apache.commons.collections4.ListUtilsTest.testSelect":0,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":920,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":10,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":776,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":301,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":929,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":13,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":882,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":269,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":488,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":549,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":841,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":289,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":778,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":286,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":746,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":755,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":272,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":644,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":107,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":827,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":189,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":792,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":139,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":895,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":216,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":214,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":914,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":581,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":656,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":680,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":911,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":541,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":198,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":689,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":341,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":900,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":172,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":886,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":325,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":593,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":616,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":20,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":822,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":925,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":315,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":613,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":733,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":770,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":590,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":466,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":369,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":178,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":870,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":319,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":413,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":589,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":268,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":855,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":592,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":281,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":276,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":772,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":147,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":958,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":595,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":464,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":705,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":123,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":795,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":688,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":909,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":254,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":863,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":786,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":727,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":567,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":372,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":902,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":505,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":930,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":881,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":891,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":12,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":120,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":967,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":57,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":837,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":780,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":182,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":434,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":116,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":580,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":606,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":756,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":38,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":643,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":745,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":430,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":888,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":353,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":977,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":309,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":951,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":187,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":624,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":715,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":963,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":923,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":513,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":614,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":970,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":707,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":893,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":351,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":709,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":509,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":2,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":285,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":701,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":671,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":149,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":570,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":794,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":818,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":742,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":456,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":694,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":813,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":322,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":811,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":70,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":830,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":712,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":720,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":240,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":828,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":517,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":515,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":878,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":462,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":410,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":436,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":211,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":921,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":576,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":4,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":663,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":984,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":664,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":662,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":864,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":377,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":645,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":445,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":892,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":327,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":943,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":598,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":953,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":646,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":492,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":973,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":31,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":926,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":308,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":954,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":457,"org.apache.commons.collections4.map.CompositeMapTest.testGet":83,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":145,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":659,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":67,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":938,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":401,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":409,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":111,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":394,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":470,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":759,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":80,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":489,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":931,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":249,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":250,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":199,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":416,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":802,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":246,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":842,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":280,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":686,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":982,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":374,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":779,"org.apache.commons.collections4.CollectionUtilsTest.union":969,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":141,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":829,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":125,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":215,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":823,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":568,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":905,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":932,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":337,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":97,"org.apache.commons.collections4.list.TreeListTest.testRemove":807,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":741,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":739,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":508,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":271,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":752,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":751,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":750,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":978,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":812,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":465,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":312,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":267,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":636,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":155,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":392,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":490,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":342,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":840,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":380,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":520,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":518,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":834,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":654,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":653,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":674,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":652,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":298,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":419,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":588,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":669,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":668,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":667,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":687,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":753,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":11,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":722,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":294,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":875,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":323,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":702,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":787,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":450,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":261,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":941,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":200,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":765,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":619,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":288,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":690,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":939,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":940,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":952,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":152,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":979,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":791,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":224,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":389,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":726,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":724,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":725,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":222,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":376,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":749,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":933,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":299,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":259,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":801,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":935,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":974,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":523,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":785,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":87,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":884,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":253,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":901,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":371,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":175,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":386,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":867,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":440,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":555,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":559,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":428,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":810,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":36,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":873,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":872,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":480,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":602,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":793,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":848,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":234,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":235,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":693,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":236,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":743,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":620,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":860,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":621,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":734,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":735,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":736,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":824,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":73,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":658,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":72,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":358,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":220,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":448,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":641,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":537,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":976,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":77,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":306,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":122,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":838,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":393,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":729,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":150,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":964,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":3,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":469,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":74,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":427,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":912,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":71,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":88,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":655,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":798,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":948,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":478,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":789,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":379,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":381,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":383,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":766,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":622,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":728,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":637,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":740,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":685,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":385,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":142,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":618,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":479,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":718,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":7,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":633,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":651,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":239,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":910,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":266,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":525,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":415,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":949,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":232,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":843,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":370,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":906,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":346,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":800,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":719,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":972,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":163,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":400,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":762,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":601,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":934,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":706,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":760,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":761,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":552,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":54,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":857,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":332,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":697,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":615,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":197,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":617,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":676,"org.apache.commons.collections4.set.CompositeSetTest.testContains":79,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":885,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":388,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":277,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":803,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":336,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":274,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":850,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":303,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":846,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":562,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":657,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":806,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":458,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":170,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":310,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":364,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":819,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":821,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":334,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":546,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":539,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":695,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":781,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":835,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":528,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":944,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":971,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":946,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":945,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":744,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":805,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":858,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":426,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":420,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":295,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":691,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":868,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":922,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":771,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":167,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":556,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":628,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":355,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":661,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":583,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":237,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":496,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":889,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":23,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":101,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":887,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":799,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":313,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":302,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":897,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":769,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":472,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":207,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":861,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":208,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":907,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":965,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":986,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":338,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":924,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":985,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":899,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":375,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":871,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":22,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":825,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":349,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":832,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":432,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":530,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":311,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":877,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":477,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":845,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":412,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":387,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":112,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":287,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":714,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":853,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":942,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":59,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":318,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":670,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":257,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":959,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":443,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":290,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":407,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":610,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":399,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":431},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40ccbb3d-3f3e-11e6-93cc-ad8eec690851","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40cdf3be-3f3e-11e6-93cc-27cc607ba845","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"40ce1acf-3f3e-11e6-93cc-4b8ef1d89051","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl"},"failures":[11],"tindex":"40ce41e0-3f3e-11e6-93cc-558a0a4bcdf1","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl"},"failures":[12,13,14,15],"tindex":"40cf5351-3f3e-11e6-93cc-e171eb3f7f31","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40cf7a62-3f3e-11e6-93cc-d1a8e6e3996f","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40cfa173-3f3e-11e6-93cc-976e2c209dae","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40cfa174-3f3e-11e6-93cc-1114b7ff6af4","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"40cfa175-3f3e-11e6-93cc-0719652ce165","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"40cfc886-3f3e-11e6-93cc-712209c83420","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40cfef97-3f3e-11e6-93cc-c986823cea1a","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[66],"tindex":"40cfef98-3f3e-11e6-93cc-c72ce79982d1","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[67,68,69,70,71,72,73],"tindex":"40cfef99-3f3e-11e6-93cc-c954e5e7837c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index > 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[74,75,76,8,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"40d016aa-3f3e-11e6-93cc-3bfc782fe188","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl"},"failures":[91],"tindex":"40d016ab-3f3e-11e6-93cc-abf31506516b","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"40d03dbc-3f3e-11e6-93cc-dfbcb5a2c66f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d03dbd-3f3e-11e6-93cc-c75984dea89b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key3"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d064ce-3f3e-11e6-93cc-1b1fb0635d90","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[109,110,111,112],"tindex":"40d064cf-3f3e-11e6-93cc-83a1a2879c5c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = java.util.List<K>.indexOf(key);\n                    if (index > 0) {\n                        return java.util.List<K>.get((index - 1));\n                    } \n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl"},"failures":[113],"tindex":"40d064d0-3f3e-11e6-93cc-13813f18ca4d","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d08be1-3f3e-11e6-93cc-a1d9aa35a727","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl"},"failures":[114,115],"tindex":"40d08be2-3f3e-11e6-93cc-1375bd866871","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d08be3-3f3e-11e6-93cc-4521f1bc432d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = java.util.List<K>.indexOf(key);\n                    if (index > 0) {\n                        return java.util.List<K>.get((index - 1));\n                    } \n                    return null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"40d0b2f4-3f3e-11e6-93cc-8db5e00f0fc7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"40d0b2f5-3f3e-11e6-93cc-0d87c40d9202","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d23996-3f3e-11e6-93cc-7da4d7745324","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d23997-3f3e-11e6-93cc-0da5c5f15b84","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[180],"tindex":"40d260a8-3f3e-11e6-93cc-87647ba41b30","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d260a9-3f3e-11e6-93cc-4d900e6d98fb","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d287ba-3f3e-11e6-93cc-97d4a0698af6","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[181,182,183],"tindex":"40d2aecb-3f3e-11e6-93cc-dd65bc5e3905","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d2aecc-3f3e-11e6-93cc-f7991e239178","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d2d5dd-3f3e-11e6-93cc-633183ae73fa","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl"},"failures":[184,185,186,187,16,17,18,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,19,203,204,205,206,207,208,20,21,209,210,211,212,213,22,214,215,216,23,217,218,219,220,221],"tindex":"40d2d5de-3f3e-11e6-93cc-c3e17f822262","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(lengthInBits)) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d2d5df-3f3e-11e6-93cc-4b4147a9009b","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (transform == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transform"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[222,223,224,225],"tindex":"40d2d5e0-3f3e-11e6-93cc-cbe83c4a6a0d","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[226,227,228,229,121,122,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,132,133],"tindex":"40d2fcf1-3f3e-11e6-93cc-77529dd073bf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d2fcf2-3f3e-11e6-93cc-f1f3a5b403f4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[252,253,254,255,256,257,258,259,260,261,262,263,264,265,68,69,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,181,283,284,285,286,287,288,289,290,291,292,293,294,295,296,70,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,182,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,72,73,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,183,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"40d32403-3f3e-11e6-93cc-3b9910df75d6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d34b14-3f3e-11e6-93cc-9ffa9527a8db","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d34b15-3f3e-11e6-93cc-f7dae5e6fc95","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl"},"failures":[385],"tindex":"40d37226-3f3e-11e6-93cc-dbd37bc5a7c3","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start < end) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[386,387,388,389],"tindex":"40d37227-3f3e-11e6-93cc-41c24e772f00","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d37228-3f3e-11e6-93cc-2965b25eca7e","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d39939-3f3e-11e6-93cc-bd3a4204fdfe","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[390],"tindex":"40d3993a-3f3e-11e6-93cc-0b25e4a1fa9a","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[391,392],"tindex":"40d3993b-3f3e-11e6-93cc-e33e7b710c46","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d3c04c-3f3e-11e6-93cc-57e8bd7a42da","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"tindex":"40d3c04d-3f3e-11e6-93cc-1f312cb1c4fc","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[489,490,491,492],"tindex":"40d51fde-3f3e-11e6-93cc-333d7e979ff5","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[414,417,493,494],"tindex":"40d546ef-3f3e-11e6-93cc-a7e2125080a4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d546f0-3f3e-11e6-93cc-e3770d1bd8c8","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d59511-3f3e-11e6-93cc-4be39430fbe6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[418],"tindex":"40d5bc22-3f3e-11e6-93cc-77d1ca941ae6","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d5bc23-3f3e-11e6-93cc-61ce9e046a6b","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[13,495,12,30,496,497,498,499,500,501,31,502,503,504,505,506,507,508,32,33,34,35,36,37,38,39,40,509,41,510,511,42,43,512,513,514,515,516,517,518,519,520,44,521,522,45,46,523,524,47,48,49,50,51,525,526,15,527,14,54,528,529,530,531,532,55,533,534,56,57,535,58,59,60,61,62,63,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,64,65,553],"tindex":"40d5e334-3f3e-11e6-93cc-3b2800d87ad4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl"},"failures":[554],"tindex":"40d5e335-3f3e-11e6-93cc-f528551bac12","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[555],"tindex":"40d67f76-3f3e-11e6-93cc-4b3bdd7327b5","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d67f77-3f3e-11e6-93cc-a9aeec1abcd8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d6f4a8-3f3e-11e6-93cc-b1768ee5a37c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from != null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[556],"tindex":"40d6f4a9-3f3e-11e6-93cc-ef7d40c6d05d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtBinaryOperatorImpl"},"failures":[82,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581],"tindex":"40d71bba-3f3e-11e6-93cc-f3ce9a706a58","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl"},"failures":[30,12,13,495,497,498,499,500,501,31,502,503,504,505,506,507,523,524,47,48,49,50,51,508,32,33,34,35,36,37,38,39,40,509,41,510,511,42,43,512,513,514,515,516,517,518,519,520,44,521,522,45,46,526,525,54,14,15,527,528,529,530,531,532,55,533,549,550,551,552,64,65,553,534,56,57,535,58,59,60,61,62,63,536,537,538,539,540,541,542,543,544,545,546,547,548],"tindex":"40d71bbb-3f3e-11e6-93cc-e9463e40ba41","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d71bbc-3f3e-11e6-93cc-fbd504824d38","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[58,64,65,125,126,127,582,583,584,585,586,587,588,589,590,230,591,592,593,231,594,595,596,232,597,598,599,239,600,601,602,240,603,604,605,241,606,607,608,609,610,611,612,613,614,615,616,617,92,618,619,620,621,622,623,624,625,626,627,628,629,97,98,99,630,631,632,100,633,634,635,101,636,637,638,639,640,641,642,643,105,106,107,644,645,646,108,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784],"tindex":"40d769dd-3f3e-11e6-93cc-61642f7f5875","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799],"tindex":"40d790ee-3f3e-11e6-93cc-7529cce1274e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl"},"failures":[800,801],"tindex":"40d790ef-3f3e-11e6-93cc-7fb61421e1d3","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d790f0-3f3e-11e6-93cc-cd3cd9dc0ad5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[802],"tindex":"40d7b801-3f3e-11e6-93cc-9b9be62ac0f4","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl"},"failures":[],"tindex":"40d7b802-3f3e-11e6-93cc-171c51a0c457","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d7b803-3f3e-11e6-93cc-27a6fb3feae6","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl"},"failures":[803],"tindex":"40d7b804-3f3e-11e6-93cc-0797f538c7ff","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d7df15-3f3e-11e6-93cc-f3a22fb8d984","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d7df16-3f3e-11e6-93cc-6b112d50ea93","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d7df17-3f3e-11e6-93cc-2147552424a6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[804],"tindex":"40d80628-3f3e-11e6-93cc-d52b45937dfb","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[805],"tindex":"40d80629-3f3e-11e6-93cc-0d9ea0871490","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d8544a-3f3e-11e6-93cc-41a583c55f36","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d8544b-3f3e-11e6-93cc-a39c2574df61","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d8544c-3f3e-11e6-93cc-afd80344db62","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d8544d-3f3e-11e6-93cc-a1ad912fc540","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[806,807,808,386,809,810,811,812,813,814,815,816],"tindex":"40d87b5e-3f3e-11e6-93cc-914db3b48594","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    (int)++;\n                    checkInterval(index, 0, size());\n                    if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n                    } else {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n                    }\n                    (int)++;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d87b5f-3f3e-11e6-93cc-d5e3c0047b00","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"40d8a270-3f3e-11e6-93cc-898856be1e69","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d8a271-3f3e-11e6-93cc-1d134d7e3c3f","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    (int)++;\n                    checkInterval(index, 0, size());\n                    if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n                    } else {\n                        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n                    }\n                    (int)++;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl"},"failures":[817],"tindex":"40d8a272-3f3e-11e6-93cc-651403b87ca5","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[818,819],"tindex":"40d8c983-3f3e-11e6-93cc-afba2c16df6b","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d8c984-3f3e-11e6-93cc-3910c7cec4ed","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl"},"failures":[820],"tindex":"40d8c985-3f3e-11e6-93cc-071d30a881bb","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl"},"failures":[495,12,30,13,500,501,31,502,503,504,497,498,499,505,506,507,508,32,33,34,35,36,37,38,39,40,509,41,510,511,42,43,512,513,514,515,516,517,518,519,520,44,521,522,45,46,523,524,47,48,49,50,51,526,525,527,14,54,15,531,532,55,533,528,529,530,534,56,57,535,58,59,60,61,62,63,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,64,65,553],"tindex":"40d93eb6-3f3e-11e6-93cc-6722f4dd4fd4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl"},"failures":[417,418],"tindex":"40d93eb7-3f3e-11e6-93cc-9bb1e223529f","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d965c8-3f3e-11e6-93cc-0d3ecc4c4ef6","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,556,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,805,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,619],"tindex":"40d965c9-3f3e-11e6-93cc-ff8e830dbfba","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d965ca-3f3e-11e6-93cc-978ce0046633","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl"},"failures":[81,557,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,580,581,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965],"tindex":"40d965cb-3f3e-11e6-93cc-4544e55a490d","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d98cdc-3f3e-11e6-93cc-ff0aec4b48cb","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,966,74,75,5,967,968,6,969,76,7,970,8,9,10,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"40d98cdd-3f3e-11e6-93cc-3b3c26e47d41","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"40d98cde-3f3e-11e6-93cc-23bc2f3def1b","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[971,972,973,845,847,864,865,869,974,871],"tindex":"40d9b3ef-3f3e-11e6-93cc-0bdfe45a6905","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[975,976,977,978,979,980,606,981,982,983,984,985,986,934,935,679],"tindex":"40da0110-3f3e-11e6-93cc-cde14733e5e6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338826242/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}