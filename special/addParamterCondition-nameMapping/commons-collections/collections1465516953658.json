{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":60,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":282,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":349,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":426,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":195,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":32,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":482,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":173,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":467,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":703,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":582,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":111,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":554,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":487,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":630,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":247,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":200,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":516,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":642,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":264,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":629,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":281,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":527,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":625,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":204,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":58,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":376,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":241,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":536,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":483,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":506,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":663,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":80,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":504,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":76,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":403,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":488,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":599,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":617,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":413,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":476,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":672,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":245,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":430,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":34,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":549,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":167,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":684,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":19,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":649,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":569,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":600,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":353,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":712,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":370,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":645,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":675,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":372,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":67,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":456,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":243,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":73,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":48,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":325,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":520,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":658,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":355,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":371,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":251,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":574,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":707,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":445,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":106,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":383,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":486,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":524,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":585,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":192,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":496,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":619,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":501,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":212,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":621,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":497,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":477,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":470,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":668,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":547,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":315,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":655,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":44,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":635,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":289,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":17,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":208,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":627,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":322,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":557,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":558,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":465,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":24,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":296,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":701,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":83,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":366,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":606,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":576,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":603,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":303,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":683,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":687,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":150,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":710,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":381,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":451,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":559,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":145,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":373,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":268,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":620,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":124,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":358,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":681,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":466,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":262,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":330,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":331,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":112,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":198,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":415,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":460,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":528,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":119,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":227,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":447,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":688,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":613,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":211,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":656,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":689,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":700,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":197,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":628,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":588,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":89,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":273,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":667,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":542,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":406,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":267,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":659,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":632,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":278,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":442,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":494,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":356,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":555,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":244,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":485,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":25,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":338,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":8,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":337,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":654,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":336,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":5,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":46,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":148,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":417,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":133,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":560,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":561,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":118,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":623,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":348,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":120,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":291,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":105,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":246,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":380,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":709,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":641,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":280,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":354,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":519,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":253,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":256,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":508,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":394,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":374,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":399,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":463,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":277,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":414,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":402,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":400,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":666,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":161,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":384,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":446,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":539,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":347,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":435,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":583,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":537,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":677,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":202,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":132,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":223,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":410,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":436,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":177,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":378,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":321,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":693,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":699,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":121,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":602,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":510,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":665,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":550,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":114,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":196,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":228,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":237,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":593,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":149,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":474,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":27,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":300,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":618,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":159,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":250,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":357,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":238,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":206,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":49,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":214,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":308,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":440,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":605,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":61,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":438,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":660,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":50,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":612,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":287,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":386,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":566,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":567,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":573,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":572,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":604,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":328,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":441,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":97,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":692,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":96,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":286,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":254,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":529,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":648,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":420,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":270,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":653,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":454,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":16,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":312,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":643,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":664,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":697,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":144,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":68,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":631,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":36,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":548,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":464,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":591,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":411,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":391,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":493,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":257,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":2,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":575,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":86,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":306,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":679,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":64,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":633,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":215,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":680,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":294,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":690,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":525,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":661,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":670,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":87,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":490,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":288,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":283,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":22,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":310,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":209,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":240,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":484,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":339,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":443,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":343,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":364,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":458,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":568,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":503,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":562,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":634,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":694,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":207,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":314,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":210,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":495,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":469,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":298,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":570,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":457,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":556,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":590,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":651,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":434,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":644,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":544,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":203,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":515,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":478,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":255,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":234,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":472,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":116,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":108,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":502,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":361,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":317,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":523,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":135,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":55,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":448,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":429,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":669,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":647,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":584,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":678,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":179,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":686,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":242,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":578,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":153,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":639,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":11,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":367,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":459,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":271,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":201,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":396,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":676,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":137,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":541,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":165,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":615,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":151,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":327,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":517,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":538,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":334,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":611,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":183,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":365,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":178,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":531,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":385,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":545,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":398,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":626,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":509,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":194,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":216,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":581,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":532,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":199,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":369,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":147,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":180,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":708,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":404,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":534,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":533,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":614,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":540,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":622,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":186,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":350,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":284,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":156,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":316,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":432,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":57,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":333,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":190,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":104,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":640,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":674,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":375,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":657,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":266,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":392,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":274,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":696,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":249,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":1,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":449,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":650,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":103,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":81,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":276,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":9,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":263,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":363,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":304,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":59,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":193,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":468,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":671,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":711,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":14,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":297,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":352,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":160,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":279,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":553,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":272,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":595,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":505,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":85,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":225,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":624,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":589,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":69,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":388,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":473,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":691,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":379,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":705,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":637,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":188,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":292,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":301,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":341,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":662,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":682,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":419,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":408,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":646,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":218,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":311,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":136,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":498,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":530,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":518,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":75,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":706,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":217,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":181,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":219,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":125,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":220,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":166,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":424,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":230,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":592,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":232,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":110,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":636,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":252},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[0],"tindex":"a1e02308-2e9e-11e6-af34-8b320d454222","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"a1e0e659-2e9e-11e6-af34-efefb48070c3","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[1,2],"tindex":"a1e0e65a-2e9e-11e6-af34-0f3d575c8256","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"a1e10d6b-2e9e-11e6-af34-73a094139267","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"a1e1347c-2e9e-11e6-af34-e35cdc25065a","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[3],"tindex":"a1e15b8d-2e9e-11e6-af34-eba3f87f13bd","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    if (predicate == null) {\n                        {\n                            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"a1e1829e-2e9e-11e6-af34-119a1896bd1b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[4,5,6,7,8,9,10,11,12],"tindex":"a1e1829f-2e9e-11e6-af34-b144e3b3a42f","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"a1e1a9b0-2e9e-11e6-af34-39314ea71dfc","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"a1e1d0c1-2e9e-11e6-af34-090e784c8e29","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[91,92,93,94,95,96,97],"tindex":"a1e1f7d2-2e9e-11e6-af34-773eb76dd9aa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index > 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a1e1f7d3-2e9e-11e6-af34-c189a3196ca1","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"a1e21ee4-2e9e-11e6-af34-3310763d7a63","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"a1e21ee5-2e9e-11e6-af34-3b6728c0b8db","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[98,99,100,101,102],"tindex":"a1e245f6-2e9e-11e6-af34-1d1e43caaee3","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a1e245f7-2e9e-11e6-af34-3f4c1dff9dcd","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[103,104,105,106,107,108],"tindex":"a1e26d08-2e9e-11e6-af34-e7430343edbf","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[109,110,111,112,113],"tindex":"a1e29419-2e9e-11e6-af34-d7b0c96dd8b4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"a1e2941a-2e9e-11e6-af34-2f927f551b18","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[114,115,116,117,118,119,120,121,122,123],"tindex":"a1e2bb2b-2e9e-11e6-af34-cdce29ecfc96","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:361","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return retainAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"a1e2bb2c-2e9e-11e6-af34-1dc7baac824e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"a1e2e23d-2e9e-11e6-af34-cdcff443f83c","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"a1e2e23e-2e9e-11e6-af34-4d8ffd5bf1e0","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    if (predicate == null) {\n                        {\n                            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[124,125],"tindex":"a1e3094f-2e9e-11e6-af34-a134a11fc0c3","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[126],"tindex":"a1e33060-2e9e-11e6-af34-1d2e21c57973","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"a1e33061-2e9e-11e6-af34-57a82206c9ac","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key5"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"a1e35772-2e9e-11e6-af34-b9d8ea97283e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"a1e37e83-2e9e-11e6-af34-d1efb2ae6e67","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"a1e37e84-2e9e-11e6-af34-cdf151bad7ad","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[143,144],"tindex":"a1e37e85-2e9e-11e6-af34-0b75dee2636c","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[145,146],"tindex":"a1e3a596-2e9e-11e6-af34-8fdd92503790","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index > 0) {\n        {\n            return getEntry(index).getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[147],"tindex":"a1e3a597-2e9e-11e6-af34-250677ee52cf","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[148],"tindex":"a1e3a598-2e9e-11e6-af34-89ebe0460411","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"a1e3cca9-2e9e-11e6-af34-d1019293d217","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                {\n                    if (predicate == null) {\n                        {\n                            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"a1e3ccaa-2e9e-11e6-af34-d19080ad3b96","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[149,150],"tindex":"a1e3ccab-2e9e-11e6-af34-e9a6680ca176","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a1e3f3bc-2e9e-11e6-af34-0f5f192b8e50","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"a1e3f3bd-2e9e-11e6-af34-fff6b8db7eca","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a1e3f3be-2e9e-11e6-af34-c72945666f81","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"a1e3f3bf-2e9e-11e6-af34-a7e920435bc5","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[151,152,153,139],"tindex":"a1e41ad0-2e9e-11e6-af34-37a5a4886469","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"a1e41ad1-2e9e-11e6-af34-cd9a1d310f29","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"a1e441e2-2e9e-11e6-af34-9f50461e5d2c","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,0,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"tindex":"a1e441e3-2e9e-11e6-af34-61137a96add7","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[235,236,237,238,239,240,241],"tindex":"a1e468f4-2e9e-11e6-af34-a1dded9353d0","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"a1e468f5-2e9e-11e6-af34-291a5deadbe0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,97,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"tindex":"a1e49006-2e9e-11e6-af34-333036181303","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[308],"tindex":"a1e49007-2e9e-11e6-af34-6df60215a70b","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"a1e4b718-2e9e-11e6-af34-5d0ebdefcae6","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[309,310],"tindex":"a1e4b719-2e9e-11e6-af34-ffc20da72dcf","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[311],"tindex":"a1e57a6a-2e9e-11e6-af34-29a0771d9387","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[312],"tindex":"a1e57a6b-2e9e-11e6-af34-f1d8e0c62088","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"a1e5a17c-2e9e-11e6-af34-0bd8e4aacaee","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"a1e5a17d-2e9e-11e6-af34-a503c7bb77b1","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[313,314],"tindex":"a1e5a17e-2e9e-11e6-af34-bdb3106fbe19","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"a1e5c88f-2e9e-11e6-af34-19876fe2a898","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"a1e5c890-2e9e-11e6-af34-a14ffaa05e06","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[145],"tindex":"a1e5c891-2e9e-11e6-af34-df32564a17b4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[209,210,211,212,215,216,217,218,219,220],"tindex":"a1e5efa2-2e9e-11e6-af34-8f456c65f19e","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"a1e5efa3-2e9e-11e6-af34-091fe8ded454","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a1e616b4-2e9e-11e6-af34-a5d53d1010b1","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[315,316,317,318,319,320,321,322,323,324],"tindex":"a1e63dc5-2e9e-11e6-af34-75a1d12eb02e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a1e63dc6-2e9e-11e6-af34-df9fce7a038f","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"a1e63dc7-2e9e-11e6-af34-df7d3a64bc95","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if ((map.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"a1e664d8-2e9e-11e6-af34-6fb816622887","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[374,375,376,377,378],"tindex":"a1e664d9-2e9e-11e6-af34-73ca6bfe46d6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index > 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"a1e664da-2e9e-11e6-af34-b73078e67fc9","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[149,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,100,403,404,405,406,407],"tindex":"a1e68beb-2e9e-11e6-af34-d9fc6bd6d6cb","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"tindex":"a1e68bec-2e9e-11e6-af34-3d95ac8ae6da","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[490],"tindex":"a1e6b2fd-2e9e-11e6-af34-89d7fa52ddf4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[491,492,493,494,495,496,497,498],"tindex":"a1e6b2fe-2e9e-11e6-af34-41b6af6981a9","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"a1e6b2ff-2e9e-11e6-af34-d58d1f7c77ed","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[499,500],"tindex":"a1e6da10-2e9e-11e6-af34-2d71918aa160","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[126],"tindex":"a1e6da11-2e9e-11e6-af34-6f27516a38c2","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[501],"tindex":"a1e6da12-2e9e-11e6-af34-a17f9078085f","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"a1e6da13-2e9e-11e6-af34-5b46e79eb7c5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"a1e70124-2e9e-11e6-af34-9d96b195cb18","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a1e70125-2e9e-11e6-af34-1fc2a5a8a99b","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"a1e70126-2e9e-11e6-af34-19199586c352","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[502],"tindex":"a1e70127-2e9e-11e6-af34-a124e1f52307","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555],"tindex":"a1e72838-2e9e-11e6-af34-97d9a7520a79","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"a1e74f49-2e9e-11e6-af34-5d3ca7610636","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a1e74f4a-2e9e-11e6-af34-15bd52bf1907","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"a1e74f4b-2e9e-11e6-af34-250266214c09","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"a1e7765c-2e9e-11e6-af34-b747bfa6a659","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"a1e7765d-2e9e-11e6-af34-5f511855985d","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[574],"tindex":"a1e79d6e-2e9e-11e6-af34-d5285c6630f9","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"a1e79d6f-2e9e-11e6-af34-51d7cced3cee","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        throw new java.util.EmptyStackException();\n    } else {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[575,576],"tindex":"a1e79d70-2e9e-11e6-af34-f365ea3baf98","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"a1e79d71-2e9e-11e6-af34-b1c3358e192a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[577,578],"tindex":"a1e7c482-2e9e-11e6-af34-e173daacc931","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"a1e7c483-2e9e-11e6-af34-23a1d75a5d89","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[579,580],"tindex":"a1e7c484-2e9e-11e6-af34-5116de6bf965","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"a1e7eb95-2e9e-11e6-af34-1bb0726047c5","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[383,581],"tindex":"a1e7eb96-2e9e-11e6-af34-63939b860131","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[582,583,584,585],"tindex":"a1e7eb97-2e9e-11e6-af34-e59c4654a5de","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[586,587,588,589,590,591,592,593,594,595,103,596,597,114,598,599,600,601,602,603,604,115,605,606,607,608,609,610,611,612,613,116,614,615,616,617,618,619,620,117,621,622,623,624,625,626,627,628,629,118,630,631,632,633,634,635,98,636,637,638,639,640,641,99,642,643,644,645,646,647,648,119,649,650,651,652,653,654,655,120,656,657,658,659,660,581,150,661,121,662,663,664,665,666,393,100,405,406,407,667,668,669,670,671,122,672,673,674,675,676,677,101,678,679,680,681,682,106,683,684,123,685,686,687,688,689,690,102,691,692,693,694,695,696,697,698,699],"tindex":"a1e812a8-2e9e-11e6-af34-2d8b76f551b9","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[],"tindex":"a1e812a9-2e9e-11e6-af34-79a4877db8ce","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[700,701,702,703,704,705],"tindex":"a1e839ba-2e9e-11e6-af34-6df8333f2818","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end2 < 0) {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[706,707,708,709,710,711,712],"tindex":"a1e839bb-2e9e-11e6-af34-5971f481351f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}