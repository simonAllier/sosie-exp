{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":1,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":7,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":59,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":29,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":43,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalEmptyCollectionExists":54,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":19,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":37,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":73,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":32,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":63,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":21,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":42,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":60,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":45,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":10,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":75,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":31,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":2,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":24,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":53,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsSelfHashCode":57,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":65,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":35,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":69,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":61,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":28,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":67,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":74,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":3,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":25,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":17,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":12,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":26,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":46,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":47,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":14,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":23,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":38,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":8,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":18,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":5,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalFullCollectionExists":52,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":0,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":36,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":64,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":76,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":11,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":20,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":40,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":13,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":56,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":41,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":62,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods":4,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":66,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":16,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":55,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":9,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":70,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":51,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":58,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":44,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":30,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":71,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":77,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":34,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":68,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":72,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":22,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":50,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":6,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":33,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":39,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":49},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[0,1],"tindex":"27088f77-2e81-11e6-8dc8-3b63489d40cb","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[],"tindex":"2709ef08-2e81-11e6-8dc8-7fc86fa417e3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.lang.Float) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[2],"tindex":"270a6439-2e81-11e6-8dc8-1b245d30416b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtVariableReadImpl","sourcecode":"xWasLeftChild"},"failures":[3,4],"tindex":"270a8b4a-2e81-11e6-8dc8-250eddd13581","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:96","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(final boolean trueFirst) {\n    if (trueFirst) {\n        {\n            return trueFirst ? org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator : org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"xWasLeftChild":"trueFirst"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"270b75ab-2e81-11e6-8dc8-c55fadb43fd9","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"270b9cbc-2e81-11e6-8dc8-5b01c8a1421c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:493","type":"CtMethodImpl","sourcecode":"protected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (nodeToInsert == nodeToInsert) {\n        {\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode;\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            (int)++;\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"nodeToInsert","header":"nodeToInsert"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"270bc3cd-2e81-11e6-8dc8-9ba4136d6699","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (!(obj == null ? obj == null : o1.equals(o2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"obj","o2":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"270beade-2e81-11e6-8dc8-d1193a2271fe","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtBinaryOperatorImpl","sourcecode":"(pos != (-1)) && (pos != index)"},"failures":[],"tindex":"270beadf-2e81-11e6-8dc8-470de65b7385","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if ((start != (-1)) && (pos != start)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"start","index":"start"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"270beae0-2e81-11e6-8dc8-1ffa098ad1d8","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[58],"tindex":"270c11f1-2e81-11e6-8dc8-f11dc593946e","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if ((list.isEmpty()) && (list.isEmpty())) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"list","pendingInsertions":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"270c11f2-2e81-11e6-8dc8-33d1ad1b2bf5","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":12,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}