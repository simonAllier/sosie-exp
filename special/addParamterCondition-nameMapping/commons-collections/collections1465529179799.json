{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":171,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":161,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":8,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":120,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":190,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":112,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":34,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":223,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":174,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":79,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":104,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":103,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":122,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":74,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":97,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":207,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":78,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":141,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":54,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":2,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":91,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":217,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":251,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":139,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":85,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":213,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":26,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":195,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":193,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":77,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":30,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":155,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":35,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":191,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":49,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":166,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":173,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":231,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":68,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":187,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":55,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":5,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":24,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":157,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":225,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":236,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":156,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":46,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":145,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":185,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":226,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":126,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":143,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":96,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":93,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":31,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":168,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":221,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":237,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":48,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":202,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":244,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":95,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":17,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":130,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":37,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":73,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":234,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":209,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":146,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":6,"org.apache.commons.collections4.map.CompositeMapTest.testPut":1,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":219,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":167,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":165,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":38,"org.apache.commons.collections4.map.CompositeMapTest.testGet":0,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":61,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":154,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":10,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":212,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":53,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":88,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":216,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":232,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":47,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSimpleSerialization":248,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":111,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":239,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":117,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":172,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":22,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":108,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":135,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":80,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":128,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":188,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":72,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":205,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":245,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":198,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":178,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":114,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":144,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":21,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":29,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":64,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":218,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":138,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":203,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":71,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":59,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":241,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":69,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":136,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":7,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":196,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":201,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":242,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":240,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":142,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalFullCollectionExists":250,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":177,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":215,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":150,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":200,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToString":243,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":18,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":235,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":20,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":19,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":127,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":106,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":89,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":229,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":87,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":99,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":181,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":176,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":211,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":83,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":149,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":204,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":121,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":32,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":119,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":192,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":132,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":183,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":129,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":90,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":222,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":118,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":230,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":107,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":238,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":137,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":41,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":51,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":184,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":208,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":131,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":102,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":220,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":140,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":101,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":12,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":147,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":86,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":63,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":227,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":36,"org.apache.commons.collections4.map.LRUMapTest.testLRU":163,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":186,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":52,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":43,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":75,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":180,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":94,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":100,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":158,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":84,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":164,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":170,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":233,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":134,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":81,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":247,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":162,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":123,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":182,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":224,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":44,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":189,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":33,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":246,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalEmptyCollectionExists":249,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":4,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":116,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":3,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":152,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":133,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":16,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":66,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":98,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":228},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtBinaryOperatorImpl","sourcecode":"mapSize == 0"},"failures":[],"tindex":"19390d33-2ebb-11e6-86a8-3b3e5eeed4dc","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapSize":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator:43","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"1939a974-2ebb-11e6-86a8-49a1f9f8b9ae","method":{"position":"org.apache.commons.collections4.IteratorUtils:474","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<K, V> mapIterator) {\n    if (mapIterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(mapIterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"mapIterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"1939d085-2ebb-11e6-86a8-09c255fd1eef","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[57,58,59,60,61,62],"tindex":"193a1ea6-2ebb-11e6-86a8-d5dc8b9949c5","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[63],"tindex":"193a45b7-2ebb-11e6-86a8-77b53a1c1c54","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[64],"tindex":"193a45b8-2ebb-11e6-86a8-97bdda971d98","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index <= 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"193a6cc9-2ebb-11e6-86a8-9b6148ae0313","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl","sourcecode":"((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"193a6cca-2ebb-11e6-86a8-995604791efc","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"193abaeb-2ebb-11e6-86a8-7b3dfe32e3ce","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"193abaec-2ebb-11e6-86a8-854332aeae2b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key3"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1023","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[154,155],"tindex":"193ae1fd-2ebb-11e6-86a8-09884340db60","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"193b090e-2ebb-11e6-86a8-07867950b07f","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if ((coll == null) || (coll == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"193b301f-2ebb-11e6-86a8-ad91addf349a","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list2 instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"193b5730-2ebb-11e6-86a8-713992e4390d","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[156,154,157],"tindex":"193b5731-2ebb-11e6-86a8-a9a90f8334a0","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"193b7e42-2ebb-11e6-86a8-1187be4b9c0a","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"193ba553-2ebb-11e6-86a8-c9c074a8327c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[158,159,160],"tindex":"193ba554-2ebb-11e6-86a8-c5c04fb31a18","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[161],"tindex":"193bcc65-2ebb-11e6-86a8-1d876e4f24ee","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"193bcc66-2ebb-11e6-86a8-918ca053e0d2","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[162,163,164,165,166,167,168,169,170],"tindex":"193bf377-2ebb-11e6-86a8-fb19bff819a1","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"hashCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"193c4198-2ebb-11e6-86a8-3fe1de2c11fc","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object != null) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"193c4199-2ebb-11e6-86a8-352a0b3b8df6","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"193c419a-2ebb-11e6-86a8-eddc6d90ad9d","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[211,27],"tindex":"193c68ab-2ebb-11e6-86a8-51367cfe73fc","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[212],"tindex":"193c68ac-2ebb-11e6-86a8-d7b6431f2929","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"193c8fbd-2ebb-11e6-86a8-9ba0379575ff","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"193c8fbe-2ebb-11e6-86a8-b9d840baf164","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"193c8fbf-2ebb-11e6-86a8-0fd7f9cacdad","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count < (count / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtBinaryOperatorImpl","sourcecode":"(predicates.length) == 0"},"failures":[213,214,215,216,217,218,219,220,221],"tindex":"193cb6d0-2ebb-11e6-86a8-abcb675cf39a","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object","length":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"193cb6d1-2ebb-11e6-86a8-c16db03a4e54","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[222],"tindex":"193cb6d2-2ebb-11e6-86a8-c75625ca6402","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[223],"tindex":"193cdde3-2ebb-11e6-86a8-0f6cc3043252","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"193cdde4-2ebb-11e6-86a8-c9e018437a95","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"193d04f5-2ebb-11e6-86a8-790372fceb57","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[224],"tindex":"193d04f6-2ebb-11e6-86a8-bb3b4cfe2a2c","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"193d04f7-2ebb-11e6-86a8-579751174d7f","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[251],"tindex":"193d2c08-2ebb-11e6-86a8-ebea0b072041","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2 instanceof org.apache.commons.collections4.Bag) {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll2"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":38,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}