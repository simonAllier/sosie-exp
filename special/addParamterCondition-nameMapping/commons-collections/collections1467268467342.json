{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":635,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":58,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":502,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":200,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":29,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":703,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":725,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":806,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":364,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":256,"org.apache.commons.collections4.CollectionUtilsTest.collect":87,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":483,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":454,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":389,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":811,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":671,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":303,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":485,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":49,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":560,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":313,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":619,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":338,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":636,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":840,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":252,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":753,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":291,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":566,"org.apache.commons.collections4.CollectionUtilsTest.select":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":284,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":141,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":551,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":535,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":481,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":695,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":714,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":809,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":488,"org.apache.commons.collections4.CollectionUtilsTest.intersection":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":266,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":700,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":623,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":257,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":518,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":750,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":795,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":501,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":814,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":731,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":249,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":801,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":709,"org.apache.commons.collections4.map.CompositeMapTest.testPut":129,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":849,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":311,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":664,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":537,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":757,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":143,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":697,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":57,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":591,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":534,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":576,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":707,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":601,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":400,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":785,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":59,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":780,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":596,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":597,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":595,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":426,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":571,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":756,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":859,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":279,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":678,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":775,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":157,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":80,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":550,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":468,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":796,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":633,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":644,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":825,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":282,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":738,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":90,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":853,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":839,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":438,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":348,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":203,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":327,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":638,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":813,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":639,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":0,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":788,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":848,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":698,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":225,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":747,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":606,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":179,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":777,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":167,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":761,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":791,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":820,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":39,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":306,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":782,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":391,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":532,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":676,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":334,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":202,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":73,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":844,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":722,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":324,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":322,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":708,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":10,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":669,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":136,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":93,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":736,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":675,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":602,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":674,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":216,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":808,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":843,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":838,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":473,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":142,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":217,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":377,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":774,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":242,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":546,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":685,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":236,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":484,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":559,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":735,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":451,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":92,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":164,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":588,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":622,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":453,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":383,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":13,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":372,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":828,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":375,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":855,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":144,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":212,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":416,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":767,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":852,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":77,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":71,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":45,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":460,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":467,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":489,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":335,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":769,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":215,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":407,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":140,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":470,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":506,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":351,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":589,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":70,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":12,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":478,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":409,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":21,"org.apache.commons.collections4.map.HashedMapTest.testClone":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":479,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":710,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":312,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":425,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":235,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":827,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":694,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":822,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":439,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":539,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":856,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":667,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":402,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":706,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":175,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":544,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":78,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":134,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":496,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":251,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":684,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":23,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":618,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":652,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":198,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":302,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":713,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":191,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":190,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":187,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":186,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":189,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":188,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":183,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":185,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":693,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":184,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":310,"org.apache.commons.collections4.ListUtilsTest.testSelect":120,"org.apache.commons.collections4.map.LinkedMapTest.testClone":161,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":119,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":612,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":632,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":196,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":645,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":613,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":672,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":326,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":799,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":395,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":651,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":837,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":508,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":336,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":330,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":26,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":317,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":558,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":701,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":723,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":570,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":319,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":472,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":789,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":561,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":549,"org.apache.commons.collections4.CollectionUtilsTest.find":86,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":743,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":339,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":763,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":415,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":760,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":720,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":218,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":112,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":397,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":655,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":469,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":584,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":524,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":403,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":686,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":831,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":538,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":564,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":94,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":812,"org.apache.commons.collections4.map.LRUMapTest.testLRU":662,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":781,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":656,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":385,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":230,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":509,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":608,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":660,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":787,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":823,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":387,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":733,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":491,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":734,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":835,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":250,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":353,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":6,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":779,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":238,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":201,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":668,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":573,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":754,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":305,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":786,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":673,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":423,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":441,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":657,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":587,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":374,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":690,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":260,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":448,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":523,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":393,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":847,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":604,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":861,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":98,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":727,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":66,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":347,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":270,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":643,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":263,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":163,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":582,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":836,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":146,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":95,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":101,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":16,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":368,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":627,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":151,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":729,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":610,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":466,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":860,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":300,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":842,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":474,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":494,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":854,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":783,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":739,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":272,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":773,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":585,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":504,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":418,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":679,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":231,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":360,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":541,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":721,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":792,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":728,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":599,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":568,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":826,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":563,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":659,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":578,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":246,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":384,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":497,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":784,"org.apache.commons.collections4.map.CompositeMapTest.testGet":128,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":355,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":569,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":740,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":445,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":381,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":609,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":446,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":628,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":352,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":125,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":716,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":342,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":772,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":630,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":800,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":770,"org.apache.commons.collections4.CollectionUtilsTest.union":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":620,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":371,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":31,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":162,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":621,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":737,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":424,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":724,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":261,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":373,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":75,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":267,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":392,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":593,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":253,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":594,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":793,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":642,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":640,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":72,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":173,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":437,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":60,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":421,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":20,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":361,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":275,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":209,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":681,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":762,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":691,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":505,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":548,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":103,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":145,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":195,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":354,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":653,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":647,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":742,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":732,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":521,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":345,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":744,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":692,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":413,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":422,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":751,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":27,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":15,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":768,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":376,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":83,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":48,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":170,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":680,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":286,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":845,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":378,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":833,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":283,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":62,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":132,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":131,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":581,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":829,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":178,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":79,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":213,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":683,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":148,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":258,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":149,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":817,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":434,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":38,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":805,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":462,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":74,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":819,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":752,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":7,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":241,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":357,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":406,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":661,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":689,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":688,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":646,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":726,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":394,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":464,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":450,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":487,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":565,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":359,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":857,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":54,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":778,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":765,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":105,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":482,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":841,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":555,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":133,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":556,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":557,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":430,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":611,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":150,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":288,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":366,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":607,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":682,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":824,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":432,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":818,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":748,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":616,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":100,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":511,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":851,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":290,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":540,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":771,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":759,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":749,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":47,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":301,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":176,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":575,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":34,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":666,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":294,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":815,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":404,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":158,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":172,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":138,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":341,"org.apache.commons.collections4.set.CompositeSetTest.testContains":124,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":46,"org.apache.commons.collections4.CollectionUtilsTest.isFull":180,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":8,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":522,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":333,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":278,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":807,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":206,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":577,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":803,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":427,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":498,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":118,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":17,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":776,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":369,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":210,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":304,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":323,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":296,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":605,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":797,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":766,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":816,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":344,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":349,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":156,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":562,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":530,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":586,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":830,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":810,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":325,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":741,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":715,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":268,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":580,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":704,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":463,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":794,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":19,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":804,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":649,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":214,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":553,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":459,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":552,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":61,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":717,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":718,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":821,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":719,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":269,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":358,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":545,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":832,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":850,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":764,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":428,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":51,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":834,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":514,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":846,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":292,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":429,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":802,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":536,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":63,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":65,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":533,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":197,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":543,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":412,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":308,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":137,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":696,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":67,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":516,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":625,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":414,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":745,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":465,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":492,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":858},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[0],"tindex":"b1615bc6-3e8c-11e6-b3c6-5b12d66a095f","method":{"position":"org.apache.commons.collections4.CollectionUtils:663","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (closure != null)) {\n                for (final T T : collection) {\n                    closure.execute(element);\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"b161d0f7-3e8c-11e6-b3c6-f5404885d7ad","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[1,2],"tindex":"b161f808-3e8c-11e6-b3c6-cd8f5f4fcd47","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b161f809-3e8c-11e6-b3c6-cf983d357626","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[3,4,5,6,7,8],"tindex":"b1621f1a-3e8c-11e6-b3c6-25d474913cd2","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"b1621f1b-3e8c-11e6-b3c6-696bd5c4f3e1","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b162462c-3e8c-11e6-b3c6-c3304d033ec6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[9],"tindex":"b162462d-3e8c-11e6-b3c6-b16f54ef2715","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[10],"tindex":"b1626d3e-3e8c-11e6-b3c6-bfccabb5e967","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (null == object) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().indexOf(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[11,12],"tindex":"b1626d3f-3e8c-11e6-b3c6-8bf4f096b640","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"b1629450-3e8c-11e6-b3c6-4d70c02e95bc","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"b1629451-3e8c-11e6-b3c6-8f78ff35ce96","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"b1629452-3e8c-11e6-b3c6-3b0bd6ec04fa","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.getValue()) == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return entry.getValue();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[13],"tindex":"b162bb63-3e8c-11e6-b3c6-d542ba508812","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"b162bb64-3e8c-11e6-b3c6-79604d8d699a","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"b162bb65-3e8c-11e6-b3c6-474b0d45ba85","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"b162bb66-3e8c-11e6-b3c6-514330224187","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"b162bb67-3e8c-11e6-b3c6-49807e0ffe57","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[86],"tindex":"b162bb68-3e8c-11e6-b3c6-c99c16f08f5f","method":{"position":"org.apache.commons.collections4.CollectionUtils:641","type":"CtMethodImpl","sourcecode":"public static <T>T find(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        {\n            if ((collection != null) && (predicate != null)) {\n                for (final T T : collection) {\n                    if (predicate.evaluate(item)) {\n                        return item;\n                    } \n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"b162e279-3e8c-11e6-b3c6-d3972054bacf","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.getValue()) == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return entry.getValue();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[87],"tindex":"b162e27a-3e8c-11e6-b3c6-2bb4431b4c3b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"b162e27b-3e8c-11e6-b3c6-954a8dde63bc","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i < 0) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b162e27c-3e8c-11e6-b3c6-b50276455270","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[100],"tindex":"b162e27d-3e8c-11e6-b3c6-ed3fd2f74ff9","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    if (arrayClass == null) {\n                        throw new java.lang.NullPointerException(\"Array class must not be null\");\n                    } \n                    final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n                    return list.toArray(array);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b162e27e-3e8c-11e6-b3c6-316f144da1f1","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[101],"tindex":"b163098f-3e8c-11e6-b3c6-3d0015037221","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[102,103],"tindex":"b1630990-3e8c-11e6-b3c6-6d5fbf29acbe","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"b1630991-3e8c-11e6-b3c6-2bd0a9029b26","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[136],"tindex":"b1630992-3e8c-11e6-b3c6-2937f378ae6a","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b1630993-3e8c-11e6-b3c6-c1951224c76a","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[110,117,118],"tindex":"b16330a4-3e8c-11e6-b3c6-35e04706753a","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"tindex":"b16330a5-3e8c-11e6-b3c6-0974caf10364","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"b16330a6-3e8c-11e6-b3c6-efac283eb74d","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[170,171,172,173,174,175,176,177,178,179],"tindex":"b16330a7-3e8c-11e6-b3c6-efd1dc0a51b0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    final boolean boolean = decorated().remove(object);\n                    if (result) {\n                        java.util.List<E>.remove(object);\n                    } \n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"b16357b8-3e8c-11e6-b3c6-0150bf6c7548","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (null == object) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().indexOf(object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"b16357b9-3e8c-11e6-b3c6-5db8a69af67f","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b16357ba-3e8c-11e6-b3c6-9bb869f0c300","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[214,215,216,217,218,219,1,220,221,222,223,224,225,226,227,228,229,2,230,231,232,233,234,235,236],"tindex":"b16357bb-3e8c-11e6-b3c6-b3521fe35297","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"b1637ecc-3e8c-11e6-b3c6-0b3af3903456","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b163a5dd-3e8c-11e6-b3c6-8fa87a396189","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"b163a5de-3e8c-11e6-b3c6-d9d5b6594940","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[333,334],"tindex":"b163a5df-3e8c-11e6-b3c6-a1ebafe4c170","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[335],"tindex":"b163a5e0-3e8c-11e6-b3c6-256b6d31a550","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b163a5e1-3e8c-11e6-b3c6-25398e4c217c","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[336,337,338,339,340,341,342,343,217,344,345,346,347,348,349,350,351,352,353,354,355,356,357,229],"tindex":"b163a5e2-3e8c-11e6-b3c6-c17472b7b77e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"b163ccf3-3e8c-11e6-b3c6-e3f5b8435d17","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator instanceof java.util.ListIterator) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    if (arrayClass == null) {\n                        throw new java.lang.NullPointerException(\"Array class must not be null\");\n                    } \n                    final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n                    return list.toArray(array);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[358],"tindex":"b163ccf4-3e8c-11e6-b3c6-c36146d0f8ea","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"b163ccf5-3e8c-11e6-b3c6-7b651c8b562b","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"b163ccf6-3e8c-11e6-b3c6-0561cb91d52e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[266],"tindex":"b163f407-3e8c-11e6-b3c6-45a8e695074f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b163f408-3e8c-11e6-b3c6-3d8056b192c2","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"b163f409-3e8c-11e6-b3c6-a5d2d5385be5","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[373],"tindex":"b163f40a-3e8c-11e6-b3c6-0b0f2e97d83b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[374,375,376],"tindex":"b163f40b-3e8c-11e6-b3c6-95e0938e5949","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"b1641b1c-3e8c-11e6-b3c6-f9f85270ac3e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"b1641b1d-3e8c-11e6-b3c6-c54342b87127","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[377,378,379,227,228,380],"tindex":"b1641b1e-3e8c-11e6-b3c6-5d3057db84d4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"b1641b1f-3e8c-11e6-b3c6-851e6ddc8816","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[381],"tindex":"b1644230-3e8c-11e6-b3c6-bb666a2a004f","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[382],"tindex":"b1644231-3e8c-11e6-b3c6-7bc541afdc2a","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b1644232-3e8c-11e6-b3c6-034c8d5f3ff1","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b1644233-3e8c-11e6-b3c6-b54d879631e9","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[383,384,385],"tindex":"b1644234-3e8c-11e6-b3c6-f367cd929063","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[107],"tindex":"b1646945-3e8c-11e6-b3c6-6dba97ac9610","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"b1646946-3e8c-11e6-b3c6-49a82acb3449","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[386,383],"tindex":"b1646947-3e8c-11e6-b3c6-458f4322cd36","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[387,388,389,390,391,392,393,394,395,396,397,398,399],"tindex":"b1646948-3e8c-11e6-b3c6-8f2a47d3a3f9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,137,419,420,138,139,421,422,423,424,425,426,427,428,429,430,140,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,141,142,457,458,459,460,461,462,463,464,465,143,144,466,145,146,147,467,468,148,469,149,470,471,150,151,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,152,493,494,495,496,497,498,499,500,501,502,153,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,154,155,529,530,156,157,531,532,533,534,535,536,537,538,539,540,158,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,159,160,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,166,611,374,375,376,612,613,614,615,616,617,618,619,620,621,622,623,624,625,167,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,168,169,652],"tindex":"b1646949-3e8c-11e6-b3c6-abbbf6c918b7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[653,168],"tindex":"b164905a-3e8c-11e6-b3c6-cbba945b93ee","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                return true;\n            } \n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                return java.util.Arrays.equals(K[], otherMulti.?[]);\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:125","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[654],"tindex":"b164905b-3e8c-11e6-b3c6-35bf3447a17e","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[12],"tindex":"b164905c-3e8c-11e6-b3c6-49bfbf511133","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[655,656],"tindex":"b164905d-3e8c-11e6-b3c6-7bff3abf3af5","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[407,408,413,415,657,658,659,660,661,421,422,423,438,445,446,448,451,452,455,456,141,142,457,462,463,464,147,151,478,479,481,484,485,488,489,490,491,492,493,494,495,510,517,518,520,523,524,527,528,154,155,529,531,532,533,548,555,556,558,561,562,565,566,159,160,567,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,162,684,685,686,687,688,689,690,691,692,693,694,164,165,695,570,571,572,588,595,596,598,601,602,605,606,607,608,609,376,612,613,614,615,696,616,617,618,633,640,641,643,646,647,650,651,168,169,652],"tindex":"b164905e-3e8c-11e6-b3c6-29393c6d0b8c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[121],"tindex":"b164b76f-3e8c-11e6-b3c6-0774a2e27c95","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b164b770-3e8c-11e6-b3c6-b794462fa063","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            setComparator(index, comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b164b771-3e8c-11e6-b3c6-05ee6310a8cc","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b164b772-3e8c-11e6-b3c6-33fa858fc8b7","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[697],"tindex":"b164b773-3e8c-11e6-b3c6-45f89b78c116","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[698,655,0,699,656,700,701],"tindex":"b164de84-3e8c-11e6-b3c6-871e48373609","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"b164de85-3e8c-11e6-b3c6-b9a6a860c127","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[702,703,704],"tindex":"b164de86-3e8c-11e6-b3c6-e9dade0a71dc","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[705,377,706,378,214,215,216,707,336,337,708,338,339,340,709,710,341,711,342,712,713,343,217,714,715,716,717,718,719,218,219,720,1,721,722,220,221,723,724,222,223,224,225,226,725,726],"tindex":"b164de87-3e8c-11e6-b3c6-29b6c0c0566d","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return bitIndex >= 0;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[727],"tindex":"b164de88-3e8c-11e6-b3c6-ef3be922335f","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[698],"tindex":"b164de89-3e8c-11e6-b3c6-f72c208bb442","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"b165059a-3e8c-11e6-b3c6-f1ee70c6f824","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"b165059b-3e8c-11e6-b3c6-5746f37da8eb","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"b165059c-3e8c-11e6-b3c6-6f91792a163f","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return bitIndex >= 0;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,7,8,783,784,785,786,787,788,789,790,791,792,793,794,795],"tindex":"b165059d-3e8c-11e6-b3c6-cb1ad23d44aa","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[796,797,798,799,800,801,364,11,802,803,804,805,806,807,808,809,810,811,812,813,814,815,369,816,817,818,370,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834],"tindex":"b165059e-3e8c-11e6-b3c6-27c6e06988a7","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[390,835,331,836,837,838],"tindex":"b165059f-3e8c-11e6-b3c6-c3719c636515","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[291,290,293,294,295,292,299,300,302,296,297,298,301,839,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,303,304,305,306,307,308,309,310,311,312,840,313,841,842,843,844,845,846,847,848],"tindex":"b1652cb0-3e8c-11e6-b3c6-f52166bede88","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"b1652cb1-3e8c-11e6-b3c6-d5e31a1fe9a8","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    final boolean boolean = decorated().remove(object);\n                    if (result) {\n                        java.util.List<E>.remove(object);\n                    } \n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"b1652cb2-3e8c-11e6-b3c6-0d30417ed57b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b1652cb3-3e8c-11e6-b3c6-356e235be129","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[849,850,851,852,853,28],"tindex":"b1652cb4-3e8c-11e6-b3c6-1dec7dd36566","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"b1652cb5-3e8c-11e6-b3c6-8fe6b044eaa0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b16553c6-3e8c-11e6-b3c6-3d51bab04823","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[401,416,854,855,856,857,858,859,860,861],"tindex":"b16553c7-3e8c-11e6-b3c6-016a9d4fe5ec","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"b16553c8-3e8c-11e6-b3c6-15b971860924","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"b16553c9-3e8c-11e6-b3c6-a701361fe874","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265527420/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}