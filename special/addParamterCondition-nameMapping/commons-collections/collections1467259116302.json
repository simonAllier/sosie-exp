{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":322,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":466,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":71,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":247,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":457,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":85,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":434,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":242,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":207,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":211,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":194,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":210,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":300,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":338,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":135,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":491,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":503,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":117,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":147,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":178,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":66,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":260,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":82,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":235,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":238,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":272,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":390,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":476,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":460,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":334,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":362,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":245,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":209,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":249,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":208,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":278,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":481,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":423,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":484,"org.apache.commons.collections4.CollectionUtilsTest.transform1":282,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":250,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":226,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":133,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":480,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":51,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":407,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":61,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":165,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":471,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":439,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":215,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":412,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":501,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":526,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":112,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":108,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":84,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":88,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":452,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":386,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":430,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":27,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":458,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":415,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":470,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":408,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":204,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":517,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":183,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":320,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":428,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":160,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":269,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":494,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":396,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":311,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":522,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":156,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":474,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":381,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":201,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":310,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":351,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":416,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":25,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":440,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":182,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":162,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":4,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":169,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":254,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":397,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":511,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":446,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":121,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":520,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":115,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":498,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":488,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":502,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":263,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":512,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":409,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":410,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":505,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":177,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":3,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":42,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":195,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":297,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":257,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":329,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":486,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":227,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":363,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":445,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":120,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":306,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":131,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":352,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":39,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":109,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":331,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":422,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":377,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":271,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":203,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":427,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":384,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":508,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":246,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":299,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":374,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":158,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":134,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":50,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":53,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":222,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":375,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":319,"org.apache.commons.collections4.list.TreeListTest.testListEquals":483,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":96,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":456,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":241,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":130,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":404,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":424,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":60,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":455,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":279,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":459,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":312,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":343,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":303,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":346,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":171,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":475,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":79,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":420,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":157,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":220,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":122,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":184,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":335,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":231,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":442,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":46,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":326,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":138,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":330,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":285,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":95,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":5,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":218,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":499,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":513,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":78,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":287,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":0,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":154,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":255,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":389,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":504,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":342,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":296,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":270,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":479,"org.apache.commons.collections4.ListUtilsTest.testPartition":340,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":383,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":405,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":368,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":321,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":161,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":206,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":358,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":153,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":199,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":468,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":110,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":482,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":333,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":359,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":123,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":500,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":200,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":305,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":421,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":30,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":41,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":172,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":175,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":290,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":307,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":347,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":436,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":382,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":472,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":277,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":243,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":353,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":90,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":372,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":449,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":149,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":248,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":49,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":465,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":104,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":313,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":354,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":128,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":308,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":236,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":521,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":198,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":43,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":228,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":164,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":507,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":487,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":317,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":431,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":417,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":492,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":451,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":453,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":232,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":316,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":392,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":111,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":515,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":337,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":181,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":292,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":438,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":385,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":467,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":489,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":230,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":261,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":229,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":506,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":447,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":142,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":124,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":461,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":514,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":302,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":433,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":180,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":213,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":291,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":283,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":176,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":73,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":323,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":435,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":454,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":77,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":191,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":196,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":437,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":150,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":44,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":190,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":119,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":216,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":463,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":179,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":127,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":281,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":137,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":217,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":367,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":24,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":116,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":304,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":262,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":355,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":163,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":136,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":145,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":432,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":318,"org.apache.commons.collections4.map.LRUMapTest.testLRU":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":125,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":496,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":234,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":402,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":414,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":258,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":350,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":411,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":391,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":399,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":388,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":344,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":518,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":2,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":345,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":364,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":478,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":301,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":325,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":477,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":89,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":309,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":167,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":202,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":406,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":429,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":26,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":107,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":205,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":523,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":7,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":105,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":524,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":87,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":360,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":286,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":495,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":214,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":394,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":378,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":380},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[0],"tindex":"ebb8845c-3e76-11e6-894f-1b9f9d6ac07e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[1,2,3,4,5,6],"tindex":"ebb8d27d-3e76-11e6-894f-03cd5a4d3143","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((end2 - end2) > (start1 - start2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"start1","end1":"end2","start2":"start2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"ebb8d27e-3e76-11e6-894f-ddaa2a815e31","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        {\n            if (index < 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[7,8,9,10,11,12,13,14,15,16,17],"tindex":"ebb8f98f-3e76-11e6-894f-8714d56893cf","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[18,19],"tindex":"ebb8f990-3e76-11e6-894f-19502dd647e9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"ebb920a1-3e76-11e6-894f-8f82038e7233","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"ebb920a2-3e76-11e6-894f-3dcb95a8eb46","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ebb920a3-3e76-11e6-894f-a7defdad9ab3","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[],"tindex":"ebb920a4-3e76-11e6-894f-4f8a8656a09d","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"ebb947b5-3e76-11e6-894f-67bd47b7df71","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.set(index, comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(index);\n                    } else {\n                        java.util.BitSet.clear(index);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"ebb947b6-3e76-11e6-894f-572f5fda7c32","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"ebb947b7-3e76-11e6-894f-73bc294b1ca8","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ebb96ec8-3e76-11e6-894f-45999273c5c2","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[73,74,75,76,77,78],"tindex":"ebb96ec9-3e76-11e6-894f-5d997e4f1779","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ebb96eca-3e76-11e6-894f-8bfe2df814cf","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"ebb96ecb-3e76-11e6-894f-4d9e22e7bb30","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[79],"tindex":"ebb995dc-3e76-11e6-894f-7f52a0ed63e5","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[80,81,82,83,84,85],"tindex":"ebb995dd-3e76-11e6-894f-8502b3c144ca","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"ebb995de-3e76-11e6-894f-15b6dc0e4781","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[101,102,103,104,105,106,107],"tindex":"ebb995df-3e76-11e6-894f-a93d160ff223","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"ebb9bcf0-3e76-11e6-894f-af02477eacf1","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[175],"tindex":"ebb9bcf1-3e76-11e6-894f-614918f31bb6","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"ebb9bcf2-3e76-11e6-894f-c5c5a6be9f36","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (b == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"ebb9e403-3e76-11e6-894f-f9ae15634ed3","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[214,165,215],"tindex":"ebb9e404-3e76-11e6-894f-6949de6f5618","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (!(contains(o))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[216],"tindex":"ebb9e405-3e76-11e6-894f-4b92f094c864","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map == null) {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[1],"tindex":"ebba0b16-3e76-11e6-894f-9b39467befa7","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((a == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"ebba0b17-3e76-11e6-894f-abd4cbae6ec0","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"ebba0b18-3e76-11e6-894f-bbe1b6390214","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[217],"tindex":"ebba0b19-3e76-11e6-894f-f75412e27c4c","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ebba322a-3e76-11e6-894f-5d4d9e5a1b2c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[142,129,130,131,145,146,147,148,149,150,151,152,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,218,219,174,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,215,236,237,238,239,240,241,242,243,244,245,246],"tindex":"ebba322b-3e76-11e6-894f-79ba74835ec3","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.List) == false) {\n                        return false;\n                    } \n                    final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n                    if ((other.size()) != (size())) {\n                        return false;\n                    } \n                    final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n                    final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n                    while ((it1.hasNext()) && (it2.hasNext())) {\n                        final java.lang.Object java.lang.Object = it1.next();\n                        final java.lang.Object java.lang.Object = it2.next();\n                        if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                            return false;\n                        } \n                    }\n                    return !((it1.hasNext()) || (it2.hasNext()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[247,248],"tindex":"ebba322c-3e76-11e6-894f-69f3bc39b62f","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ebba322d-3e76-11e6-894f-bde22c4db74d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if (!(contains(o))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"ebba322e-3e76-11e6-894f-013df7bca1a0","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.set(index, comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(index);\n                    } else {\n                        java.util.BitSet.clear(index);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"ebba593f-3e76-11e6-894f-6d0907b2ed37","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ebba5940-3e76-11e6-894f-af04dc6204c9","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[249],"tindex":"ebba5941-3e76-11e6-894f-9f8928d7e057","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"ebba5942-3e76-11e6-894f-5f4f101b5e4f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[250,251,252,253,254,255,256,257,258,259],"tindex":"ebba5943-3e76-11e6-894f-8dc7985e134b","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[175,260],"tindex":"ebba8054-3e76-11e6-894f-bbb5db95f25f","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ebba8055-3e76-11e6-894f-cfcde6d8f837","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"ebba8056-3e76-11e6-894f-2f577d33513d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:862","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"ebba8057-3e76-11e6-894f-679923df65ac","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[98,100,261,262,263,264,265,266,267,268],"tindex":"ebba8058-3e76-11e6-894f-9d502b7868ee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from == null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"ebbaa769-3e76-11e6-894f-d5ed74575951","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        {\n            if (index < 0) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[81,83,85],"tindex":"ebbaa76a-3e76-11e6-894f-674ab3c7448e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"ebbaa76b-3e76-11e6-894f-716b36f9441e","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"ebbaa76c-3e76-11e6-894f-65b2d907bbef","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"ebbaa76d-3e76-11e6-894f-bbdf9c2e0d7b","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[281],"tindex":"ebbace7e-3e76-11e6-894f-0fc51606c7fe","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ebbace7f-3e76-11e6-894f-cf24627822ff","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (transformer != null)"},"failures":[282],"tindex":"ebbace80-3e76-11e6-894f-973c7a3c8374","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[283,284,285,286,286,287,288,288,289,290,291],"tindex":"ebbace81-3e76-11e6-894f-918943897725","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[292,293,294,295,25,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"ebbace82-3e76-11e6-894f-b17c62fdfd3b","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[336],"tindex":"ebbaf593-3e76-11e6-894f-913367ffc38f","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"ebbaf594-3e76-11e6-894f-8f86652355f4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[337],"tindex":"ebbaf595-3e76-11e6-894f-971b55c36b80","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[338],"tindex":"ebbaf596-3e76-11e6-894f-53084516f373","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[339],"tindex":"ebbaf597-3e76-11e6-894f-dfd8fd2cb4e4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[340],"tindex":"ebbb1ca8-3e76-11e6-894f-375622a9dfde","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"ebbb1ca9-3e76-11e6-894f-cdec571107ca","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.List) == false) {\n                        return false;\n                    } \n                    final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n                    if ((other.size()) != (size())) {\n                        return false;\n                    } \n                    final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n                    final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n                    while ((it1.hasNext()) && (it2.hasNext())) {\n                        final java.lang.Object java.lang.Object = it1.next();\n                        final java.lang.Object java.lang.Object = it2.next();\n                        if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                            return false;\n                        } \n                    }\n                    return !((it1.hasNext()) || (it2.hasNext()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[339,341,342,343],"tindex":"ebbb1caa-3e76-11e6-894f-5bb2474e05dc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[150,225],"tindex":"ebbb1cab-3e76-11e6-894f-f3184ef4af78","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ebbb43bc-3e76-11e6-894f-73fef77b383c","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[344,345,346],"tindex":"ebbb43bd-3e76-11e6-894f-e3425c353842","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"ebbb43be-3e76-11e6-894f-71480abbf39e","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[347,348,349,350],"tindex":"ebbb43bf-3e76-11e6-894f-f70b80f30d5c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"ebbb6ad0-3e76-11e6-894f-597ca9bd5f77","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[351,352],"tindex":"ebbb6ad1-3e76-11e6-894f-49a641f893b1","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401],"tindex":"ebbb6ad2-3e76-11e6-894f-5f9da8057362","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[402,403,404,405,406,407,408,409],"tindex":"ebbb6ad3-3e76-11e6-894f-5171cb04278a","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"ebbb6ad4-3e76-11e6-894f-59a8fc1e9a06","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"ebbb6ad5-3e76-11e6-894f-b9b392394004","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429],"tindex":"ebbb91e6-3e76-11e6-894f-17a910207040","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[430],"tindex":"ebbb91e7-3e76-11e6-894f-7fa93eac60e1","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[431,432,433],"tindex":"ebbb91e8-3e76-11e6-894f-aff39f1add56","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"ebbb91e9-3e76-11e6-894f-738b64e7f664","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"ebbb91ea-3e76-11e6-894f-73ea346db783","method":{"position":"org.apache.commons.collections4.IteratorUtils:1017","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator, final int estimatedSize) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (estimatedSize < 1) {\n                throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(estimatedSize);\n            while (iterator.hasNext()) {\n                list.add(iterator.next());\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"ebbbb8fb-3e76-11e6-894f-cf7a86dfcb01","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[433],"tindex":"ebbbb8fc-3e76-11e6-894f-79653afa0e22","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450],"tindex":"ebbbb8fd-3e76-11e6-894f-d5a88374c94a","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"ebbbb8fe-3e76-11e6-894f-e3b719ac054f","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"ebbbb8ff-3e76-11e6-894f-65a0d5b7ded0","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[451,452,453,454,455,456,457,458,459,460,461,462,463],"tindex":"ebbbe010-3e76-11e6-894f-2fa7da19435a","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"ebbbe011-3e76-11e6-894f-4db10e5c7ac1","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[464],"tindex":"ebbbe012-3e76-11e6-894f-4f1b893e26e4","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1117","type":"CtInvocationImpl","sourcecode":"entry.isEmpty()"},"failures":[],"tindex":"ebbbe013-3e76-11e6-894f-313c5ca95295","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ebbc0724-3e76-11e6-894f-ed9d812f3d8a","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[183,465,466,467,468,469,470,471,472,473,474,475,476],"tindex":"ebbc0725-3e76-11e6-894f-eb9b36b59727","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[477,478,346,479],"tindex":"ebbc0726-3e76-11e6-894f-3dc0f20581e0","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517],"tindex":"ebbc0727-3e76-11e6-894f-e58b238fcbf4","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[518],"tindex":"ebbc0728-3e76-11e6-894f-f5454f0ea292","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ebbc0729-3e76-11e6-894f-a546657d19d8","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"ebbc2e3a-3e76-11e6-894f-b10eecb102c6","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"ebbc2e3b-3e76-11e6-894f-b76b39fd6756","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[519],"tindex":"ebbc2e3c-3e76-11e6-894f-abc3c1343bf6","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[520,521,522],"tindex":"ebbc2e3d-3e76-11e6-894f-ed623b969478","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[523,524,525,526,79],"tindex":"ebbc2e3e-3e76-11e6-894f-efdbb616ea60","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"ebbc2e3f-3e76-11e6-894f-c70d6331e2d6","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254895020/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}