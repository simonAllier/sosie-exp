{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":175,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":185,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":73,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":223,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":35,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":183,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":9,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":168,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":38,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":133,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":190,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":151,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":179,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":123,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":121,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":5,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":100,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":109,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":90,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":130,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":18,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":6,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":211,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":165,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":200,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":199,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":193,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":57,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":137,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":60,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":101,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":131,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":69,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":47,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":132,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":191,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":217,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":56,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":108,"org.apache.commons.collections4.set.CompositeSetTest.testContains":16,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":17,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":1,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":140,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":86,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":118,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":80,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":161,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":95,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":166,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":8,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":206,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":7,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":33,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":41,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":198,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":156,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":188,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":194,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":99,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":160,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":126,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":30,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":32,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":67,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":192,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":2,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":216,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":167,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":43,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":68,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":0,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":77,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":50,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":136,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":125,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":208,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":59,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":71,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":182,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":172,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":12,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":93,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":72,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":213,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":220,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":11,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":174,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":74,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":164,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":221,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":210,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":135,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":75},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:43","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"e4047c6b-2e71-11e6-b1b0-cb257f3c112d","method":{"position":"org.apache.commons.collections4.IteratorUtils:474","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<K, V> mapIterator) {\n    if (mapIterator == null) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(mapIterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"mapIterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[0],"tindex":"e40566cc-2e71-11e6-b1b0-f73aad6d185d","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1,2,3,4],"tindex":"e40566cd-2e71-11e6-b1b0-fd09a68663f2","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[],"tindex":"e405b4ee-2e71-11e6-b1b0-d75cf1af2716","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"e405b4ef-2e71-11e6-b1b0-c7fdc1581c1d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[5,6,7,8],"tindex":"e405dc00-2e71-11e6-b1b0-c33fc0835342","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (a instanceof java.util.Set<?>) {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"e405dc01-2e71-11e6-b1b0-8151d0820de3","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (inputCollection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[9,10,11,12],"tindex":"e4060312-2e71-11e6-b1b0-a3cd8829ea06","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"e4062a23-2e71-11e6-b1b0-1dbd6a886390","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[13],"tindex":"e4065134-2e71-11e6-b1b0-5978f6423639","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl","sourcecode":"(item.isEmpty()) == false"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"e4067845-2e71-11e6-b1b0-2383e17e990d","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if ((set.isEmpty()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"e4069f56-2e71-11e6-b1b0-65b687a21116","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e406c667-2e71-11e6-b1b0-61f8c36ff1e9","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[],"tindex":"e406c668-2e71-11e6-b1b0-8df597ee2a0e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.lang.String) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"e406ed79-2e71-11e6-b1b0-ebd908fb5178","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"e407148a-2e71-11e6-b1b0-215fd170ad4c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if ((index < 0) || (index >= index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[75,76,77],"tindex":"e4073b9b-2e71-11e6-b1b0-117f1ed5cd99","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"e40762ac-2e71-11e6-b1b0-437ebf29de4d","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"e40789bd-2e71-11e6-b1b0-f7583054f12e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"tindex":"e407b0ce-2e71-11e6-b1b0-651b4b9434cb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[151,205],"tindex":"e407d7df-2e71-11e6-b1b0-4572316d840b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[191,195,205,208,209,212,213,214,215,216],"tindex":"e4091060-2e71-11e6-b1b0-6df69ed25002","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (y == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"y"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[217,218,219,220,221,222,223],"tindex":"e4098591-2e71-11e6-b1b0-e55eb50f7152","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[224],"tindex":"e409aca2-2e71-11e6-b1b0-b9b37d9eda1b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":24,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}