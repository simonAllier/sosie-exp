{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":6,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":7,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":74,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":140,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":155,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":104,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":70,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":151,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":3,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":103,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":130,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":90,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":141,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":64,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":121,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":28,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":75,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":50,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":161,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":56,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":166,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":21,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":2,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":46,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":27,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":77,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":132,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":165,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":142,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":143,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":107,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":8,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":15,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":14,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":147,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":164,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":83,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":12,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":16,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":55,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":34,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":95,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":150,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":38,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":35,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":61,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":71,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":36,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":172,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":78,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":4,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":113,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":25,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":124,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":131,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":84,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":58,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":67,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":149,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":81,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":24,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":134,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":110,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":91,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":117,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":133,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":153,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":156,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":106,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":45,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":26,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":54,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":80,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":69,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":96,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":76,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":171,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":109,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":1,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":163,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":20,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":114,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":10,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":119,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":33,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":47,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":118,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":101,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":111,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":49,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":62,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":98,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":66,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":89,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":120,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":105,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":123,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":60,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":73,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":108,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":167,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":115,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":11,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":137,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":162},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtBinaryOperatorImpl","sourcecode":"xFormerParent != null"},"failures":[],"tindex":"1794a296-2eaf-11e6-80e3-2beb91109f2c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (y != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"xFormerParent":"y"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"1795b407-2eaf-11e6-80e3-7703b529cf40","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[],"tindex":"1795db18-2eaf-11e6-80e3-a99f5a4e32fb","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if (inputCollection instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"17960229-2eaf-11e6-80e3-07a00fa3ab46","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[52,53,54,55,56,57,58],"tindex":"1796293a-2eaf-11e6-80e3-71a227fcc8e8","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"1796293b-2eaf-11e6-80e3-f7e2b9cf6349","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"1796504c-2eaf-11e6-80e3-87054ac849fb","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"1796775d-2eaf-11e6-80e3-3b88e1e2cee2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj == null) || (obj == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"obj","position2":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[74,75,76],"tindex":"1796c57e-2eaf-11e6-80e3-579ace9176e1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 instanceof java.lang.Object[]) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"1796ec8f-2eaf-11e6-80e3-21f682f90ce0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[77,78],"tindex":"179713a0-2eaf-11e6-80e3-a78f7e64b601","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"179713a1-2eaf-11e6-80e3-0f1f2d6b5ea8","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:504","type":"CtMethodImpl","sourcecode":"protected void nodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) && (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>))) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                boolean = false;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n                (int)--;\n            } else {\n                boolean = false;\n                boolean = false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[103,104,105,106,107,108,109,110,111,102,112,113,114,115,116,117,118,119,120],"tindex":"179761c2-2eaf-11e6-80e3-0d86b1c533ac","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof java.util.Map<?, ?>) {\n                {\n                    int int = 0;\n                    for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                        if (isEqualValue(node.getValue(), value)) {\n                            return i;\n                        } \n                        i++;\n                    }\n                    return -1;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[121],"tindex":"179788d3-2eaf-11e6-80e3-3b0149cdac60","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"179788d4-2eaf-11e6-80e3-b160ac411303","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[153],"tindex":"179788d5-2eaf-11e6-80e3-039eb7009038","method":{"position":"org.apache.commons.collections4.IteratorUtils:364","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array) {\n    if (array == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtBinaryOperatorImpl","sourcecode":"yFormerParent != null"},"failures":[154,155,156,157,158,159,160],"tindex":"1797afe6-2eaf-11e6-80e3-5fe77958efe8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"yFormerParent":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[161],"tindex":"1797afe7-2eaf-11e6-80e3-8d5403257917","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[162,163,164,165,166,167,168,169,170],"tindex":"1797d6f8-2eaf-11e6-80e3-e35979c34a6d","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[],"tindex":"1797d6f9-2eaf-11e6-80e3-47510baa368e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[171,172],"tindex":"1797fe0a-2eaf-11e6-80e3-49af9ac6cd51","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"1797fe0b-2eaf-11e6-80e3-cfbdba160e61","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof java.util.Map<?, ?>) {\n                {\n                    int int = 0;\n                    for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                        if (isEqualValue(node.getValue(), value)) {\n                            return i;\n                        } \n                        i++;\n                    }\n                    return -1;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"value"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":22,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}