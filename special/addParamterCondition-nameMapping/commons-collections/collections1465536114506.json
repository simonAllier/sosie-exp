{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":364,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":108,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":162,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":313,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":318,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":682,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":656,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":210,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":622,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":293,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":655,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":499,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":235,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":547,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":191,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":716,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":145,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":64,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":344,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":629,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":193,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":614,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":78,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":138,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":14,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":553,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":449,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":70,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":24,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":10,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.ListUtilsTest.testLazyList":616,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":230,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":627,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":60,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":4,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":481,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":139,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":434,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":2,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":518,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":129,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":174,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":212,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":405,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":262,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":497,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":649,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":266,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":419,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":519,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":550,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":615,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":668,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":443,"org.apache.commons.collections4.CollectionUtilsTest.select":626,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":11,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":92,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":303,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":672,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":717,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":265,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":322,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":247,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":326,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":170,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":594,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":391,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":533,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":687,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":298,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":680,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":222,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":582,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":81,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":82,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":161,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":576,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":385,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":393,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":568,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":287,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":539,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":74,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":694,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":708,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":413,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":221,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":644,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":18,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":252,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":488,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":575,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":432,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":99,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":605,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":166,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":234,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":164,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":701,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":104,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":244,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":316,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":428,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":22,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":396,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":710,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":268,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":206,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":522,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":595,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":478,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":509,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":534,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":51,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":373,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":438,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":362,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":72,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":150,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":400,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":640,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":353,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":610,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":652,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":661,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":455,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":339,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":50,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":309,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":567,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":596,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":302,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":423,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":397,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":415,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":546,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":565,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":724,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":146,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":437,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":516,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":669,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":246,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.CollectionUtilsTest.union":635,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":447,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":570,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":693,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":79,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":100,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":122,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":411,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":645,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":670,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":69,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":179,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":201,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":75,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":532,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":183,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":545,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":156,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":269,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":255,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":617,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":511,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":114,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":153,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":195,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":583,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":603,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":256,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":468,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":619,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":681,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":723,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":341,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":457,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":637,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":450,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":654,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":371,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":38,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":486,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":73,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":500,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":599,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":469,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":349,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":85,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":417,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":696,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":133,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":163,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":558,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":674,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":663,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":591,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":515,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":441,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":642,"org.apache.commons.collections4.ListUtilsTest.testSubtract":213,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":238,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":315,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":429,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":278,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":142,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":343,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":536,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":527,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":601,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":180,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":426,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":245,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":675,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":542,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":17,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":361,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":181,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":151,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":217,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":496,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":502,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":658,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":288,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":492,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":165,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":236,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":328,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":131,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":691,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":433,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":282,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":395,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":264,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":493,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":237,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":650,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":120,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":52,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":354,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":279,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":110,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":152,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":33,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":98,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":695,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":54,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":126,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":186,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":168,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":274,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":611,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":240,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":531,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":275,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":422,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":476,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":421,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":192,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":289,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":8,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":483,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":91,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":263,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":465,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":688,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":190,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":569,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":49,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":196,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":638,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":368,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":337,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":199,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":712,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":646,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":683,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":609,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":185,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":678,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":471,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":621,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":692,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":647,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":510,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":202,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":466,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":448,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":109,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":218,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":251,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":340,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":641,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":219,"org.apache.commons.collections4.ListUtilsTest.testPartition":227,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":121,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":136,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":562,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":592,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":48,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":506,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":148,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":590,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":628,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":273,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":703,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":258,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":580,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":704,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":118,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":632,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":260,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":589,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":585,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":482,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":572,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":141,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":660,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":348,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":296,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":607,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":357,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":463,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":285,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":283,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":714,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":686,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":718,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":608,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":402,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":215,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":350,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":155,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":107,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":473,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":105,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":46,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":648,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":304,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":23,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":20,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":324,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":475,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":697,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":216,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":376,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":677,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":380,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":200,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":106,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":267,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":430,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":113,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":355,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":382,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":720,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":711,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":351,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":566,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":198,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":555,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":431,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":205,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":12,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":392,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":359,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":456,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":59,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":454,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":587,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":487,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":659,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":490,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":494,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":573,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":127,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":383,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":725,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":358,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":277,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":715,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":512,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":261,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":140,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":175,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":228,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":676,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":144,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":299,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":333,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":700,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":593,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":671,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":459,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":21,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":584,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":147,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":579,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":253,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":662,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":538,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":462,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":306,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":47,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":356,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":501,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":613,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":470,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":689,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":346,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":37,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":440,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":517,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":171,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":625,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":103,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":223,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":34,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":323,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":365,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":338,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":491,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":197,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":479,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":472,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":28,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":664,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":172,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":666,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":498,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":312,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":284,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":36,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":535,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":543,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":631,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":600,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":76,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":665,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":242,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":270,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":102,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":280,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":384,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":425,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":540,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":709,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":408,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":225,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":559,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":143,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":327,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":332,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":707,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":556,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":586,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":410,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":307,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":442,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":633,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":135,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":319,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":77,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":300,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":335,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":159,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":452,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":560,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":112,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":377,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":657,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":653,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":63,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":176,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":187,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":209,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":9,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":3,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":330,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":460,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":399,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":480,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":334,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":514,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":719,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":702,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":272,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":548,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":598,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":571,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":345,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":19,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":528,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":352,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":623,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":651,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":58,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":577,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":372,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":45,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":116,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":554,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":208,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":551,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":722,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":16,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":705,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":389,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":117,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":597,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":453,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":690,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":427,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":128,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":618,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":541,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":444,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":464,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":178,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":211,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":366,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":699},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"3ea22027-2ecb-11e6-81cb-b15a55e56893","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"3ea30a88-2ecb-11e6-81cb-6d5c4fde8960","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((index < 0) || (index >= beyond)) {\n                        throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n                    } \n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[0],"tindex":"3ea30a89-2ecb-11e6-81cb-b30cf079ff9c","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"3ea3319a-2ecb-11e6-81cb-83da8ee38bd8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"3ea358ab-2ecb-11e6-81cb-c72d9e5626f1","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Iterator<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (count != null) {\n                        return count.int;\n                    } \n                    return 0;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[98,99,100,101,102],"tindex":"3ea37fbc-2ecb-11e6-81cb-47d3b739706f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"3ea37fbd-2ecb-11e6-81cb-21f7e982a8b1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            if (node == null) {\n                {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n                    node.setRight(rightChild.getLeft(dataElement), dataElement);\n                    if ((rightChild.getLeft(dataElement)) != null) {\n                        rightChild.getLeft(dataElement).setParent(node, dataElement);\n                    } \n                    rightChild.setParent(node.getParent(dataElement), dataElement);\n                    if ((node.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n                    } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                        node.getParent(dataElement).setLeft(rightChild, dataElement);\n                    } else {\n                        node.getParent(dataElement).setRight(rightChild, dataElement);\n                    }\n                    rightChild.setLeft(node, dataElement);\n                    node.setParent(rightChild, dataElement);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3ea3cdde-2ecb-11e6-81cb-7986e9e042e4","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"3ea3cddf-2ecb-11e6-81cb-c77620133bd1","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[103,104,105,106],"tindex":"3ea3cde0-2ecb-11e6-81cb-9b1b11269a1d","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"3ea3f4f1-2ecb-11e6-81cb-6faaebecea61","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[107,108,109,110,111],"tindex":"3ea41c02-2ecb-11e6-81cb-3f7d1d7b00f6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[112],"tindex":"3ea41c03-2ecb-11e6-81cb-299632967efa","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[113,114,115,116,117],"tindex":"3ea44314-2ecb-11e6-81cb-e3581777e433","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[118],"tindex":"3ea44315-2ecb-11e6-81cb-e55d835fcd16","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"3ea44316-2ecb-11e6-81cb-dd998bda1055","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[119,120],"tindex":"3ea46a27-2ecb-11e6-81cb-5f7f8bd8054e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3ea46a28-2ecb-11e6-81cb-2514d956e9d6","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3ea46a29-2ecb-11e6-81cb-e9db79608d23","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"3ea4913a-2ecb-11e6-81cb-7d329216714c","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"3ea4913b-2ecb-11e6-81cb-132d926c9527","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[121,122,123,124],"tindex":"3ea4913c-2ecb-11e6-81cb-c9091a005861","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"3ea4b84d-2ecb-11e6-81cb-89cf4995b11c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"3ea4b84e-2ecb-11e6-81cb-eb71815a41ef","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Dictionary) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[179,180],"tindex":"3ea4df5f-2ecb-11e6-81cb-479a15470ab3","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"3ea4df60-2ecb-11e6-81cb-93c468955ad9","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i == (-1)) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"3ea50671-2ecb-11e6-81cb-474b76a3e3d1","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[193,194,195,196,197,198,199],"tindex":"3ea50672-2ecb-11e6-81cb-1f2deba658a1","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[200],"tindex":"3ea50673-2ecb-11e6-81cb-af66d310026a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[201,202,203,204,205,206,207,208],"tindex":"3ea52d84-2ecb-11e6-81cb-7f22208ff221","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"3ea52d85-2ecb-11e6-81cb-fbc9cb9396a2","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[209,210,211],"tindex":"3ea52d86-2ecb-11e6-81cb-4966b1bd03dc","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[212],"tindex":"3ea55497-2ecb-11e6-81cb-e39d766aaa89","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[213,214],"tindex":"3ea55498-2ecb-11e6-81cb-e76ea0ef1ab1","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[215],"tindex":"3ea57ba9-2ecb-11e6-81cb-27e9fb94d860","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"3ea57baa-2ecb-11e6-81cb-e1cd84ee8d1b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[216,217,218,219],"tindex":"3ea57bab-2ecb-11e6-81cb-2919393dceb0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[220],"tindex":"3ea5a2bc-2ecb-11e6-81cb-ef47332acb48","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"3ea5a2bd-2ecb-11e6-81cb-c345265d4aa1","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"3ea5a2be-2ecb-11e6-81cb-9feb3e68f50b","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[],"tindex":"3ea5c9cf-2ecb-11e6-81cb-adf5e682936f","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[221,222,223,224,225,226],"tindex":"3ea5c9d0-2ecb-11e6-81cb-850921eeac82","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[108,109,110],"tindex":"3ea5c9d1-2ecb-11e6-81cb-a7b1cbef3175","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[227],"tindex":"3ea5f0e2-2ecb-11e6-81cb-f168b4249005","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[228],"tindex":"3ea5f0e3-2ecb-11e6-81cb-add88c3a3060","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[229],"tindex":"3ea617f4-2ecb-11e6-81cb-834bf0562395","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[230,231,232,233,234],"tindex":"3ea617f5-2ecb-11e6-81cb-472b64f66328","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"3ea63f06-2ecb-11e6-81cb-33b9f25efbbc","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[235],"tindex":"3ea63f07-2ecb-11e6-81cb-0b5b3cb2b266","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[236],"tindex":"3ea63f08-2ecb-11e6-81cb-65b448a56b36","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"3ea66619-2ecb-11e6-81cb-1159f0b96f7c","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[54,86],"tindex":"3ea6661a-2ecb-11e6-81cb-63be0b049bab","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"tindex":"3ea6661b-2ecb-11e6-81cb-b5e1d00574d2","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,57,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"3ea68d2c-2ecb-11e6-81cb-337cb59be299","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"3ea6b43d-2ecb-11e6-81cb-e134218a1b58","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"3ea6b43e-2ecb-11e6-81cb-bb914a70b70b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Dictionary) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"3ea6b43f-2ecb-11e6-81cb-a17585e44ee9","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,121,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,122,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,123,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,124,601,602,603,604,605,606,607,608,609,610,611,612,613,214,213],"tindex":"3ea6db50-2ecb-11e6-81cb-c95d6dd9a85f","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[614],"tindex":"3ea70261-2ecb-11e6-81cb-1f4909cca21c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"3ea70262-2ecb-11e6-81cb-577ce15964f0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[615],"tindex":"3ea70263-2ecb-11e6-81cb-6f476ce1a75a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"3ea72974-2ecb-11e6-81cb-7f2c1b267b6d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"3ea72975-2ecb-11e6-81cb-4b057d6581c1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[616],"tindex":"3ea75086-2ecb-11e6-81cb-5d3d27f36082","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[617,618],"tindex":"3ea75087-2ecb-11e6-81cb-2d96b5524d75","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[619,620,621,622,623,624],"tindex":"3ea75088-2ecb-11e6-81cb-6b0758accbb8","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((end1 - end2) > (end2 - start2)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"end2","end1":"end1","start2":"start2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"3ea77799-2ecb-11e6-81cb-2b6b1831d69b","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[625],"tindex":"3ea79eaa-2ecb-11e6-81cb-778625cd42b9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[],"tindex":"3ea79eab-2ecb-11e6-81cb-e53c7502d730","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            if (node == null) {\n                {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n                    node.setRight(rightChild.getLeft(dataElement), dataElement);\n                    if ((rightChild.getLeft(dataElement)) != null) {\n                        rightChild.getLeft(dataElement).setParent(node, dataElement);\n                    } \n                    rightChild.setParent(node.getParent(dataElement), dataElement);\n                    if ((node.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n                    } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                        node.getParent(dataElement).setLeft(rightChild, dataElement);\n                    } else {\n                        node.getParent(dataElement).setRight(rightChild, dataElement);\n                    }\n                    rightChild.setLeft(node, dataElement);\n                    node.setParent(rightChild, dataElement);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[626],"tindex":"3ea7c5bc-2ecb-11e6-81cb-03f01e52008b","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[627],"tindex":"3ea7c5bd-2ecb-11e6-81cb-61360d9bcc6a","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[628,629,630,631,632],"tindex":"3ea7ecce-2ecb-11e6-81cb-65d5835d45d2","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"3ea7eccf-2ecb-11e6-81cb-37248b2826f3","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[633],"tindex":"3ea7ecd0-2ecb-11e6-81cb-793fbb5e9057","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"3ea813e1-2ecb-11e6-81cb-1fe1635e1d5e","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[634],"tindex":"3ea813e2-2ecb-11e6-81cb-95d16a0a4b91","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[635,612,613],"tindex":"3ea813e3-2ecb-11e6-81cb-b5c69f98ba13","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[160],"tindex":"3ea83af4-2ecb-11e6-81cb-3dfabad8be96","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[636,611],"tindex":"3ea83af5-2ecb-11e6-81cb-6f0584173cf7","method":{"position":"org.apache.commons.collections4.CollectionUtils:606","type":"CtMethodImpl","sourcecode":"public static <O>int cardinality(final O obj, final java.lang.Iterable<? super O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            if (coll instanceof java.util.Set<?>) {\n                return ((java.util.Set<? super O>)(coll)).contains(obj) ? 1 : 0;\n            } \n            if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n                return ((org.apache.commons.collections4.Bag<? super O>)(coll)).getCount(obj);\n            } \n            int int = 0;\n            if (obj == null) {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (element == null) {\n                        count++;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll) {\n                    if (obj.equals(element)) {\n                        count++;\n                    } \n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[637,638],"tindex":"3ea86206-2ecb-11e6-81cb-278113c95a08","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[],"tindex":"3ea86207-2ecb-11e6-81cb-4fe8d7ed7911","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"3ea86208-2ecb-11e6-81cb-4bcac7aa441a","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[471,475,495,496],"tindex":"3ea88919-2ecb-11e6-81cb-f59128e729c4","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[639],"tindex":"3ea8891a-2ecb-11e6-81cb-75404f8024d1","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"3ea8891b-2ecb-11e6-81cb-9dc61157c711","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[640,641,642,643,644,645,646,647,648,649,650,651],"tindex":"3ea8b02c-2ecb-11e6-81cb-896be375360f","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"3ea8b02d-2ecb-11e6-81cb-057a1346ee23","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object instanceof java.util.Iterator<?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (count != null) {\n                        return count.int;\n                    } \n                    return 0;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"3ea8b02e-2ecb-11e6-81cb-d9b48d683d83","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"3ea8d73f-2ecb-11e6-81cb-374eeed1df3c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((index < 0) || (index >= beyond)) {\n                        throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n                    } \n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[652,653],"tindex":"3ea8d740-2ecb-11e6-81cb-1da9b30fb092","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707],"tindex":"3ea8d741-2ecb-11e6-81cb-3342c9ee37c0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[708,709,710,711,712,713,714,715,716,717,718,719,720,721],"tindex":"3ea8fe52-2ecb-11e6-81cb-cd961d780634","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"3ea8fe53-2ecb-11e6-81cb-7b4eb933eded","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,57,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"3ea92564-2ecb-11e6-81cb-23b0c4c6073a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[722,635,612,613],"tindex":"3ea92565-2ecb-11e6-81cb-f9bd1af97f6f","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"3ea94c76-2ecb-11e6-81cb-2568e54c2b40","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[723],"tindex":"3ea94c77-2ecb-11e6-81cb-816c51aebffa","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[724],"tindex":"3ea94c78-2ecb-11e6-81cb-1d27977a4295","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"3ea97389-2ecb-11e6-81cb-f7ede093ee7c","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[725],"tindex":"3ea9738a-2ecb-11e6-81cb-0f840349b487","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}