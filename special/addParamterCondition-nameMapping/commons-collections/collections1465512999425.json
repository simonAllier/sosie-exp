{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":32,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":241,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":9,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":73,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":177,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":126,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":40,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":85,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":62,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":142,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":95,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":261,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":228,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":113,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":39,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":206,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":200,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":86,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":110,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":238,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":195,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":99,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":193,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":17,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":19,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":118,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":201,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":257,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":266,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":102,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":88,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":167,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":78,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":141,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":139,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":244,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":123,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":259,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":165,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":168,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":264,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":75,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":125,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":116,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":101,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":105,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":57,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":76,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":52,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":226,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":93,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":247,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":219,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":265,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":197,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":210,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":67,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":20,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":227,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":146,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":64,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":104,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":44,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":60,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":204,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":84,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":124,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":175,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":260,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":199,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":111,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":119,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":269,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":87,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":58,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":225,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":164,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":129,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":229,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":98,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":100},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"6cf7c2a6-2e95-11e6-b775-5de51b8fae73","method":{"position":"org.apache.commons.collections4.MapUtils:386","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key, final java.lang.String defaultValue) {\n    if (map != null) {\n        {\n            java.lang.String java.lang.String = org.apache.commons.collections4.MapUtils.getString(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"6cf8ad07-2e95-11e6-b775-5728ce7a29ba","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[0,1],"tindex":"6cf8ad08-2e95-11e6-b775-bd201770024e","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"6cf8d419-2e95-11e6-b775-ab5ae4bf1ee7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"6cf8d41a-2e95-11e6-b775-d1e00786dec0","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"6cf8fb2b-2e95-11e6-b775-8ff5a838414d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if ((key instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[26],"tindex":"6cf9494c-2e95-11e6-b775-f79f7528df20","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:475","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[],"tindex":"6cf9705d-2e95-11e6-b775-67e261a80556","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"6cf9976e-2e95-11e6-b775-6da1807a13ec","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index <= 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"6cf9be7f-2e95-11e6-b775-fd2c000fc485","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[86,87,88,89,90],"tindex":"6cf9be80-2e95-11e6-b775-b99c4566f981","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[91],"tindex":"6cf9e591-2e95-11e6-b775-7ddad7d262f8","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (null == obj) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"6cfa0ca2-2e95-11e6-b775-a39ee85b3be5","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"6cfa33b3-2e95-11e6-b775-1b8de43c70c1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"position == null"},"failures":[92],"tindex":"6cfa33b4-2e95-11e6-b775-93154f96506c","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.set.CompositeSet.this.mutator) == null"},"failures":[],"tindex":"6cfa81d5-2e95-11e6-b775-7b7e9666f08a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"6cfa81d6-2e95-11e6-b775-df1e2195a36f","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"6cfaa8e7-2e95-11e6-b775-e7b8266128c6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[93],"tindex":"6cfaa8e8-2e95-11e6-b775-f12ddf89ffca","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 == null) {\n                {\n                    boolean boolean = false;\n                    final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n                    while (it.hasNext()) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                        if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[94],"tindex":"6cfacff9-2e95-11e6-b775-73cd31fb6c13","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:73","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.queue.TransformedQueue<E> org.apache.commons.collections4.queue.TransformedQueue<E> = new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n            if ((queue.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(queue.toArray()));\n                queue.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"6cfacffa-2e95-11e6-b775-a14cea404021","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[95,96,97],"tindex":"6cfacffb-2e95-11e6-b775-415f8fb9c040","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"tindex":"6cfaf70c-2e95-11e6-b775-55f5e8df7fdd","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[147],"tindex":"6cfb1e1d-2e95-11e6-b775-7d91febff269","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[],"tindex":"6cfb1e1e-2e95-11e6-b775-4779832ea0db","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n                    final K K = entry.getKey();\n                    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n                    if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                        removeEntry(node);\n                        return true;\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtBinaryOperatorImpl","sourcecode":"(validForUpdate) == false"},"failures":[],"tindex":"6cfb1e1f-2e95-11e6-b775-5f6958fa0d68","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (toInclusive == false) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"validForUpdate":"toInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"6cfb4530-2e95-11e6-b775-c1d0209bf94c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n                    final K K = entry.getKey();\n                    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n                    if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                        removeEntry(node);\n                        return true;\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"6cfb4531-2e95-11e6-b775-f13a3f8dc437","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 == null) {\n                {\n                    boolean boolean = false;\n                    final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n                    while (it.hasNext()) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                        if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key4"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"6cfb6c42-2e95-11e6-b775-33adb1ec5685","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[148],"tindex":"6cfb6c43-2e95-11e6-b775-df421a5a1ed1","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[149],"tindex":"6cfb6c44-2e95-11e6-b775-ddb716eed2b4","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[150,151,152,153,154],"tindex":"6cfb9355-2e95-11e6-b775-a5acb1dc605e","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[155,156,157,158,159,160,150],"tindex":"6cfb9356-2e95-11e6-b775-edbc7ea631a0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"6cfb9357-2e95-11e6-b775-a3c979bb1079","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[192,193,194,195,161,196,197,198,199,200,201,162,202,203,163,164,204,165,166,167,205,168,169,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,170,171,223,224,225,172,226,227,228,229,230,231,232,173,233,234,235,236,237,238,239,174,175,240,176,177,178,241,179,180,242,181,243,244,182,183,245,246,247,248,249,250,251,252,253,184,254,255,185,186,256,257,187,188,189,190,191],"tindex":"6cfbba68-2e95-11e6-b775-4f4c8b6d445d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key instanceof java.util.Dictionary) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[258,259,260,261,262,263,264,265],"tindex":"6cfbba69-2e95-11e6-b775-d18304475e0e","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"6cfbe17a-2e95-11e6-b775-6f431cc87661","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object != null) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[266,267],"tindex":"6cfbe17b-2e95-11e6-b775-63bff29fbbf3","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > index) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index","bound":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[268],"tindex":"6cfbe17c-2e95-11e6-b775-777e88e9de98","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[269],"tindex":"6cfbe17d-2e95-11e6-b775-4925cd7a3f77","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:70","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> uniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[270],"tindex":"6cfc088e-2e95-11e6-b775-3914b5576668","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":41,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}