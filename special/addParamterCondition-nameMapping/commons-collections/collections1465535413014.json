{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":232,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":147,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":211,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":38,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":255,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":198,"org.apache.commons.collections4.map.LinkedMapTest.testReset":125,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":209,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":213,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":234,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":246,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":113,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":39,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":245,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":96,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":233,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":3,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":90,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":201,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":9,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":100,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":106,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":152,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":159,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":158,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":249,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":142,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":87,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":150,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":74,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":247,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":189,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":144,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":75,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":162,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":103,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":121,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":46,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":92,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":37,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":242,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":25,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":34,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":207,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":173,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":61,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":111,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":114,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":30,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":151,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":166,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":95,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":116,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":212,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":171,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":23,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":218,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":169,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":237,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":2,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":32,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":117,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":80,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":238,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":192,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":236,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":81,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":22,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":215,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":141,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":99,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":84,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":181,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":223,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":156,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":155,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":62,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":157,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":130,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":191,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":135,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":188,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":108,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":71,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":175,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":105,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":250,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":82,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":109,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":33,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":120,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":94,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":98,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":122,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":220,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":153,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":197,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":7,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":126,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.map.LinkedMapTest.testClone":118,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":83,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":252,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":172,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":43,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":5,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":248,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":6,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":20,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":47,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":41,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":235,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":123,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":124,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":202,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":29,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":115,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":63,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":199,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":180,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":24,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":184,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":10,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":190,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":64,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":149,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":205,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":148,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":28,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":88,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":146,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":12,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":127,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":251,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":174,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":85,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":176,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":240,"org.apache.commons.collections4.map.LRUMapTest.testClone":182,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":241,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":86,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":154,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":187,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":128,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":208,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":200,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":219,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":196,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":97,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":178,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":21,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":45,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":244,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":231,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":132,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":217,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":89,"org.apache.commons.collections4.map.LRUMapTest.testLRU":183,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":77,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":18,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":56,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":4,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":216,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":42,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":104,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":239,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":101,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":224,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":54,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":55,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":185,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":194,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":177,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":227,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":230,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":229,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":119,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":228,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":19,"org.apache.commons.collections4.map.LRUMapTest.testReset":195,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":179,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":225,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":226,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":48,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":222,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":73,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":193,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":1,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":0,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":139,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":60,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":254,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":59,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":137,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":186,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":221,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":16,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":163,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":214,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":91,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":93,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":131},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[],"tindex":"9c83dc04-2ec9-11e6-b802-71fe2c2a4e18","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"9c849f55-2ec9-11e6-b802-85451ed488f4","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index >= index) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[0,1,2],"tindex":"9c84c666-2ec9-11e6-b802-f341f4cfe674","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"9c84ed77-2ec9-11e6-b802-e9e991f18b36","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"9c851488-2ec9-11e6-b802-87c00abc52a9","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"9c853b99-2ec9-11e6-b802-8d468b5695e0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)"},"failures":[45,46,47,48,49,50,51,52,53],"tindex":"9c8589ba-2ec9-11e6-b802-1d7b61201c91","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[54,55,56],"tindex":"9c85b0cb-2ec9-11e6-b802-3165df9e2a33","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[57,58],"tindex":"9c85d7dc-2ec9-11e6-b802-ad3dc244ce8a","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"9c85feed-2ec9-11e6-b802-43019a8f2b5f","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtBinaryOperatorImpl","sourcecode":"iterator != (currentIterator)"},"failures":[],"tindex":"9c8625fe-2ec9-11e6-b802-996d860c94df","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != iterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator","currentIterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"9c86741f-2ec9-11e6-b802-936caefeb900","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"9c86c140-2ec9-11e6-b802-e3dea048f164","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode > hashCode) {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"hashCode","bound":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"9c86e851-2ec9-11e6-b802-8f1adc526ef3","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[],"tindex":"9c870f62-2ec9-11e6-b802-81ce3ba82d98","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"9c870f63-2ec9-11e6-b802-adc425c46249","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[249,250,251],"tindex":"9c870f64-2ec9-11e6-b802-d7f0d4d54209","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[252],"tindex":"9c873675-2ec9-11e6-b802-d9c16363b5e6","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"9c873676-2ec9-11e6-b802-f7eb4aa7e80c","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key.isAssignableFrom(key.getReturnType())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"key","method":"key"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[253],"tindex":"9c873677-2ec9-11e6-b802-35761ca22d71","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"9c875d88-2ec9-11e6-b802-5def7b07ac58","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[254],"tindex":"9c878499-2ec9-11e6-b802-d551c198b1aa","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl","sourcecode":"m < 0"},"failures":[255],"tindex":"9c87849a-2ec9-11e6-b802-2dfa6fce65f2","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9c87abab-2ec9-11e6-b802-0341bdd7fda0","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"9c87abac-2ec9-11e6-b802-9fff6d2f2728","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9c87d2bd-2ec9-11e6-b802-1366a008b30f","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Number) {\n                        return ((java.lang.Number)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        try {\n                            final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                            return java.text.NumberFormat.getInstance().parse(text);\n                        } catch (final java.text.ParseException e) {\n                        }\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":26,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}