{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":20,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":180,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":787,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":317,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":717,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":445,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":629,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":226,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":424,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":478,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":32,"org.apache.commons.collections4.CollectionUtilsTest.collect":490,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":543,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":545,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":443,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":544,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":253,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":341,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":79,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":175,"org.apache.commons.collections4.CollectionUtilsTest.get":632,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":362,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":770,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":453,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":400,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":788,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":802,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":97,"org.apache.commons.collections4.ListUtilsTest.testLazyList":492,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":66,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":595,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":497,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":5,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":321,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":336,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":204,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":262,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":608,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":706,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":744,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":469,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":148,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":161,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":514,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":480,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":603,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":475,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":774,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":728,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":729,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":730,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":83,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":215,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":372,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":716,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":589,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":364,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":344,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":272,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":21,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":456,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":570,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":87,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":460,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":40,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":402,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":507,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":296,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":633,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":695,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":697,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":606,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":627,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":168,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":684,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":55,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":136,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":805,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":292,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":740,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":679,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":775,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":511,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":796,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":515,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":58,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":243,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":208,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":398,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":257,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":694,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":442,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":318,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":103,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":648,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":790,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":791,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":302,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":2,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":612,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":768,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":472,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":623,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":815,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":662,"org.apache.commons.collections4.set.PredicatedSetTest.testSimpleSerialization":381,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsSelfHashCode":383,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":588,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":777,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":812,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":82,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":191,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":71,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":223,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":734,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":219,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":533,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":742,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":280,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":222,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":394,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":17,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":100,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalEmptyCollectionExists":380,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":809,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":265,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":311,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":452,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":247,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":213,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":279,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":278,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":449,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":182,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":438,"org.apache.commons.collections4.map.LRUMapTest.testReset":234,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":558,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":538,"org.apache.commons.collections4.CollectionUtilsTest.exists":141,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":707,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":461,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":307,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":24,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":387,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":751,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":304,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":374,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":248,"org.apache.commons.collections4.map.LinkedMapTest.testReset":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":702,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":263,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":340,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":283,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":773,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":512,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":522,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":365,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":517,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":535,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":531,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":282,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":581,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":391,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":653,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":128,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":555,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":665,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":605,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":415,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":130,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":448,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":332,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":644,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":688,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":720,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":183,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":187,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":111,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":346,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":715,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":646,"org.apache.commons.collections4.map.HashedMapTest.testClone":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":786,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":88,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":85,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":541,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":683,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":556,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":339,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":604,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":159,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":746,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":245,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":440,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":578,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":639,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":810,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":584,"org.apache.commons.collections4.SetUtilsTest.testHashCode":620,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":498,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":1,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":518,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":147,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":326,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":325,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":327,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":27,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":303,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":214,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":769,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":217,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":308,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":806,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":474,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":75,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":523,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":109,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":506,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":337,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":433,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":295,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":86,"org.apache.commons.collections4.map.LinkedMapTest.testClone":294,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":418,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":808,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":763,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":784,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":797,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":692,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":765,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":764,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":708,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":102,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":249,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":803,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":722,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":778,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":759,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":316,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":393,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":179,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":210,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":760,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":118,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":250,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":124,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":352,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":652,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":465,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":489,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":441,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":590,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":733,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":640,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":305,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":0,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":540,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":599,"org.apache.commons.collections4.map.LRUMapTest.testLRU":236,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":509,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":548,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":154,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":574,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":723,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":404,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":669,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":211,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":273,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":666,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":13,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":271,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":246,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":91,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":81,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":682,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":163,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":349,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":804,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":656,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":536,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":281,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":36,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":261,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":525,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":701,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":530,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":732,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":731,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":375,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":46,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":557,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":795,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":416,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":309,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":313,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":636,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":373,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":422,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":573,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":315,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":579,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":615,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":668,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":647,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":779,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":201,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":224,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":761,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":368,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":494,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":205,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":172,"org.apache.commons.collections4.CollectionUtilsTest.transform2":488,"org.apache.commons.collections4.CollectionUtilsTest.transform1":547,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":73,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":493,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":598,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":367,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":553,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":395,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":711,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":286,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":444,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":719,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":655,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":434,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":351,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":385,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":549,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":423,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":116,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":491,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":312,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":664,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":18,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":151,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":485,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":207,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":526,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":713,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":807,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":516,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":611,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":412,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":314,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":564,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":699,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":674,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":634,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":780,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":659,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":737,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":251,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":323,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":63,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":527,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":133,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":459,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":614,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":131,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":771,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":772,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":37,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":231,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":43,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":484,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":115,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":29,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":113,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":417,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":794,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":793,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":792,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":360,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":397,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":499,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":724,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":693,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":377,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":519,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":53,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":51,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":568,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":567,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":566,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":289,"org.apache.commons.collections4.map.LRUMapTest.testClone":235,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":123,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":178,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":324,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":752,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":252,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":799,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":371,"org.apache.commons.collections4.set.PredicatedSetTest.testCanonicalFullCollectionExists":378,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":119,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":408,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":409,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":650,"org.apache.commons.collections4.list.TreeListTest.testListEquals":496,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":592,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":35,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":426,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":681,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":550,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":150,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":220,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":129,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":602,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":184,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":537,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":230,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":347,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":386,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":569,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":617,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":382,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":379,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":59,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":529,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":413,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":198,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":561,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":560,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":559,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":376,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":355,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":628,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":813,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":481,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":690,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":667,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":661,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":138,"org.apache.commons.collections4.set.PredicatedSetTest.testGetSet":357,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":710,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":814,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":330,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":322,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":329,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":576,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":643,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":671,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":328,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":798,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":320,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":90,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":4,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":431,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":513,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":657,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":126,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":736,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":256,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":635,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":756,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":757,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":571,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":758,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":705,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":687,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":157,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":534,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":232,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":660,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":64,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":267,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":689,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":206,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":446,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":185,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":767,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":563,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":405,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":747,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":132,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":120,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":510,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":607,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":500,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":189,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":477,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":631,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":596,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":783,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":641,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":748,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":389,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":142,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":678,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":630,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":458,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":663,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":139,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":269,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":502,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":414,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":407,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":539,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":582,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":369,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":156,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":575,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":714,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":228,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":359,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":637,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":350,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":421,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":597,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":811,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":691,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":348,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":76,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":127,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":255,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":739,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":3,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":361,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":225,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":101,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":165,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":591,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":401,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":542,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":427,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":436,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":801,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":528,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":447,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":754,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":755,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":753,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":464,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":750,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":384,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":725,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":399,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":762,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":370,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":580,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":190,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":78,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":482,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":686,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":745,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":396,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":432,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":554,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":743,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":625,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":649,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":618,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":238,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":84,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":624,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":552,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":675,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":345,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":176,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":173,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":430,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":727,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":310,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":403,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":776,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":508,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":601,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":619,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":651,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":239,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":672,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":390,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":487,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":264},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"62b8ee2a-3e3e-11e6-9143-674b4bd074c7","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8],"tindex":"62b93c4b-3e3e-11e6-9143-e902a057df8d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[9,10,11],"tindex":"62b93c4c-3e3e-11e6-9143-732444f1ae34","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"62b9635d-3e3e-11e6-9143-19ae938e1f99","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"62b9635e-3e3e-11e6-9143-258827fd3643","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"62b9635f-3e3e-11e6-9143-c75a45ee2028","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[109],"tindex":"62b98a70-3e3e-11e6-9143-0f5a7f6778f7","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[110,111,112,113,114,115],"tindex":"62b98a71-3e3e-11e6-9143-8799c2936290","method":{"position":"org.apache.commons.collections4.map.LazyMap:160","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final K K = ((K)(key));\n                final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(castKey);\n                java.util.Map<K, V>.put(castKey, value);\n                return value;\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"62b98a72-3e3e-11e6-9143-ab6d86af6048","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"62b9b183-3e3e-11e6-9143-dde90f8ba490","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"62b9b184-3e3e-11e6-9143-c1cba4ced6b0","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"62b9b185-3e3e-11e6-9143-0d0e1e45e42b","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[140],"tindex":"62b9b186-3e3e-11e6-9143-3163d4c98aa9","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[141],"tindex":"62b9d897-3e3e-11e6-9143-4d93c8ae650c","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if (input != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((input != null) && (predicate != null)) {\n                        for (final C C : input) {\n                            if (predicate.evaluate(o)) {\n                                return true;\n                            } \n                        }\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[142],"tindex":"62b9d898-3e3e-11e6-9143-8f19f3abed12","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[143],"tindex":"62b9d899-3e3e-11e6-9143-5ff3abc4bc7d","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"tindex":"62b9d89a-3e3e-11e6-9143-8dc53f850d3e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[229,230],"tindex":"62b9ffab-3e3e-11e6-9143-e951137871a7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"62b9ffac-3e3e-11e6-9143-e3d49903466e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"62b9ffad-3e3e-11e6-9143-19cb92acb889","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[346,347,348,349,350,351,76,77,78],"tindex":"62ba26be-3e3e-11e6-9143-fb6ce8c024ff","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return decorated().getKey(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[352,353],"tindex":"62ba26bf-3e3e-11e6-9143-c3b5eea1e4b6","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[354],"tindex":"62ba26c0-3e3e-11e6-9143-3da32433e2af","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383],"tindex":"62ba26c1-3e3e-11e6-9143-c1abe2e61699","method":{"position":"org.apache.commons.collections4.set.PredicatedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSet<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[11],"tindex":"62ba4dd2-3e3e-11e6-9143-d960abd7081a","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[384,385],"tindex":"62ba4dd3-3e3e-11e6-9143-01eb94acb0c2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[12,13,14,15,16,17,19,20,21,22,23,24,25,18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,66,68,69,70,71,72,73,75,76,77,78,74,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"62ba4dd4-3e3e-11e6-9143-2dd27579d982","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414],"tindex":"62ba4dd5-3e3e-11e6-9143-1bcb16887c3f","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"62ba74e6-3e3e-11e6-9143-159e64e9ed28","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"62ba74e7-3e3e-11e6-9143-8b3a4db1a907","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"62ba74e8-3e3e-11e6-9143-21c317c6ea24","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[415,416,417,418,419,420,421],"tindex":"62ba74e9-3e3e-11e6-9143-9be0bdc7d06c","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[422,423,424,425,426,427],"tindex":"62ba74ea-3e3e-11e6-9143-31802cba54d3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[428,429,430,431,432,433,434,435,436,437,438,439,440,441,442],"tindex":"62ba74eb-3e3e-11e6-9143-a71f143d6b85","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"62ba9bfc-3e3e-11e6-9143-61e6716cc2df","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[443,444],"tindex":"62ba9bfd-3e3e-11e6-9143-315f362935bc","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"62ba9bfe-3e3e-11e6-9143-431ad3d2c567","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[445,446],"tindex":"62ba9bff-3e3e-11e6-9143-cd4ec9a2c234","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"62ba9c00-3e3e-11e6-9143-b5099163c597","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"tindex":"62bac311-3e3e-11e6-9143-c10a5f35f4a9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"62bac312-3e3e-11e6-9143-57c2833083ff","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"62bac313-3e3e-11e6-9143-5d177af777f1","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[480,481,482,483],"tindex":"62bac314-3e3e-11e6-9143-53676df341b9","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[424,484,485,486,487],"tindex":"62bac315-3e3e-11e6-9143-c583190d3e08","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[488,489,490],"tindex":"62bac316-3e3e-11e6-9143-6dd8a87466f5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[491],"tindex":"62baea27-3e3e-11e6-9143-a976cea727f4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        result |= remove(name);\n                    }\n                    return result;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"62baea28-3e3e-11e6-9143-3b40254dc6bc","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[492],"tindex":"62baea29-3e3e-11e6-9143-d514cee56688","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,416,517,417,418,518,419,519,520,420,521,522,421,523,524],"tindex":"62baea2a-3e3e-11e6-9143-43f2cc5baa53","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[525,526,527],"tindex":"62baea2b-3e3e-11e6-9143-b52294442c1e","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[528,529,530,531,532],"tindex":"62bb113c-3e3e-11e6-9143-3d1f142f15ab","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[533,352,353],"tindex":"62bb113d-3e3e-11e6-9143-7312bebcfdce","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[534,535,536,537],"tindex":"62bb113e-3e3e-11e6-9143-d97e16fb3d7b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"62bb113f-3e3e-11e6-9143-6d9e72511e49","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[538,539,540,541],"tindex":"62bb3850-3e3e-11e6-9143-e16a572ed16d","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[465,466,467,542,543,544,545,546],"tindex":"62bb3851-3e3e-11e6-9143-59321adf8d49","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (transformer != null)"},"failures":[547,488],"tindex":"62bb3852-3e3e-11e6-9143-a1dd179536b7","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[548,549,550,551,552,553,207,208],"tindex":"62bb3853-3e3e-11e6-9143-33d932731687","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[554],"tindex":"62bb3854-3e3e-11e6-9143-55ec548e2b35","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,233,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603],"tindex":"62bb3855-3e3e-11e6-9143-392e2970e347","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619],"tindex":"62bb5f66-3e3e-11e6-9143-af585d40d8ea","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[620],"tindex":"62bb5f67-3e3e-11e6-9143-8d0ad9582f71","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"62bb5f68-3e3e-11e6-9143-6375d17b362a","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"62bb5f69-3e3e-11e6-9143-7f960683c84a","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"62bb867a-3e3e-11e6-9143-11150e282e40","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[621],"tindex":"62bb867b-3e3e-11e6-9143-7b83bcc6c266","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[622],"tindex":"62bb867c-3e3e-11e6-9143-6f16f7a63b6d","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"62bb867d-3e3e-11e6-9143-57a3fe60ace1","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[623],"tindex":"62bb867e-3e3e-11e6-9143-9bf1ca098a98","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"62bbad8f-3e3e-11e6-9143-c7c9411b6e21","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        result |= remove(name);\n                    }\n                    return result;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[231],"tindex":"62bbad90-3e3e-11e6-9143-bb1faa6ac110","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[624,625,626,627,628,629],"tindex":"62bbad91-3e3e-11e6-9143-939ee1cbe0ad","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((end1 - end2) > (end2 - start2)) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"end2","end1":"end1","start2":"start2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"62bbad92-3e3e-11e6-9143-bfbcd7d3d9eb","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[630],"tindex":"62bbad93-3e3e-11e6-9143-7396ef9876e3","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"62bbd4a4-3e3e-11e6-9143-077f02ce6d70","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return decorated().getKey(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"62bbd4a5-3e3e-11e6-9143-f94bf5ca8562","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[],"tindex":"62bbd4a6-3e3e-11e6-9143-25978035328e","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if (input != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((input != null) && (predicate != null)) {\n                        for (final C C : input) {\n                            if (predicate.evaluate(o)) {\n                                return true;\n                            } \n                        }\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[554],"tindex":"62bbd4a7-3e3e-11e6-9143-b3121ff3d65c","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[631],"tindex":"62bbd4a8-3e3e-11e6-9143-1d8aa9b3a85f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[632,633,634,635,636],"tindex":"62bbd4a9-3e3e-11e6-9143-f16b6f77a685","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:543","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[489],"tindex":"62bbd4aa-3e3e-11e6-9143-c37294bf7e81","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if (equator == null) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[637],"tindex":"62bbfbbb-3e3e-11e6-9143-15ae70c09993","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"62bbfbbc-3e3e-11e6-9143-7796e9ea895b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,0,746,747,748,749,1,750,751,2,752,753,754,755,756,757,758,759,760,3,4,5,6,7,8,235,236,237,238,239,240,241,242,243,244,245,246,247,250,251,252,253,254,255,256,259,260,261,262,264,266,267,268,269,270,274,275,276,277,278,279,280,283,284,287,288,289,290,291,294,295,298,292,301,302,303,304,305,306,307,310,311,312,313,315,317,318,319,320,321,325,326,327,328,329,330,331,334,335,338,339,340,341,342,761,762,534,536,535,537,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806],"tindex":"62bbfbbd-3e3e-11e6-9143-79b398e3b5ee","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"62bbfbbe-3e3e-11e6-9143-91450a747ecf","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[807,808],"tindex":"62bc22cf-3e3e-11e6-9143-41b152c19079","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"62bc22d0-3e3e-11e6-9143-97a31c139e2a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[809,810],"tindex":"62bc22d1-3e3e-11e6-9143-d35f251cabad","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"62bc22d2-3e3e-11e6-9143-290646a55d1c","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[19,20],"tindex":"62bc22d3-3e3e-11e6-9143-95f61521b15d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"62bc22d4-3e3e-11e6-9143-ddfe1f9e5ac8","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"62bc49e5-3e3e-11e6-9143-95b0de17200f","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"62bc49e6-3e3e-11e6-9143-1f0b65748252","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[811],"tindex":"62bc49e7-3e3e-11e6-9143-2bf38721afe1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"62bc49e8-3e3e-11e6-9143-bb01ed6d27a4","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[610,618],"tindex":"62bc49e9-3e3e-11e6-9143-d9e37d620dc6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"62bc70fa-3e3e-11e6-9143-45c0887bab50","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"62bc70fb-3e3e-11e6-9143-27cfabc4fe0d","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"62bc70fc-3e3e-11e6-9143-a9f6336942fa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[812,813,814,815],"tindex":"62bc70fd-3e3e-11e6-9143-abb68d8693cf","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777464/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}