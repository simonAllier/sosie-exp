{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":63,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":555,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":677,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":288,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":430,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":516,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":330,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":790,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":327,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":71,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":776,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":595,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":803,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":155,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":177,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":406,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":539,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":761,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":826,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":67,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":11,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":254,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":845,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":774,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":688,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":99,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":613,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":735,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":135,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":443,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":603,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":690,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":703,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":296,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":242,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":400,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":175,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":633,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":329,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":766,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":834,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":81,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":614,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":756,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":543,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":831,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":171,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":202,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":515,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":699,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":290,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":379,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":64,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":770,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":29,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":303,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":729,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":846,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":386,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":819,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":79,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":797,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":412,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":500,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":383,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":592,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":590,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":345,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":190,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":598,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":855,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":188,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":504,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":187,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":128,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":184,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":572,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":94,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":162,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":229,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":409,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":382,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":399,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":686,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":544,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":561,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":97,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":781,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":449,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":853,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":234,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":455,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":431,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":784,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":557,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":558,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":844,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":418,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":397,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":258,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":448,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":218,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":458,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":645,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":807,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":546,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":24,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":663,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":277,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":795,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":291,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":118,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":794,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":60,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":675,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":465,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":424,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":248,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":707,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":339,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":706,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":62,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":153,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":705,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":476,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":159,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":158,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":191,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":611,"org.apache.commons.collections4.map.LRUMapTest.testReset":445,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":328,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":824,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":852,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":601,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":421,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":755,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":57,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":396,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":736,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":133,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":805,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":185,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":176,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":685,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":405,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":451,"org.apache.commons.collections4.map.LinkedMapTest.testReset":410,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":238,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":602,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":143,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":463,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":186,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":600,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":793,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":542,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":594,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":336,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":538,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":725,"org.apache.commons.collections4.ListUtilsTest.testPartition":245,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":478,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":813,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":656,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":370,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":326,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":738,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":179,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":687,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":441,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":108,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":643,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":577,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":521,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":1,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":498,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":717,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":307,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":514,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":173,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":281,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":174,"org.apache.commons.collections4.map.HashedMapTest.testClone":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":554,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":718,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":30,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":259,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":27,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":780,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":571,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":829,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":335,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":142,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":332,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":585,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":344,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":597,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":388,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":151,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":667,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":351,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":619,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":641,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":636,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":823,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":394,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":438,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":437,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":439,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":510,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":66,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":132,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":219,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":747,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":750,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":20,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":301,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":444,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":637,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":759,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":411,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":28,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":734,"org.apache.commons.collections4.map.LinkedMapTest.testClone":414,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":741,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":212,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":553,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":214,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":44,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":783,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":526,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":655,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":452,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":446,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":227,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":35,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":123,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":429,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":183,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":851,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":838,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":622,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":313,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":398,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":648,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":453,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":777,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":268,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":111,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":754,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":260,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":612,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":818,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":494,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":205,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":352,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":644,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":680,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":134,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":340,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":302,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":789,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":387,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":408,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":827,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":772,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":652,"org.apache.commons.collections4.map.LRUMapTest.testLRU":146,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":524,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":195,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":822,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":115,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":333,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":371,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":472,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":764,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":820,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":628,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":842,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":65,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":513,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":768,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":52,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":470,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":152,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":23,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":767,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":782,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":728,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":233,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":587,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":304,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":365,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":497,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":107,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":477,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":75,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":839,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":237,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":806,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":203,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":508,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":843,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":715,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":310,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":606,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":708,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":85,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":223,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":484,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":627,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":422,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":273,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":426,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":492,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":249,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":428,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":670,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":373,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":357,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":548,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":710,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":536,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":773,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":0,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":18,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":716,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":719,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":198,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":668,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":89,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":287,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":495,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":480,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":6,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":519,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":280,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":363,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":346,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":315,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":391,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":720,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":347,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":284,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":653,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":505,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":481,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":292,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":683,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":334,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":407,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":425,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":488,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":758,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":321,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":61,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":511,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":427,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":808,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":276,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":591,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":821,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":236,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":377,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":549,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":209,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":366,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":709,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":435,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":454,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":812,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":58,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":102,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":804,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":551,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":814,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":762,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":271,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":694,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":540,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":731,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":5,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":726,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":131,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":701,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":541,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":570,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":129,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":816,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":76,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":349,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":630,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":658,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":659,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":849,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":282,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":502,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":501,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":624,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":68,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":605,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":503,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":279,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":560,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":222,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":221,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":828,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":584,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":832,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":231,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":317,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":647,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":323,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":848,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":92,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":90,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":771,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":684,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":165,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":289,"org.apache.commons.collections4.map.LRUMapTest.testClone":450,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":139,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":520,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":704,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":120,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":436,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":666,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":665,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":664,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":753,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":779,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":751,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":154,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":752,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":225,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":267,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":676,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":532,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":749,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":679,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":854,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":140,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":110,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":721,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":74,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":247,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":815,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":232,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":256,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":748,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":211,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":660,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":727,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":673,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":650,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":7,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":348,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":164,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":740,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":275,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":518,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":101,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":251,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":15,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":730,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":98,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":743,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":491,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":785,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":757,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":442,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":337,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":802,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":769,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":786,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":73,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":517,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":581,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":810,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":763,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":168,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":640,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":801,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":368,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":261,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":615,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":616,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":617,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":56,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":274,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":116,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":137,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":355,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":434,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":433,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":837,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":170,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":580,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":651,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":314,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":809,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":364,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":266,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":208,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":306,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":457,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":791,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":121,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":122,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":241,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":830,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":576,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":106,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":711,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":367,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":596,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":840,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":103,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":722,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":841,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":325,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":194,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":833,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":625,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":467,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":788,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":792,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":579,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":217,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":525,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":671,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":692,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":420,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":760,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":389,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":485,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":800,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":150,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":320,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":319,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":376,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":714,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":798,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":293,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":712,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":252,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":618,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":12,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":353,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":745,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":390,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":850,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":566,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":265,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":305,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":318,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":269,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":689,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":113,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":775,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":469,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":533,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":93,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":742,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":272,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":324,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":487,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":825,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":672,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":573,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":512,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":309,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":297,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":312,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":608,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":378,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":610,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":646,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":41,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":34,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":778,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":257,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":702,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":642,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":14,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":456,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":697,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":298,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":381,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":125,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":380,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":496,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":338,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":599,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":847,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":43,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":678,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":631,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":490,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":811,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":489,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":55,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":246,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":169,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":564,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":737,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":402,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":403,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":401,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":565,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":835,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":84,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":691,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":285,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":395,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":796,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":574,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":723,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":638,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":528,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":537,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":16,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":836,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":575,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":385,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":787,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":119,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":393,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":744,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":359,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":765,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":475,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":669,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":567,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":724,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":216,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":473,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":474,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":3,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":4,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":530,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":423,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":545,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":649,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":360,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":817,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":447,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":375,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":626,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":464},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ade5048d-2ebe-11e6-81ff-3bf69a8b31ac","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"ade5c7de-2ebe-11e6-81ff-95f3c8ece44d","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            if ((b.size()) != (b.size())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n                    if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                        return false;\n                    } \n                    for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                        if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[0],"tindex":"ade615ff-2ebe-11e6-81ff-11763f537bb4","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1],"tindex":"ade61600-2ebe-11e6-81ff-eb6ca466f39b","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[2],"tindex":"ade63d11-2ebe-11e6-81ff-8d76204e4485","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[3,4,5,6,7],"tindex":"ade63d12-2ebe-11e6-81ff-959c17bdc22c","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"ade66423-2ebe-11e6-81ff-259ae54614eb","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"ade66424-2ebe-11e6-81ff-4dbab42ce89b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"ade68b35-2ebe-11e6-81ff-378a07b20401","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"ade6b246-2ebe-11e6-81ff-d767100ec780","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"ade6d957-2ebe-11e6-81ff-4586b42c946d","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[105],"tindex":"ade6d958-2ebe-11e6-81ff-e582619758fe","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[106,107],"tindex":"ade70069-2ebe-11e6-81ff-f1aaaaebf0d4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"ade7277a-2ebe-11e6-81ff-b9ded5fab009","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[245],"tindex":"ade74e8b-2ebe-11e6-81ff-972e24e4f1e1","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"ade7759c-2ebe-11e6-81ff-77acab572b8d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[246,247,248,249],"tindex":"ade7759d-2ebe-11e6-81ff-0fede4ee51ee","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"tindex":"ade79cae-2ebe-11e6-81ff-0178454f9da8","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:183","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[],"tindex":"ade7c3bf-2ebe-11e6-81ff-0dfc48d95ad4","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"ade7c3c0-2ebe-11e6-81ff-254ec4b4f708","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[305],"tindex":"ade7ead1-2ebe-11e6-81ff-6385b568ce37","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"ade7ead2-2ebe-11e6-81ff-4fc86c91285e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ade811e3-2ebe-11e6-81ff-757105e03df8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[306,307,308,309],"tindex":"ade811e4-2ebe-11e6-81ff-23c6287e1c24","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[310],"tindex":"ade838f5-2ebe-11e6-81ff-2fedd797ff32","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[311,312],"tindex":"ade838f6-2ebe-11e6-81ff-93dbce22ab67","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[313],"tindex":"ade86007-2ebe-11e6-81ff-25a8dc6b6e07","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"ade88718-2ebe-11e6-81ff-df392fa47307","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"ade88719-2ebe-11e6-81ff-23e2151068ee","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"ade8871a-2ebe-11e6-81ff-fff9a8294c62","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"ade8ae2b-2ebe-11e6-81ff-fbc0dfaff804","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[342],"tindex":"ade8ae2c-2ebe-11e6-81ff-8df4b9a197b2","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if ((map.size()) > 0) {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"ade8d53d-2ebe-11e6-81ff-0f99102b0eaf","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"ade8d53e-2ebe-11e6-81ff-29cdbdc3aed5","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ade8fc4f-2ebe-11e6-81ff-976acc551a70","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[343],"tindex":"ade8fc50-2ebe-11e6-81ff-05991c136c33","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ade8fc51-2ebe-11e6-81ff-99256a516580","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"ade8fc52-2ebe-11e6-81ff-bfb1e6498f6a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ade92363-2ebe-11e6-81ff-a760dc94936f","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"ade92364-2ebe-11e6-81ff-f5455104d384","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[344],"tindex":"ade92365-2ebe-11e6-81ff-65dfba0e8707","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[345,346,347,348],"tindex":"ade92366-2ebe-11e6-81ff-ff652f9fa2e9","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[349,350,351,352,353,354,355,108,109,356,357,358,359,110,360,111,361,362,363,112,364,365,366,367,368,369,113,114,370,371,372,373,115,374,116,375,376,377,378,379,380,381,382,117,118,119,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,120,398,399,400,401,402,403,121,122,404,123,405,406,124,125,407,408,126,127,128,129,130,409,131,410,411,412,413,414,415,416,417,418,132,133,134,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,135,434,435,436,437,438,439,136,137,440,138,441,442,139,140,443,444,141,142,143,144,145,445,146,446,147,447,448,148,149,449,150,151,152,153,450,451,452,453,454,154,155,156,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,157,470,471,472,473,474,475,158,159,476,160,477,478,161,162,479,480,163,164,165,166,167,481,482,183,184,185,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,186,498,499,500,501,502,503,187,188,504,189,505,506,190,191,507,508,192,193,194,195,196,509,197,198,199,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,200,525,526,527,528,529,530,201,202,531,203,532,533,204,205,534,535,206,207,208,209,210,536,537,106,107,538,211,212,213,214,215,217,218,219,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,220,554,555,556,557,558,559,221,222,560,223,561,562,224,225,563,564,226,227,228,229,230,565,566,567,568,569,231,232,233,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,234,585,586,587,588,589,590,235,236,591,237,592,593,238,239,594,595,240,241,242,243,244,596,597,598],"tindex":"ade94a77-2ebe-11e6-81ff-65ed6bccbba6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"ade97188-2ebe-11e6-81ff-973367492108","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ade97189-2ebe-11e6-81ff-373a06063e69","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[599,600],"tindex":"ade9718a-2ebe-11e6-81ff-8be82f987ba5","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().listIterator(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"ade9989b-2ebe-11e6-81ff-97b1f30454b2","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[601],"tindex":"ade9989c-2ebe-11e6-81ff-3f6a37f748de","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"ade9989d-2ebe-11e6-81ff-a35f1d904cc9","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"ade9bfae-2ebe-11e6-81ff-87cd41f934d2","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[],"tindex":"ade9bfaf-2ebe-11e6-81ff-816437736a7a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection.size()) > 0) {\n                {\n                    final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n                    final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n                    while (it.hasNext()) {\n                        result.add(it.next());\n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[131,412],"tindex":"ade9bfb0-2ebe-11e6-81ff-efa62fe34821","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index > 0) {\n        {\n            return getEntry(index).getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"ade9e6c1-2ebe-11e6-81ff-dbed83d47e36","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"ade9e6c2-2ebe-11e6-81ff-ab6c207e389b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[106,107],"tindex":"ade9e6c3-2ebe-11e6-81ff-cfe7ab5cdc6d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[602],"tindex":"adea0dd4-2ebe-11e6-81ff-dbd78b4aec98","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"adea0dd5-2ebe-11e6-81ff-4bf4d7757dbe","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750],"tindex":"adea0dd6-2ebe-11e6-81ff-1d04f0d59d5f","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"adea34e7-2ebe-11e6-81ff-bde985f40e32","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"adea34e8-2ebe-11e6-81ff-21dd97c8e12f","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789],"tindex":"adea34e9-2ebe-11e6-81ff-43fb044b17c4","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"adea5bfa-2ebe-11e6-81ff-79f9899012f2","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"adea5bfb-2ebe-11e6-81ff-257a1447bbf2","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"adea5bfc-2ebe-11e6-81ff-07c13c1d4ebf","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"adea5bfd-2ebe-11e6-81ff-ad87496f46f6","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"adea830e-2ebe-11e6-81ff-255928e3e71e","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"adea830f-2ebe-11e6-81ff-39ee47e3fe83","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[305],"tindex":"adea8310-2ebe-11e6-81ff-57ba39dfce85","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"adeaaa21-2ebe-11e6-81ff-6b358f0089ca","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"adeaaa22-2ebe-11e6-81ff-5d8ce7b41920","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"adeaaa23-2ebe-11e6-81ff-a9ca3fe1c6df","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[790],"tindex":"adeaaa24-2ebe-11e6-81ff-4799b3298df1","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[],"tindex":"adeaaa25-2ebe-11e6-81ff-0781ce496e57","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection.size()) > 0) {\n                {\n                    final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n                    final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n                    while (it.hasNext()) {\n                        result.add(it.next());\n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[791],"tindex":"adead136-2ebe-11e6-81ff-09ee7b9782d9","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[285,286],"tindex":"adead137-2ebe-11e6-81ff-178df1466801","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"adeaf848-2ebe-11e6-81ff-5f0506fe7ae8","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"adeaf849-2ebe-11e6-81ff-db87956af5a6","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[106,107],"tindex":"adeaf84a-2ebe-11e6-81ff-7dd024e40736","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[211],"tindex":"adeb1f5b-2ebe-11e6-81ff-c7f7ae711f5b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key5 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key5"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[350,351,352,353,354,355,108,109,356,357,358,359,110,111,361,362,363,364,365,366,367,368,369,113,114,370,371,372,373,115,116,375,376,377],"tindex":"adeb1f5c-2ebe-11e6-81ff-e9205e43473f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[792,793,794,795],"tindex":"adeb466d-2ebe-11e6-81ff-b919a786fa53","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[796],"tindex":"adeb466e-2ebe-11e6-81ff-1368f7ac0d5a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"adeb466f-2ebe-11e6-81ff-bbfbfdfd7549","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[797,798,799,800],"tindex":"adeb4670-2ebe-11e6-81ff-b30df149b8d1","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"adeb6d81-2ebe-11e6-81ff-0d5b0af2a10d","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[801,802,803],"tindex":"adeb6d82-2ebe-11e6-81ff-89eed789f219","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"adeb6d83-2ebe-11e6-81ff-a7df3486aae0","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[804,805,806,807,808,809,810,811,812,813,814,815],"tindex":"adeb9494-2ebe-11e6-81ff-0f785e16f396","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[816,817],"tindex":"adeb9495-2ebe-11e6-81ff-493e497820d5","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtBinaryOperatorImpl","sourcecode":"reverse == true"},"failures":[818,819,820,821,822,823,824,825,826,827,828,829],"tindex":"adebbba6-2ebe-11e6-81ff-d73d99f25b44","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (reverse == true) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"reverse"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[830],"tindex":"adebbba7-2ebe-11e6-81ff-518e1737d6d8","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"adebbba8-2ebe-11e6-81ff-87bae0a1b258","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            if ((b.size()) != (b.size())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n                    if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                        return false;\n                    } \n                    for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                        if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"adebe2b9-2ebe-11e6-81ff-67ff3cce034c","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"adebe2ba-2ebe-11e6-81ff-e332804142ef","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"adebe2bb-2ebe-11e6-81ff-97083a39d5cf","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"adebe2bc-2ebe-11e6-81ff-59403752610b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[831,802,803],"tindex":"adec09cd-2ebe-11e6-81ff-b7e831052cd5","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"adec09ce-2ebe-11e6-81ff-6b4f2dc0b7b5","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855],"tindex":"adec09cf-2ebe-11e6-81ff-0fd8ac9511db","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[110,115],"tindex":"adec09d0-2ebe-11e6-81ff-59c97b1dc034","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}