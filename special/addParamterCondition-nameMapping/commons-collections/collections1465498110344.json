{"failureDictionary":{"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":2,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":7,"org.apache.commons.collections4.CollectionUtilsTest.filter":16,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":8,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":5,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":15,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":17,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":14,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":18,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":3,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":6,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":10,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":9,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":13,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":12,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":4,"org.apache.commons.collections4.map.SingletonMapTest.testClone":0},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"c2635d42-2e72-11e6-9d6c-372a74860a42","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (null == key) {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[14],"tindex":"c26447a3-2e72-11e6-9d6c-8f4d7d3ffdd7","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"c2646eb4-2e72-11e6-9d6c-839fb312e5ff","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:113","type":"CtMethodImpl","sourcecode":"protected void setMaximumCacheSize(final int maximumCacheSize) {\n    if (maximumCacheSize <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.list.NodeCachingLinkedList.this.int = maximumCacheSize;\n            shrinkCacheToMaximumSize();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"maximumCacheSize"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"c26495c5-2e72-11e6-9d6c-7fe97d873406","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[15,16,17,18],"tindex":"c264bcd6-2e72-11e6-9d6c-635c7a296b2c","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":5,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}