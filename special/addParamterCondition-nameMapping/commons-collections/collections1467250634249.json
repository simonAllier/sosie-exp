{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":152,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":760,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":236,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":24,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":853,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":586,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":691,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":836,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":374,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":316,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":160,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":503,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":507,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":891,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":509,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":508,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":492,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":381,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":616,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":708,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":903,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":798,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":754,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":881,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":464,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":846,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":761,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":775,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":803,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":155,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":101,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":948,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":715,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":967,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":98,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":45,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":429,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":932,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":310,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":383,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":323,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":229,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":188,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":285,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":453,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":243,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":623,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":742,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":649,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":334,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":709,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":251,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":564,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":386,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":228,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":398,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":740,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":63,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":876,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":793,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":411,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":483,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":598,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":345,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":115,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":943,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":970,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":247,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":585,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":26,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":311,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":365,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":205,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":467,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":888,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":119,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":39,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":917,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":77,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":431,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":840,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":470,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":168,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":940,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":960,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":731,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":732,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":733,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":939,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":401,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":445,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":854,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":672,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":720,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":925,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":183,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":638,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":827,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":778,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":678,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":644,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":413,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":714,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":908,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":769,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":965,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":893,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":612,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":911,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":730,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":952,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":485,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":692,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":808,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":941,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":372,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":135,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":312,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":762,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":763,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":764,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":796,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":919,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":193,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":201,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":680,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":659,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":786,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":49,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":356,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":436,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":611,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":795,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":752,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":480,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":391,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":220,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":341,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":91,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":533,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":916,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":415,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":813,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":968,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":449,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":842,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":238,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":851,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":114,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":13,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":103,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":603,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":27,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":647,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":636,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":308,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":865,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":149,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":956,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":933,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":963,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":130,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":687,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":151,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":81,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":635,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":634,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":633,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":799,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":923,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":562,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":915,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":420,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":743,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":471,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":931,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":685,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":826,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":958,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":875,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":146,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":348,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":658,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":682,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":66,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":942,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":240,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":782,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":838,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":738,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":707,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":637,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":910,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":410,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":966,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":4,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":280,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":964,"org.apache.commons.collections4.ListUtilsTest.testPartition":957,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":425,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":526,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":819,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":200,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":406,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":536,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":863,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":860,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":847,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":87,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":287,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":953,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":561,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":518,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":455,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":724,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":215,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":447,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":76,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":226,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":589,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":495,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":862,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":71,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":75,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":584,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":937,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":520,"org.apache.commons.collections4.map.HashedMapTest.testClone":578,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":954,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":143,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":120,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":117,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":719,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":512,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":706,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":210,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":652,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":912,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":79,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":514,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":460,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":296,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":955,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":65,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":339,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":351,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":336,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":656,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":697,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":869,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":696,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":698,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":904,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":154,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":681,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":753,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":969,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":779,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":110,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":359,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":86,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":556,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":555,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":552,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":551,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":554,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":553,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":548,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":402,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":550,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":705,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":549,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":879,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":677,"org.apache.commons.collections4.list.TreeListTest.testBug35258":899,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":118,"org.apache.commons.collections4.map.LinkedMapTest.testClone":676,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":90,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":209,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":870,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":382,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":747,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":418,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":318,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":913,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":924,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":797,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":770,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":728,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":749,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":748,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":563,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":744,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":134,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":894,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":834,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":437,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":609,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":776,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":788,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":591,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":138,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":375,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":755,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":902,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":566,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":667,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":794,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":127,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":946,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":213,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":268,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":454,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":668,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":465,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":136,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":972,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":195,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":613,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":815,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":324,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":59,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":525,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":812,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":874,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":477,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":476,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":475,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":804,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":51,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":457,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":926,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":300,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":602,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":94,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":237,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":683,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":1,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":499,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":38,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":651,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":322,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":344,"org.apache.commons.collections4.map.LRUMapTest.testLRU":82,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":935,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":906,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":458,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":390,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":446,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":570,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":592,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":438,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":264,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":540,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":537,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":883,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":332,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":376,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":424,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":835,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":156,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":497,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":886,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":142,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":112,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":395,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":783,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":373,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":885,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":327,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":281,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":718,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":777,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":530,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":576,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":802,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":3,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":702,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":164,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":258,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":371,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":303,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":622,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":737,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":601,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":273,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":600,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":426,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":357,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":421,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":69,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":452,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":484,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":569,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":347,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":385,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":387,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":174,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":768,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":928,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":88,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":833,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":167,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":689,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":690,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":294,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":539,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":314,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":227,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":521,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":36,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":214,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":416,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":506,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":504,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":505,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":800,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":858,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":807,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":745,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":889,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":108,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":305,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":197,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":805,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":377,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":739,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":929,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":176,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":825,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":313,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":588,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":16,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":528,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":571,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":20,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":806,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":28,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":239,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":688,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":535,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":878,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":150,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":435,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":423,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":582,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":500,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":710,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":148,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":479,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":734,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":140,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":949,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":736,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":735,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":544,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":233,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":527,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":756,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":95,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":606,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":496,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":614,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":263,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":191,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":469,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":824,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":655,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":757,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":822,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":882,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":7,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":245,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":235,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":394,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":216,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":412,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":211,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":675,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":409,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":843,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":165,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":459,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":222,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":867,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":831,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":171,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":434,"org.apache.commons.collections4.list.TreeListTest.testRemove":901,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":380,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":18,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":246,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":207,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":951,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":15,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":346,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":767,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":547,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":693,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":765,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":864,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":729,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":855,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":74,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":252,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":265,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":909,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":716,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":342,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":181,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":179,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":353,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":321,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":641,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":25,"org.apache.commons.collections4.map.LRUMapTest.testClone":608,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":814,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":703,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":660,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":403,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":947,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":873,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":892,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":871,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":448,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":615,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":872,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":772,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":266,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":358,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":292,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":920,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":482,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":810,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":443,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":704,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":524,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":163,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":230,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":288,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":717,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":511,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":224,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":820,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":206,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":792,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":5,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":850,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":343,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":190,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":267,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":42,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":461,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":208,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":922,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":914,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":567,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":276,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":282,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":927,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":856,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":895,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":877,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":545,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":789,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":250,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":491,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":936,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":832,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":887,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":643,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":845,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":896,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":620,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":162,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":587,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":784,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":726,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":538,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":270,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":319,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":338,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":866,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":486,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":532,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":52,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":828,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":145,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":10,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":451,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":502,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":701,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":517,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":541,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":700,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":699,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":959,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":771,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":694,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":256,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":122,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":350,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":670,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":945,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":529,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":558,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":315,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":817,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":57,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":605,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":274,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":198,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":664,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":261,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":665,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":741,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":868,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":723,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":787,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":531,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":192,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":279,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":361,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":427,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":249,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":331,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":626,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":897,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":642,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":277,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":725,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":404,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":837,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":751,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":450,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":73,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":684,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":880,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":99,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":653,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":823,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":938,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":811,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":488,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":489,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":490,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":849,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":907,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":109,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":219,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":973,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":918,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":407,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":362,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":84,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":543,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":137,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":304,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":43,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":102,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":62,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":439,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":654,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":839,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":712,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":56,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":60,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":468,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":534,"org.apache.commons.collections4.CollectionUtilsTest.isFull":546,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":848,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":890,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":628,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":791,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":829,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":830,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":841,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":289,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":8,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":295,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":568,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":583,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":262,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":93,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":255,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":934,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":493,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":466,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":510,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":124,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":801,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":325,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":780,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":781,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":48,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":971,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":349,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":104,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":370,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":232,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":818,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":618,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":34,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":481,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":487,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":645,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":669,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":223,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":272,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":97,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":422,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":432,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":944,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":133,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":301,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":950,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":478,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":627,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":774,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":392,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":921,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":560,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":662,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":663,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":661,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":711,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":930,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":474,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":400,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":173,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":244,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":657,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":816,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":721,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":337,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":298,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":565,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":594,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":746,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":852,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":106,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":722,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":650,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":329,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":366,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":857,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":790,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":72,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":317,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":648,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":290,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":898,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":523,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":962,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":961,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":83,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":297,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":116,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":884,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":269,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":632,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":861,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":399,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":501,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":630,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":631,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":859,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":388,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":596,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":686,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":414,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":519,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":306,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":905,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":575,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":610,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":844,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":542,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":624,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":444},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[0,1],"tindex":"2c0617ca-3e63-11e6-8926-d9b135184516","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[2,3,4,5],"tindex":"2c0665eb-3e63-11e6-8926-cf7805cce6a8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2c068cfc-3e63-11e6-8926-0537c0b5ffa5","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"2c068cfd-3e63-11e6-8926-bf1160e44951","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if (size == 0) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2c068cfe-3e63-11e6-8926-99539f147b63","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    java.util.BitSet.set(index);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2c06b40f-3e63-11e6-8926-cb8df847b388","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"2c06b410-3e63-11e6-8926-b32b6849978f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[75,76],"tindex":"2c06b411-3e63-11e6-8926-f5e17795a5b8","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[77,78,79,80,81,82,83,84,85],"tindex":"2c06b412-3e63-11e6-8926-c544a39a15ab","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[86],"tindex":"2c06db23-3e63-11e6-8926-fd157d864a61","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[87,88,89,90,91,92,93],"tindex":"2c070234-3e63-11e6-8926-31fdd4ab14b8","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[94,95],"tindex":"2c070235-3e63-11e6-8926-e97f908dabfd","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[2,3],"tindex":"2c070236-3e63-11e6-8926-f5b73c5cc044","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"2c070237-3e63-11e6-8926-0dd2c8abce46","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2c072948-3e63-11e6-8926-41ff99235e29","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[96],"tindex":"2c072949-3e63-11e6-8926-71bc458d0af2","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map == null) {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[97],"tindex":"2c07294a-3e63-11e6-8926-49253200ca34","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"2c07294b-3e63-11e6-8926-67d5f2fb3dd5","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"2c07505c-3e63-11e6-8926-f9080065f27c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"2c07505d-3e63-11e6-8926-8f2d068c1714","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2c07505e-3e63-11e6-8926-a9e89236c8df","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[194,195,196],"tindex":"2c07505f-3e63-11e6-8926-f9ffff10da8f","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[112,115,111,116,117,118,120,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,18,24,32,34,37,39,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449],"tindex":"2c077770-3e63-11e6-8926-4facf751cc26","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"2c077771-3e63-11e6-8926-5faa86c226ba","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2c077772-3e63-11e6-8926-c3508cef67e4","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[450],"tindex":"2c077773-3e63-11e6-8926-d7ca744e1924","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"2c079e84-3e63-11e6-8926-213fee7b2816","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"2c079e85-3e63-11e6-8926-f3eb061ffa5e","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[451,452,453,454,455],"tindex":"2c079e86-3e63-11e6-8926-3d492bed6ac3","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[456],"tindex":"2c079e87-3e63-11e6-8926-0f58557d2e61","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"2c079e88-3e63-11e6-8926-ef05a1e99501","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[457,458],"tindex":"2c07c599-3e63-11e6-8926-036362dd8402","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"put instanceof java.util.Map"},"failures":[459],"tindex":"2c07c59a-3e63-11e6-8926-c7e07363fc9e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put instanceof java.util.Map) {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512],"tindex":"2c07c59b-3e63-11e6-8926-4fb12b582eb7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                {\n                    final K K = castKey(k);\n                    if (key == null) {\n                        return null;\n                    } \n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"2c07c59c-3e63-11e6-8926-994ff3237897","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:862","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[111,112,115,116,117,120,126,127,128,157,158,161,162,163,166,168,171,172,176,177,178],"tindex":"2c07ecad-3e63-11e6-8926-ddc8f9a05fc3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"2c07ecae-3e63-11e6-8926-b97742f22e13","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2c07ecaf-3e63-11e6-8926-c99e9b177b2c","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2c07ecb0-3e63-11e6-8926-09856498b9a5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[513,514,94,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,95,531,532,533,534,535,536,537,538,539,540,541,542,543,544],"tindex":"2c07ecb1-3e63-11e6-8926-812cbc74be9d","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"2c0813c2-3e63-11e6-8926-3d3339358b96","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"2c0813c3-3e63-11e6-8926-7992837ca8a7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[545],"tindex":"2c0813c4-3e63-11e6-8926-23ed7fe6f011","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"2c0813c5-3e63-11e6-8926-373a1479fad3","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"2c083ad6-3e63-11e6-8926-879647c0da29","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[546,547,548,549,550,551,552,553,554,555,556,557,558,559],"tindex":"2c083ad7-3e63-11e6-8926-f70c43d07a47","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[560,561,562,471,475,476,563,564,565,566,478,479,480,567,493,568,503,569,570,571,572,510,511,512,573],"tindex":"2c083ad8-3e63-11e6-8926-3fe5a335c3fa","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[574],"tindex":"2c083ad9-3e63-11e6-8926-799887148a91","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"2c083ada-3e63-11e6-8926-e3bc37b44298","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[513,514,94,515,516,517,518,519,520,521,522,523,524,575,525,526,527,528,576,529,530,95,531,532,533,534,535,536,537,538,539,540,577,541,542,543,544,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,82,609,83,610,611,77,78,612,84,79,80,81,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,2,3,4,5,747,748,749,750,751,752,753,754,412,409,410,411,413,414,415,755,416,756,417,757,758,418,419,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779],"tindex":"2c0861eb-3e63-11e6-8926-93c9b28da438","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[780,781,782,783,783,784,785,785,786,787,788],"tindex":"2c0861ec-3e63-11e6-8926-c31f6c597eb7","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[789,790,791,792],"tindex":"2c0861ed-3e63-11e6-8926-d71f7ebec6be","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2c0861ee-3e63-11e6-8926-bf982919f7c2","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    java.util.BitSet.set(index);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[793,794,795,457,796,797,458],"tindex":"2c0888ff-3e63-11e6-8926-a5ce5468bcc5","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[519,535,602,798,638,669,704,799,739,772],"tindex":"2c088900-3e63-11e6-8926-f3e27f1ce459","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[800,801,802,803],"tindex":"2c088901-3e63-11e6-8926-2f7893545712","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"2c088902-3e63-11e6-8926-f1be266e7168","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[804,805],"tindex":"2c08b013-3e63-11e6-8926-675769a4b108","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((b.size()) != (b.size())) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2c08b014-3e63-11e6-8926-0508e519ac9e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829],"tindex":"2c08b015-3e63-11e6-8926-1b2d3f9d4b81","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2c08b016-3e63-11e6-8926-cf0cf4d7730e","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"2c08b017-3e63-11e6-8926-6db026654dd4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                {\n                    final K K = castKey(k);\n                    if (key == null) {\n                        return null;\n                    } \n                    final int int = lengthInBits(key);\n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n                    return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"2c08d728-3e63-11e6-8926-8f7d1f30004a","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[830],"tindex":"2c08d729-3e63-11e6-8926-83bea17b37f8","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[137,831,832,833,834,835],"tindex":"2c08d72a-3e63-11e6-8926-61a021033e31","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[836,837],"tindex":"2c08d72b-3e63-11e6-8926-87a5d4dbfaac","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[838],"tindex":"2c08d72c-3e63-11e6-8926-712c90d3f0f6","method":{"position":"org.apache.commons.collections4.QueueUtils:73","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> predicatedQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(queue, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[170],"tindex":"2c08d72d-3e63-11e6-8926-4743aa590cdb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"2c08fe3e-3e63-11e6-8926-112515a001be","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2c08fe3f-3e63-11e6-8926-fde80cc7b0fd","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870],"tindex":"2c08fe40-3e63-11e6-8926-ab9f5270179e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"2c08fe41-3e63-11e6-8926-b5ece6fdf5b0","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[96],"tindex":"2c08fe42-3e63-11e6-8926-259731674a23","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"2c092553-3e63-11e6-8926-0be77819fd02","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[50],"tindex":"2c092554-3e63-11e6-8926-3937fdb2ef57","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[108,125],"tindex":"2c092555-3e63-11e6-8926-e5ba11b5b076","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"2c092556-3e63-11e6-8926-6154e6719a00","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"2c092557-3e63-11e6-8926-2713d5caaa70","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[149,151,152,156,154,155,168,172,179,180,182,185,186,189,190,191,192,193],"tindex":"2c092558-3e63-11e6-8926-b70d196e0a88","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[871,872,873,874,875,876,877,878,879,880,881,882,319,883,884,320,885,886,887,888,321,322,889,323,890,891,324,325,892,326,893,327,894,328,895,896,329,897,330],"tindex":"2c094c69-3e63-11e6-8926-a7b8301306c4","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"2c094c6a-3e63-11e6-8926-ab1d3dea8f27","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[898],"tindex":"2c094c6b-3e63-11e6-8926-b5a17d442a55","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((b == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[899,900,901,902,903,904,905,906,907,908,909,910,92,911],"tindex":"2c094c6c-3e63-11e6-8926-a7bce3c5331c","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"2c094c6d-3e63-11e6-8926-b1c5d49e1758","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,811,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956],"tindex":"2c094c6e-3e63-11e6-8926-bf9e2de75a56","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[957],"tindex":"2c09737f-3e63-11e6-8926-0d5b00fc80ef","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"2c097380-3e63-11e6-8926-134939ebdab6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[958,461,959,493,568,960],"tindex":"2c097381-3e63-11e6-8926-6d8637a1c082","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"2c097382-3e63-11e6-8926-5f41381bbb19","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[961,962,963,964],"tindex":"2c097383-3e63-11e6-8926-3f1edefb5ad0","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[965,966,967,822,968],"tindex":"2c099a94-3e63-11e6-8926-33ad8954121a","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"2c099a95-3e63-11e6-8926-a7c1b8b4fc34","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[969,970],"tindex":"2c099a96-3e63-11e6-8926-4b127e6f2f5b","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"2c099a97-3e63-11e6-8926-874e3f6848cb","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"2c099a98-3e63-11e6-8926-a7842601d5f9","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[],"tindex":"2c099a99-3e63-11e6-8926-c73ba92da3b2","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"2c09c1aa-3e63-11e6-8926-597d010e1b8a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[971],"tindex":"2c09c1ab-3e63-11e6-8926-ef2d9c49c48f","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[972],"tindex":"2c09c1ac-3e63-11e6-8926-7ba29ac3646c","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[789,973,87,88,89,90,91,92,93],"tindex":"2c09c1ad-3e63-11e6-8926-a31e414ca1f3","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (index < 0) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246273495/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}