{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":210,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":445,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":408,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":634,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":86,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":707,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":417,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":382,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":435,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":26,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":557,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":449,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":526,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":664,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":127,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":466,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":686,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":62,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":220,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":360,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":364,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":150,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":366,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":341,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":365,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":688,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":349,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":234,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":703,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":91,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":3,"org.apache.commons.collections4.set.TransformedSetTest.testSimpleSerialization":713,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":414,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":437,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":658,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":227,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":297,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":181,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":321,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":665,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":486,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":431,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":165,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSimpleSerialization":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":158,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":0,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":254,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":363,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":361,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":276,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":461,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":285,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":271,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":166,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":248,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":407,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":256,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":58,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":316,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":82,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":272,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":506,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":592,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":422,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":695,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":415,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":13,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":236,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":572,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":700,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":706,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":317,"org.apache.commons.collections4.CollectionUtilsTest.intersection":145,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":477,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":230,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":470,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":8,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":105,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":661,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":704,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":291,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesClearChangesMap":560,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":601,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":340,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":221,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":258,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":675,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":175,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":571,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":644,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":604,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":651,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":377,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":454,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":667,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":472,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":561,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":440,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":211,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":304,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":208,"org.apache.commons.collections4.map.CompositeMapTest.testPut":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":83,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":133,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":519,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":593,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":104,"org.apache.commons.collections4.map.CompositeMapTest.testGet":148,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":357,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":206,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":645,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":228,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":608,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":693,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":599,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":716,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":674,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":28,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":387,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":685,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":490,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":139,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":35,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":48,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":656,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":205,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":23,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":326,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":19,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsSelfHashCode":715,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":594,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":404,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullKey":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":492,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":463,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":689,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":243,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":392,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":146,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":458,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":617,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":235,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":568,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":405,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEmptyMapCompatibility":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":225,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":155,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":128,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":280,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":231,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":524,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":525,"org.apache.commons.collections4.list.TreeListTest.testRemove":278,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":534,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":639,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":89,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":246,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":508,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":692,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":481,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":577,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":125,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":307,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEqualsNull":627,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":103,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":259,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":579,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":416,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":342,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSerializeDeserializeThenCompare":632,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":88,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":284,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":380,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":67,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFullMapCompatibility":547,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":229,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalFullCollectionExists":612,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":543,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":131,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":76,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":471,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":398,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":484,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":589,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":290,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":337,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":539,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":610,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":672,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testSimpleSerialization":629,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":355,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":37,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":38,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":39,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":546,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":269,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":459,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":670,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":65,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":351,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":174,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":274,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":648,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":223,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":20,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":479,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":451,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":635,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":390,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":302,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":646,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":647,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveAll":541,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":368,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":666,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":53,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":313,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":54,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":52,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":207,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":192,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":496,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":120,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":455,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":289,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":500,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":450,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":657,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":218,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":434,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":394,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":68,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":473,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":548,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":209,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":512,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapHashCode":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":320,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalEmptyCollectionExists":628,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":170,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":303,"org.apache.commons.collections4.map.SingletonMapTest.testClone":452,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":116,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":87,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":119,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":563,"org.apache.commons.collections4.CollectionUtilsTest.exists":44,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":247,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":423,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":328,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":114,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":464,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":442,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":633,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":213,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":260,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":277,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":714,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":50,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":25,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":348,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":264,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":292,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":429,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":98,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":106,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":418,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":222,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":446,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":475,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":391,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":711,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":287,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":698,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":137,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":668,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":31,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":298,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":462,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":521,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":32,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":553,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectEqualsSelf":625,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":33,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetClearChangesMap":533,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":614,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":18,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":16,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":507,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":212,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMakeMap":542,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":587,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":709,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":359,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":379,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":288,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":370,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":273,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":483,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":660,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":182,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":286,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":576,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRetainAll":559,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testCanonicalEmptyCollectionExists":564,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":372,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":262,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":586,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":581,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testNormalIteration":621,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":96,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":503,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":682,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEqualsNull":719,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":371,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":142,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":558,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":47,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":299,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":305,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":722,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":720,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":153,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":421,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":499,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":140,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":467,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":203,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":180,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":294,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":300,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":177,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":535,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":369,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":566,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":15,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":616,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":101,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":430,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":690,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":427,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":465,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsContract":630,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":27,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullValue":538,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":263,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":318,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":99,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":345,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":346,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":532,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":347,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":531,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":530,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":102,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":14,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":438,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":154,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":214,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":584,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":570,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":385,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":615,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":456,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":517,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":696,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveAll":552,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":197,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":168,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":162,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":123,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":118,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":4,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":268,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":325,"org.apache.commons.collections4.set.CompositeSetTest.testContains":138,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testFullIterator":623,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":515,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":376,"org.apache.commons.collections4.list.TreeListTest.testBug35258":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":591,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":406,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":242,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":178,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":580,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":314,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":439,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":575,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":460,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":279,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":204,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":147,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":555,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":124,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":655,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":659,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":723,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":687,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalFullCollectionExists":710,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":194,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":436,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":56,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":352,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":510,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":694,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":191,"org.apache.commons.collections4.SetUtilsTest.testEquals":717,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":323,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":367,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":184,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":721,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":338,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":501,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":699,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":198,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":261,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":718,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":169,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":85,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":108,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":652,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":641,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":654,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":653,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":185,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":399,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":90,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":59,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":344,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":350,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testCanonicalFullCollectionExists":562,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":55,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":401,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalEmptyCollectionExists":712,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":556,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":518,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":516,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":186,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":193,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":433,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":705,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":77,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":432,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":549,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":598,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":46,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":266,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":306,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":265,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":232,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":441,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":662,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":42,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testCanonicalFullCollectionExists":626,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":603,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":97,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":669,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":527,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":275,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRetainAll":528,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":691,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":708,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":5,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":10,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":334,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":583,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":333,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":332,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":255,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":330,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":331,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":683,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testObjectHashCodeEqualsSelfHashCode":631,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":678,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":156,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":233,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":80,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":84,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":245,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":383,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":684,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":7,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":356,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":51,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":219,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":485,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":164,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":702,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":160,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":310,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsSelfHashCode":567,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":671,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":489,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":308,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":448,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":514,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":476,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testEmptyIterator":622,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":378,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":540,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":636,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":596,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":569,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":522,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":79,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":176,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":551,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":216,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":354,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":480,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":573,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":457,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":202,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":270,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":677,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":135,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":618,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":144,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":620,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":173,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":373,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":697,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":109,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":72,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":111,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":112,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":595,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":57,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":315,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":389,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":537,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":511,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":491,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":468,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":121,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":638,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalEmptyCollectionExists":611},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[0,1,2,3,4,5,6],"tindex":"952fea12-3e80-11e6-8609-2f390296cc31","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[7,8],"tindex":"95303833-3e80-11e6-8609-b38819afcf0f","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[9,10,11],"tindex":"95303834-3e80-11e6-8609-2bd36e6f99d8","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"95305f45-3e80-11e6-8609-2d55893491dd","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"95305f46-3e80-11e6-8609-b96af3667d30","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[42,43],"tindex":"95308657-3e80-11e6-8609-4b995136a2a5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"95308658-3e80-11e6-8609-8bc68bde1a0b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[44],"tindex":"95308659-3e80-11e6-8609-b3230d2d2e0c","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"9530865a-3e80-11e6-8609-7b077e8672f0","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"9530ad6b-3e80-11e6-8609-ab6e5c63fccf","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9530ad6c-3e80-11e6-8609-9557bad22c8a","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"9530ad6d-3e80-11e6-8609-4f2d2ac03034","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"9530d47e-3e80-11e6-8609-b7eea8ea0961","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[127],"tindex":"9530d47f-3e80-11e6-8609-f1c9e1d27e7c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9530fb90-3e80-11e6-8609-d959079cc193","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[128,129,130,131,132,133,134,135],"tindex":"9530fb91-3e80-11e6-8609-2fbbdfc1dfed","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"9530fb92-3e80-11e6-8609-17b561317c66","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[156,157],"tindex":"9530fb93-3e80-11e6-8609-13bb83759ac5","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator.hasNext()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((iterator != null) && (closure != null)) {\n                        while (iterator.hasNext()) {\n                            final T T = iterator.next();\n                            if (iterator.hasNext()) {\n                                closure.execute(element);\n                            } else {\n                                return element;\n                            }\n                        }\n                    } \n                    return null;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"953122a4-3e80-11e6-8609-d93d9346e008","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"953122a5-3e80-11e6-8609-9dd447d8de98","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"953122a6-3e80-11e6-8609-c18de1565733","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n                    if (byteObject == null) {\n                        return 0;\n                    } \n                    return byteObject.byteValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"953122a7-3e80-11e6-8609-2f68c3cc09af","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return java.util.Collections.synchronizedSortedSet(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[254],"tindex":"953149b8-3e80-11e6-8609-19508e472694","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[255,256],"tindex":"953149b9-3e80-11e6-8609-9fdb79f338c8","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((b.size()) != (b.size())) {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[257,258,259,260,261,262,263,264,265,266,267,268,269],"tindex":"953149ba-3e80-11e6-8609-5b7bf38747ee","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"953170cb-3e80-11e6-8609-2db4f03035c8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[270],"tindex":"953170cc-3e80-11e6-8609-336ef2bdabb9","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"953170cd-3e80-11e6-8609-c1c3be4f13d0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[163,204],"tindex":"953170ce-3e80-11e6-8609-314e3032a3cd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[158,159,160,161,162,163,169,170,164,165,166,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,212,213,205,206,207,208,209,210,211,216,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"953197df-3e80-11e6-8609-45de25dd4f9a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"953197e0-3e80-11e6-8609-e177631b3c91","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[271,272,273,274,275,276],"tindex":"953197e1-3e80-11e6-8609-db6b37a2afa1","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[277,278,279,280,281,282,283,284,285,286,287,288],"tindex":"953197e2-3e80-11e6-8609-afbb51f7727c","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"tindex":"9531bef3-3e80-11e6-8609-5d8d14114f22","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"9531bef4-3e80-11e6-8609-35f8db3a834e","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371],"tindex":"9531bef5-3e80-11e6-8609-1bfe70de4cee","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9531e606-3e80-11e6-8609-0bca5b900758","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"9531e607-3e80-11e6-8609-cb44b14462df","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll == null) {\n                        throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n                    } \n                    for (int int = 0 ; i < 1000 ; i++) {\n                        if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                            break;\n                        } \n                        if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                            coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                        } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                            coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                        } \n                    }\n                    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                        throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n                    } \n                    return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9531e608-3e80-11e6-8609-93d13b953546","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,276],"tindex":"9531e609-3e80-11e6-8609-e162ab3fb452","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[425],"tindex":"95320d1a-3e80-11e6-8609-9d3f51cffcf1","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                throw new java.lang.NullPointerException(\"Node must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[426,427],"tindex":"95320d1b-3e80-11e6-8609-dd190501d09b","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"95320d1c-3e80-11e6-8609-610f90d819ba","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"9532342d-3e80-11e6-8609-7193a401ba44","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[428,429,267,430,431,432,433],"tindex":"9532342e-3e80-11e6-8609-9f46b596321d","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"9532342f-3e80-11e6-8609-c1f466227c2f","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator.hasNext()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((iterator != null) && (closure != null)) {\n                        while (iterator.hasNext()) {\n                            final T T = iterator.next();\n                            if (iterator.hasNext()) {\n                                closure.execute(element);\n                            } else {\n                                return element;\n                            }\n                        }\n                    } \n                    return null;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[434,435],"tindex":"95323430-3e80-11e6-8609-7db4a374a0f7","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj.getClass().isArray()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map<?, ?>) == false) {\n                        return false;\n                    } \n                    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                    return entrySet().equals(other.entrySet());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[436],"tindex":"95325b41-3e80-11e6-8609-f5e0207ad941","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[437,438,439,440,441,442,443,444,445,446,447,448],"tindex":"95325b42-3e80-11e6-8609-81116ceb8be6","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[449,450,451],"tindex":"95325b43-3e80-11e6-8609-e38bc21c3020","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"95325b44-3e80-11e6-8609-1d3cd0248fd3","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (coll == null) {\n                        throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n                    } \n                    for (int int = 0 ; i < 1000 ; i++) {\n                        if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                            break;\n                        } \n                        if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                            coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                        } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                            coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                        } \n                    }\n                    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                        throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n                    } \n                    return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"95325b45-3e80-11e6-8609-6d39b3a25880","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return java.util.Collections.synchronizedSortedSet(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[452,259,264,268,269],"tindex":"95328256-3e80-11e6-8609-d7883f898241","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[453,454,455,456,457,458,459,460,461,462,463,464,465,466,20,467,45,46,47,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,26,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,35,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,41,514,515],"tindex":"95328257-3e80-11e6-8609-d7d41dd07a37","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[516,517],"tindex":"95328258-3e80-11e6-8609-1115058f11ef","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568],"tindex":"95328259-3e80-11e6-8609-67aa6c666ef2","method":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedSortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[11],"tindex":"9532825a-3e80-11e6-8609-2dad0684d051","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"9532a96b-3e80-11e6-8609-d54fa0a32f6d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"9532a96c-3e80-11e6-8609-c975756a4791","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj.getClass().isArray()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map<?, ?>) == false) {\n                        return false;\n                    } \n                    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                    return entrySet().equals(other.entrySet());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613],"tindex":"9532a96d-3e80-11e6-8609-11b681414e33","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[126],"tindex":"9532a96e-3e80-11e6-8609-c197b32af488","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"9532a96f-3e80-11e6-8609-9be49f52fd52","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"9532d080-3e80-11e6-8609-b19720c055ec","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9532d081-3e80-11e6-8609-816c3fa1cee6","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[614],"tindex":"9532d082-3e80-11e6-8609-a354e8e3b553","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[615],"tindex":"9532d083-3e80-11e6-8609-9fba25125116","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"9532d084-3e80-11e6-8609-9be044d91679","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1],"tindex":"9532f795-3e80-11e6-8609-dba31519db2c","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"9532f796-3e80-11e6-8609-d1556e44fc92","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[616],"tindex":"9532f797-3e80-11e6-8609-6744d819a540","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[230],"tindex":"9532f798-3e80-11e6-8609-33b8e989e3ee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[617],"tindex":"9532f799-3e80-11e6-8609-8f0a567a4bad","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"9532f79a-3e80-11e6-8609-1f69c09ac96b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9532f79b-3e80-11e6-8609-499d3bcda7d9","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[618,619,620,621,622,623,624,625,626,627,628,629,630,631,632],"tindex":"95331eac-3e80-11e6-8609-2547a329ce98","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"95331ead-3e80-11e6-8609-5ff6974c920e","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[633,634,635,636,398],"tindex":"95331eae-3e80-11e6-8609-aba947c7fedb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[637,638,127,639,640],"tindex":"953345bf-3e80-11e6-8609-5530b3cd9e3b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[10],"tindex":"95336cd0-3e80-11e6-8609-3b27557b964b","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[641,642],"tindex":"95336cd1-3e80-11e6-8609-672cbccc1ae7","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"95336cd2-3e80-11e6-8609-310d9130278b","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"95336cd3-3e80-11e6-8609-7b99c5bdda20","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"95336cd4-3e80-11e6-8609-1f8f1b78b825","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n                    if (byteObject == null) {\n                        return 0;\n                    } \n                    return byteObject.byteValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"953393e5-3e80-11e6-8609-53d3ba1bd5a1","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(size(), coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:353","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[643,644,645,646,647,648,649,128,650,651,652,653,654,655,656,129,130,657,658,131,132,659,660,661,662,663,664,665,666,667,133,668,669,670,134,671,135,672,673,674,675,676,677,678,679,680,681,682,683],"tindex":"953393e6-3e80-11e6-8609-b1c234c7481b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"953393e7-3e80-11e6-8609-e3c07203d499","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[684,685],"tindex":"953393e8-3e80-11e6-8609-79e531f5ef61","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[686],"tindex":"9533baf9-3e80-11e6-8609-9f9fd5e5ff5a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[338,339,321,322,323,325,326,327,328,330,331,333,334,687,335,350,351,340,341,342,344,346,347,370,371,353,354,355,357,358,359,360,362,363,365,366,688,367],"tindex":"9533bafa-3e80-11e6-8609-c7519532ab9f","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((b == null) || (a == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[689],"tindex":"9533bafb-3e80-11e6-8609-2752aa105ef9","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"9533bafc-3e80-11e6-8609-c3603ae96075","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715],"tindex":"9533bafd-3e80-11e6-8609-2f83dd15b923","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"9533bafe-3e80-11e6-8609-7d6b03666eca","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[716],"tindex":"9533e20f-3e80-11e6-8609-e59463064000","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[717],"tindex":"9533e210-3e80-11e6-8609-7fbc66800267","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set2","set1":"set1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[350,351,340,341,342,343,344,718,719,720,721],"tindex":"9533e211-3e80-11e6-8609-dd247a4f40ac","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[722],"tindex":"9533e212-3e80-11e6-8609-0d282205b039","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[723,615],"tindex":"9533e213-3e80-11e6-8609-a79c23d03a11","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"9533e214-3e80-11e6-8609-8f960ab47878","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"95340925-3e80-11e6-8609-7dc1f4ce2a3e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467259143657/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}