{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":629,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":789,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":216,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":678,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":710,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":564,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":395,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":916,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":934,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":420,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":305,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":913,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":519,"org.apache.commons.collections4.CollectionUtilsTest.get":1022,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":711,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":246,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":100,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":767,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":874,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":528,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":685,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":846,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":339,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":351,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":1004,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":261,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":560,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":513,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":978,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":952,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":509,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":675,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":945,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":592,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":285,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":300,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":773,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":429,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":901,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":640,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":157,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":306,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":875,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":700,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":821,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":835,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":765,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":12,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":853,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":574,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":887,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":327,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":110,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":565,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":112,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":1006,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":950,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":754,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":93,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":308,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":557,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":760,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":526,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":975,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":408,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":222,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":894,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":781,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":871,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":970,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":260,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":192,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":219,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":1023,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":385,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":969,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":619,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":202,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":809,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":496,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":823,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":635,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":65,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":790,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":197,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":198,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":196,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":172,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":366,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":615,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":962,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":545,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":878,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":354,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":256,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":215,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":140,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":885,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":359,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":503,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":733,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":346,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":883,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":590,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":890,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":410,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":1008,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":507,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":734,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":379,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":422,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":982,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":282,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":740,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":973,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":573,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":340,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":342,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":610,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":1000,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":624,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":979,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":264,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":899,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":614,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":893,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":407,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":998,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":608,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":657,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":321,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":752,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":703,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":1003,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":715,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":207,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":483,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":977,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":329,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":717,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":782,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":522,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":511,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":779,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":886,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":120,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":217,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":623,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":800,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":166,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":616,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":813,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":553,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":1002,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":988,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":935,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":954,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":536,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":562,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":275,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":725,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":555,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":936,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":414,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":738,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":834,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":881,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":446,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":445,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":203,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":444,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":960,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":682,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":993,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":1001,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.LRUMapTest.testReset":402,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":712,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":149,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":843,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":749,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":692,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":944,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":145,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":873,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":349,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":232,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":268,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":920,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":974,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":245,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":417,"org.apache.commons.collections4.map.LinkedMapTest.testReset":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":392,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":1016,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":304,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":430,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":1017,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":189,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":450,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":394,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":76,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":817,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":722,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":852,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":134,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":449,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":474,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":486,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":71,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":1019,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":795,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":785,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":165,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":983,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":866,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":0,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":755,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":681,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":296,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":465,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":144,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":598,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":849,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":870,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":2,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":758,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":761,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":10,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":656,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":797,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":632,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":92,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":967,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":857,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":154,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":467,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":831,"org.apache.commons.collections4.map.HashedMapTest.testClone":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":155,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":984,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":688,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":49,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testComparatorCompatibility":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":527,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":674,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":372,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":524,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":43,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":777,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":365,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":856,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":721,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":303,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":938,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":718,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":380,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":739,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":630,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":224,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":989,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":412,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":460,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":679,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":987,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":776,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":668,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":825,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":230,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":290,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":804,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":289,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":844,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":291,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":88,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":939,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":201,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":559,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":267,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":322,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":664,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":867,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":518,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":1028,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":302,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":812,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":301,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":1005,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":258,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":255,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":832,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":525,"org.apache.commons.collections4.map.LinkedMapTest.testClone":259,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":879,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":895,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":771,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":807,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":315,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":621,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":961,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":990,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":611,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":548,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":347,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":778,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":316,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":699,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":775,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":1021,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":540,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":706,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":105,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":418,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":404,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":1014,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":352,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":877,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":544,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":330,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":822,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":532,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":607,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":882,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":280,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":21,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":535,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":948,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":533,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":951,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":992,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":148,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":762,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":38,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":235,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":828,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":415,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":735,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":815,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":904,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":473,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":996,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":698,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":697,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":748,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":696,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":837,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":622,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":609,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":965,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":142,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":185,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":737,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":117,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":461,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":638,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":997,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":269,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":726,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":223,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":250,"org.apache.commons.collections4.map.LRUMapTest.testLRU":403,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":958,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":665,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":612,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":914,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":68,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":766,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":102,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":745,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":9,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":209,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":490,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":719,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":487,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":888,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":167,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":642,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":1018,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":830,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":558,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":91,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":818,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":550,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":413,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":521,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":860,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":851,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":891,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":902,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":437,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":382,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":353,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":477,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":479,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":188,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":312,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":448,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":568,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":58,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":428,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":389,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":620,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":116,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":113,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":736,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":205,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":942,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":162,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":1012,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":820,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":628,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":1009,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":571,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":277,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":819,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":1026,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":897,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":279,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":666,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":663,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":489,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":27,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods":601,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":468,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":331,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":605,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":793,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":135,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":768,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":861,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":516,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":652,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":48,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":150,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":868,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":842,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":924,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":840,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":850,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":581,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testReverseListSort":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":667,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":940,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":580,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":905,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":774,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":186,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":453,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":811,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":97,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":731,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":476,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":454,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":227,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":880,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":753,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":1007,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":200,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":169,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":720,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":249,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":276,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":485,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":806,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":179,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":41,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":554,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":677,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":552,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":386,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":546,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":953,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":73,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":387,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":495,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":1024,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":475,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":332,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":480,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":287,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":416,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":999,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":595,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":854,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":690,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":333,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":707,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":662,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":926,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":643,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":324,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":506,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":1013,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":841,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":579,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":364,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":783,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":839,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":569,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":497,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":802,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":575,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":23,"org.apache.commons.collections4.list.TreeListTest.testRemove":498,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":194,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":561,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":981,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":684,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":343,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":799,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":378,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":791,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":659,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":943,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":921,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":361,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":583,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":847,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":863,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":876,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":456,"org.apache.commons.collections4.map.LRUMapTest.testClone":401,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":298,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":234,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":288,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":763,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":949,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":419,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":743,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":136,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":676,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":808,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":114,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":980,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":892,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":299,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":900,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":931,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":567,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":672,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":362,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":769,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":918,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":729,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":759,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":912,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":314,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":787,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":865,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":645,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":972,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":53,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":96,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":964,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":594,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":838,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":1010,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":669,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":833,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":653,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":898,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":923,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":810,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":959,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":922,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":991,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":911,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":928,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":591,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":966,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":814,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":182,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":829,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":661,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":297,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":723,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":908,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":933,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":805,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":971,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":141,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":566,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":907,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":143,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":903,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":463,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testRandomListSort":602,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":375,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":488,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":709,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":757,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":599,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":129,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testConstructors":600,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":801,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":716,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":482,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":915,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":85,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":770,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":654,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":906,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":625,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":294,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":286,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":464,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":492,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":859,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":55,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":284,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":705,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":1015,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":131,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":529,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":374,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":251,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":947,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":478,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":957,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":158,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":909,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":25,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":424,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":872,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":1025,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":241,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":242,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":397,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":803,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":647,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":596,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":937,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":756,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":208,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":434,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":457,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":373,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":19,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":1011,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":320,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":104,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":930,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":508,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":826,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":225,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":968,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":995,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":955,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":927,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":69,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":502,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":917,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":639,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":176,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":976,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":411,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":543,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":862,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":986,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":334,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":510,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":462,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":742,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":618,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":226,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":780,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":356,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":689,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":484,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":786,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":889,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":115,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":436,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":660,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":586,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":650,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":367,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":90,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":919,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":1029,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":617,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":956,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":744,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":836,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":77,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":520,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":750,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":687,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":531,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":42,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":63,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":848,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":514,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":746,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":714,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":423,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":44,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":214,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":213,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":187,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":24,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":724,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":1027,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":946,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":741,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":539,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":855,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":631,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":1,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":588,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":576,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":985,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":80,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":816,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":747,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":896,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":350,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":435,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":963,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":824,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":16,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":680,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":125,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":238,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":106,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":357,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":941,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":693,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":694,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":695,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":932,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":577,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":231,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":727,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":827,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":644,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":728,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":107,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":626,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":309,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":788,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":845,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":1020,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":433,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":864,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":369,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":708,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":994,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":221,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":792,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":764,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":884,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":20,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":218,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":229,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":50,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":671,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":633,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":443,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":636,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":796,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":910,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":358,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":319,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":441,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":442,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":794,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":328,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":466,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":500,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":858,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":472,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":869,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":406,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":772,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":132,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":784,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":730,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":929,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":925,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":431},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"520a4bb1-2e70-11e6-9061-3d3155983aec","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"520b5d22-2e70-11e6-9061-b7ae796b63be","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"520b8433-2e70-11e6-9061-570f3048d463","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[72,73,74,75,76],"tindex":"520b8434-2e70-11e6-9061-5fcb413f0d78","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[77],"tindex":"520bab45-2e70-11e6-9061-67074418f598","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[78,79,80,81,82],"tindex":"520bd256-2e70-11e6-9061-938ae29c093b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[83],"tindex":"520bd257-2e70-11e6-9061-fd4ceb4d8f25","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (objectsAndTransformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n                    } \n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n                    final int int = objectsAndTransformers.size();\n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n                    final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n                    int int = 0;\n                    for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                        preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                        trs[(i++)] = entry.getValue();\n                    }\n                    return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,52,328,329,330,331,332,53,333,334,335,336,337,338,339,340,341,342,343,344,345,54,346,347,55,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"tindex":"520c2078-2e70-11e6-9061-0b2be2940918","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (dataSize > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"dataSize"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[498,499,500,501,502,503,504,505,506,507],"tindex":"520c4789-2e70-11e6-9061-57ed4278c3d8","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index > 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)"},"failures":[508,509,510,511,512,513,514,78,79,515,516,517,518,519,520,521,522,523,5,524,525,526,527,528,529,530,531,532,533,534,535,6,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,81,82,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597],"tindex":"520c6e9a-2e70-11e6-9061-133ee7eb7d68","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"520c95ab-2e70-11e6-9061-31e9590a933f","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"520c95ac-2e70-11e6-9061-8b2cbe2b4df9","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[9,598,21,599],"tindex":"520cbcbd-2e70-11e6-9061-d92a3451c006","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                validate(entry.getKey(), entry.getValue());\n            }\n            super.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"booleanObject == null"},"failures":[600,601,602,603,604],"tindex":"520cbcbe-2e70-11e6-9061-b33ad6593d47","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:137","type":"CtMethodImpl","sourcecode":"public int compare(final java.lang.Boolean b1, final java.lang.Boolean b2) {\n    if (b2 == null) {\n        {\n            if (b2 == null) {\n                {\n                    final boolean boolean = b1.booleanValue();\n                    final boolean boolean = b2.booleanValue();\n                    return v1 ^ v2 ? v1 ^ (boolean) ? 1 : -1 : 0;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"b2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[531],"tindex":"520ce3cf-2e70-11e6-9061-93887cb5729d","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[605],"tindex":"520ce3d0-2e70-11e6-9061-076853d212d5","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[606,607,608,609,610,611,612],"tindex":"520ce3d1-2e70-11e6-9061-ef854f91ad52","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[613,614,615,616,617,618,619,620],"tindex":"520d0ae2-2e70-11e6-9061-4ba067d16aa2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676],"tindex":"520d0ae3-2e70-11e6-9061-21b06752c377","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[677],"tindex":"520d31f4-2e70-11e6-9061-e9f693136c4b","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"520d31f5-2e70-11e6-9061-79a899b908d6","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtBinaryOperatorImpl","sourcecode":"previous != (current.right)"},"failures":[678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705],"tindex":"520d31f6-2e70-11e6-9061-65594cd822c4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (tree != start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n            if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                    if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        break;\n                    } \n                    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } \n            if (current.isEmpty()) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                    return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n            } \n            while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (current == tree) {\n                    return null;\n                } \n                current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            if (current == tree) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                return null;\n            } \n            return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"tree","previous":"tree","right":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"520d8017-2e70-11e6-9061-39220ea735f8","method":{"position":"org.apache.commons.collections4.list.TreeList:810","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E> otherTree, final int currentSize) {\n    if (currentSize >= currentSize) {\n        {\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = max();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree.min();\n            if ((otherTree.int) > (int)) {\n                final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = removeMax();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree;\n                int int = (s.int) + currentSize;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(leftSubTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                maxNode.setLeft(leftSubTree, null);\n                maxNode.setRight(s, otherTreeMin);\n                if (leftSubTree != null) {\n                    leftSubTree.max().setRight(null, maxNode);\n                    leftSubTree.int -= currentSize - 1;\n                } \n                if (s != null) {\n                    s.min().setLeft(null, maxNode);\n                    s.int = (sAbsolutePosition - currentSize) + 1;\n                } \n                maxNode.int = (currentSize - 1) - sParentAbsolutePosition;\n                otherTree.int += currentSize;\n                s = maxNode;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setLeft(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            } else {\n                otherTree = otherTree.removeMin();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode.this;\n                int int = s.int;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(otherTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                otherTreeMin.setRight(otherTree, null);\n                otherTreeMin.setLeft(s, maxNode);\n                if (otherTree != null) {\n                    otherTree.min().setLeft(null, otherTreeMin);\n                    (otherTree.int)++;\n                } \n                if (s != null) {\n                    s.max().setRight(null, otherTreeMin);\n                    s.int = sAbsolutePosition - currentSize;\n                } \n                otherTreeMin.int = currentSize - sParentAbsolutePosition;\n                s = otherTreeMin;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setRight(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"currentSize","index":"currentSize"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[],"tindex":"520dce38-2e70-11e6-9061-2b89b70ac44d","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (objectsAndTransformers == null) {\n                        throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n                    } \n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n                    final int int = objectsAndTransformers.size();\n                    final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n                    final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n                    int int = 0;\n                    for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                        preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                        trs[(i++)] = entry.getValue();\n                    }\n                    return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"520dce39-2e70-11e6-9061-cdcdee412115","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtVariableReadImpl","sourcecode":"changed"},"failures":[],"tindex":"520df54a-2e70-11e6-9061-47de4a6026ee","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if ((!forceInclusive) || forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (forceInclusive) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getKeyAnalyzer().isPrefix(K, int, int, key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"changed":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"520df54b-2e70-11e6-9061-e3eb1bbd4845","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1050","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(fromIndexInclusive)) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (fromIndexInclusive + (int)) , (toIndexExclusive + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndexInclusive"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,536,537,540,541,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017],"tindex":"520e1c5c-2e70-11e6-9061-a320c8f23d64","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)"},"failures":[512,510,517,518,520,521,523,5,524,525,526,527,532,533,534,535,538,542,544,545,546,549,547,554,557,558,559,560,562,563,564,565,566,567,568,569,570,572,575,576,580,581,582,583,584,585,586,589,590,593,594,595,596,597,1018,1019],"tindex":"520e436d-2e70-11e6-9061-99acd8c823f3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[1020,1021],"tindex":"520e436e-2e70-11e6-9061-2342f5a10111","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[1022,1023,1024,1025,1026],"tindex":"520e6a7f-2e70-11e6-9061-e98a0d5d94df","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index == 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"520e6a80-2e70-11e6-9061-9727c9a09c9d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (bitIndex < (lengthInBits / 2)) {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits","index":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtBinaryOperatorImpl","sourcecode":"(!(nextCalled)) || (removed)"},"failures":[],"tindex":"520e9191-2e70-11e6-9061-d163b3a032d2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if ((!forceInclusive) || forceInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (forceInclusive) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getKeyAnalyzer().isPrefix(K, int, int, key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"forceInclusive","nextCalled":"forceInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl","sourcecode":"bound < 0"},"failures":[1027],"tindex":"520e9192-2e70-11e6-9061-d3214828da3c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[],"tindex":"520eb8a3-2e70-11e6-9061-1f32d7b0801d","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:137","type":"CtMethodImpl","sourcecode":"public int compare(final java.lang.Boolean b1, final java.lang.Boolean b2) {\n    if (b2 == null) {\n        {\n            if (b2 == null) {\n                {\n                    final boolean boolean = b1.booleanValue();\n                    final boolean boolean = b2.booleanValue();\n                    return v1 ^ v2 ? v1 ^ (boolean) ? 1 : -1 : 0;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"b2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[1028],"tindex":"520eb8a4-2e70-11e6-9061-cf90ac218b1f","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"520eb8a5-2e70-11e6-9061-b5c33d2e5883","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[319,403,405,408,409,414],"tindex":"520edfb6-2e70-11e6-9061-d3a5cdd4cdcb","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex < 0) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"hashIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[1029],"tindex":"520f06c7-2e70-11e6-9061-57cc1b7a337f","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"520f06c8-2e70-11e6-9061-ed011c3a17e0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"520f2dd9-2e70-11e6-9061-7748e6042eb0","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"520f2dda-2e70-11e6-9061-7709d1908bce","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[125,136,137,138,141,143,146,147,154,155,156,161,164,165,166,167,168,133,134,178,179,180,183,185,188,189,196,197,198,203,206,207,208,209,210,175,176],"tindex":"520f2ddb-2e70-11e6-9061-9d364917abef","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[318],"tindex":"520f54ec-2e70-11e6-9061-077ac973dbe1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 instanceof java.util.Map<?, ?>) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"520f54ed-2e70-11e6-9061-c512a9b1ae5d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.util.Iterator) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"520f7bfe-2e70-11e6-9061-b7aa3123a262","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:86","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> nonUniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":46,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}