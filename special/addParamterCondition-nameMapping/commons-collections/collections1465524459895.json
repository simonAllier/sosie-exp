{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":13,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":282,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":162,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":254,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":318,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":511,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":714,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":218,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":503,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":662,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":33,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":246,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":0,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":581,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":113,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":111,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":644,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":161,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":666,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":123,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":689,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":715,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":166,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":538,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":2,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":334,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":59,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":172,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":237,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":268,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":8,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":562,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":442,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":283,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":180,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":188,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":597,"org.apache.commons.collections4.ListUtilsTest.testLazyList":717,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":100,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":52,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":684,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":175,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":480,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":555,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":14,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":276,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":578,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":462,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":255,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":568,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":691,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":576,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":395,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":171,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":321,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":485,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":228,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":223,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":375,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":335,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":641,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":102,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":475,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":619,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":710,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":220,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":692,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":645,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":235,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":164,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":272,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":244,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":455,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":84,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":550,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":129,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":233,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":624,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":336,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":708,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":426,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":559,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":707,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":706,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":625,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":441,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":86,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":530,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":37,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":588,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":583,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":558,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":131,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":60,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":133,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":556,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":43,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":216,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":436,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":124,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSimpleSerialization":497,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":416,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":488,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":212,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":421,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":630,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":214,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":703,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":668,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":704,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":342,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":526,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":705,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":557,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":502,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":132,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":380,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":278,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":31,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":599,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":446,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":447,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":493,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":203,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":396,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":500,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":574,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":269,"org.apache.commons.collections4.CollectionUtilsTest.union":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":168,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":646,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":300,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":304,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":305,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":270,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":670,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":116,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":397,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":61,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":585,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":291,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":229,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":71,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":105,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":160,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":544,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":596,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToString":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":289,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":288,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":320,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":545,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":287,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":319,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":527,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":16,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":193,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":410,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":285,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":199,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":68,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":66,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":25,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":575,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":505,"org.apache.commons.collections4.map.LRUMapTest.testClone":22,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":339,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":384,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":266,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":458,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":698,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":294,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":424,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":450,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":127,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":12,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":274,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":533,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":598,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":682,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":330,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":183,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":147,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":633,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":53,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":676,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":679,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":660,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":135,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":200,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":362,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":680,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":130,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":564,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":469,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":639,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":92,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":534,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":137,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":277,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":685,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":108,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":45,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":361,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":482,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":360,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":359,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":448,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":149,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":518,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":517,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":515,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":114,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":514,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":178,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":565,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":627,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":522,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":495,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalEmptyCollectionExists":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":595,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":541,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":313,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":112,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":155,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":383,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":636,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":310,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":523,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":369,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":528,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":628,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":654,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":348,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":460,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":219,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":107,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":444,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":32,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":363,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":461,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":592,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":429,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":146,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":567,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":258,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":509,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":457,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":686,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":423,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":415,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":227,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":154,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":611,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":427,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":327,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":326,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":405,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":433,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":604,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":293,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":468,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":700,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":546,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":621,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":185,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":106,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":406,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":394,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":206,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":665,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":658,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":419,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":236,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":347,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":560,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":713,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":388,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":389,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":390,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":601,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":631,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":226,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":669,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":232,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":524,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":650,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":463,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":256,"org.apache.commons.collections4.map.HashedMapTest.testClone":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":422,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":464,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":547,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":465,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":640,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":47,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":623,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":281,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":634,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":87,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":451,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":618,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":353,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":368,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":332,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":207,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":702,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":378,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":512,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":589,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":265,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":401,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":600,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":671,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":174,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":486,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":548,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":6,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":525,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":535,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":494,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":709,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":381,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":323,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":322,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":439,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":324,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":667,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":51,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":309,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":683,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":39,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":267,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":472,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":638,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":194,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":279,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":78,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":403,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":507,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":379,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":15,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":481,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":577,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":566,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":425,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":23,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":306,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":711,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":184,"org.apache.commons.collections4.map.LinkedMapTest.testClone":20,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":142,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":440,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":10,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":610,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":690,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":260,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":19,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":231,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":513,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":519,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":292,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":675,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":261,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":345,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":506,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":9,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":536,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":629,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":192,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":655,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":491,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":209,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":187,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":238,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":489,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":569,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalFullCollectionExists":499,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":652,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":688,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":177,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":695,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":275,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":484,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":88,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":346,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":134,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":478,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":24,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":393,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":139,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":608,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":594,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":551,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":90,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":191,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":99,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":607,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":62,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":392,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":543,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":622,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":437,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":570,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":296,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":516,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":699,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":341,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":653,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":414,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":637,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":712,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":386,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":387,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":479,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":487,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":385,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":196,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":620,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":540,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":657,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":165,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":382,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":681,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":204,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":402,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":311,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":103,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":240,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":264,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":377,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":109,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":476,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":352,"org.apache.commons.collections4.map.LRUMapTest.testLRU":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":179,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":616,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":77,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":609,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":205,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":376,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":18,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":452,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":659,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":431,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":428,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":664,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":29,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":411,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":36,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":643,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":85,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":28,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":470,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":678,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":34,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":356,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":357,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":693,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":143,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":186,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":302,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":407,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":413,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":338,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":614,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":355,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":508,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":656,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":434,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":626,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":299,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":351,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":418,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":420},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[0],"tindex":"1bf101c3-2eb0-11e6-ab13-67e0c78c8e65","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[1],"tindex":"1bf19e04-2eb0-11e6-ab13-6d2687b69ec3","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"1bf1c515-2eb0-11e6-ab13-3df217c18209","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[2],"tindex":"1bf1ec26-2eb0-11e6-ab13-1de5f8599b29","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[3,4,5,6,7,8,9,10],"tindex":"1bf1ec27-2eb0-11e6-ab13-07dc00dcf191","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index > 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"1bf21338-2eb0-11e6-ab13-b1a3deb0233b","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                {\n                    final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n                    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(bag.toArray()));\n                        bag.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[11],"tindex":"1bf23a49-2eb0-11e6-ab13-51b284df3e47","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    return doRemoveValue(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[12],"tindex":"1bf23a4a-2eb0-11e6-ab13-8d24fab18b55","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"1bf2615b-2eb0-11e6-ab13-93495b6c848f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:318","type":"CtMethodImpl","sourcecode":"private void _putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            final int int = map.size();\n            if (mapSize == 0) {\n                return ;\n            } \n            final int int = ((int)((((int) + mapSize) / (float)) + 1));\n            ensureCapacity(calculateNewCapacity(newSize));\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[28,29,30,31,32,33],"tindex":"1bf2886c-2eb0-11e6-ab13-9132868f8e77","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (end1 < 0) {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1bf2af7d-2eb0-11e6-ab13-837b02f30089","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[34,35,36,37,38,39,40,41,42],"tindex":"1bf2af7e-2eb0-11e6-ab13-4df840d0814b","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[43],"tindex":"1bf2fd9f-2eb0-11e6-ab13-3fd902884858","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"1bf324b0-2eb0-11e6-ab13-9532af599a49","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"1bf324b1-2eb0-11e6-ab13-0f3aa3fa33c8","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            if (count == 1) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().add(object, count);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"1bf34bc2-2eb0-11e6-ab13-f7daf810f011","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[44,45],"tindex":"1bf372d3-2eb0-11e6-ab13-4deefa73d088","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        {\n            if (count == 1) {\n                {\n                    if (!(keyIterator.hasNext())) {\n                        return null;\n                    } \n                    final K K = keyIterator.next();\n                    final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                        public java.util.Map.Entry<K, V> transform(final V input) {\n                            return new java.util.Map.Entry<K, V>() {\n                                public K getKey() {\n                                    return key;\n                                }\n\n                                public V getValue() {\n                                    return input;\n                                }\n\n                                public V setValue(V value) {\n                                    throw new java.lang.UnsupportedOperationException();\n                                }\n                            };\n                        }\n                    };\n                    return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"1bf48444-2eb0-11e6-ab13-6ddf6a258e21","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"1bf4ab55-2eb0-11e6-ab13-5fa725e602ee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[97],"tindex":"1bf4d266-2eb0-11e6-ab13-cf9fd60ab8d5","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[98],"tindex":"1bf4d267-2eb0-11e6-ab13-b5d8479b2ec2","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1bf4f978-2eb0-11e6-ab13-17c1926f0bb2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[99],"tindex":"1bf52089-2eb0-11e6-ab13-85d5413a50b9","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"1bf5208a-2eb0-11e6-ab13-a3b0d43a3455","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"1bf5479b-2eb0-11e6-ab13-6b4a94286138","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"1bf56eac-2eb0-11e6-ab13-4d0aafe5ed01","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[100,101,102,103,104],"tindex":"1bf595bd-2eb0-11e6-ab13-352140a2058b","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"1bf5bcce-2eb0-11e6-ab13-b34892330b32","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:329","type":"CtMethodImpl","sourcecode":"private void clear(final int i) {\n    if (i < 0) {\n        {\n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[117],"tindex":"1bf5bccf-2eb0-11e6-ab13-4762e9756c0e","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[118],"tindex":"1bf5e3e0-2eb0-11e6-ab13-0f49776ba69a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[119,120,121,122],"tindex":"1bf60af1-2eb0-11e6-ab13-53c87d443faa","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[123],"tindex":"1bf63202-2eb0-11e6-ab13-a190a7e68317","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[124,125],"tindex":"1bf63203-2eb0-11e6-ab13-8520e6449a44","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:697","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[105,106,107,108,109,110,111,112,113,114,126,127,128,129,130,131,132,133,115,116],"tindex":"1bf65914-2eb0-11e6-ab13-17226044cd81","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[134],"tindex":"1bf68025-2eb0-11e6-ab13-b11f46c9acb6","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[135],"tindex":"1bf68026-2eb0-11e6-ab13-b52a56dc9c92","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"1bf6a737-2eb0-11e6-ab13-3d80501325b8","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[136,137,138,139,140,101,141,102,142,143,144,145,146,147,148,149],"tindex":"1bf6ce48-2eb0-11e6-ab13-f95625ebae13","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[150],"tindex":"1bf6ce49-2eb0-11e6-ab13-99f79864c758","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[151],"tindex":"1bf6f55a-2eb0-11e6-ab13-fbf1b9e5a504","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"1bf6f55b-2eb0-11e6-ab13-11f3b15ae861","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index > 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[46,152,47,153,154,155,156,157,11,48,158,159,49,50,51,52,160,54,55,161,56,57,162,58,59,60,163,164,61,62,165,166,167,63,64,65,66,67,68,69,168,169,70,71,170,171,72,73,74,75,76,53,172,173,174,77,175,78,176,177,178,179,180,181,79,80,182,82,83,183,84,85,184,86,87,185,186,187,88,89,90,91,188,189,190,92,191,192,193,93,194,94,95,96,81,195],"tindex":"1bf6f55c-2eb0-11e6-ab13-d58519b71ce5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtBinaryOperatorImpl","sourcecode":"(key == null) || (bitIndex >= lengthInBits)"},"failures":[],"tindex":"1bf71c6d-2eb0-11e6-ab13-1172f0e64591","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if ((key == null) || (bitIndex >= bitIndex)) {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex","key":"key","bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1bf71c6e-2eb0-11e6-ab13-6d82a2e433b2","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[196,197,14,15,198,199,200,201,202,203,204,205,206,207,208,209,210,16,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,17,227,228,229,230,231,232,233,234,235,236,237,238,18,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,19,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,20,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,21,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,22,35,337,36,338,339,37,38,340,39,40,41,42,341,342,343,344,345,346,347,348,349,350,351,352,353,354,23,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,24,371,372,373,374,375,376,377,378,379,380,381,382,383,25,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436],"tindex":"1bf7437f-2eb0-11e6-ab13-9b6090b6b885","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[437,438,439,440,441,442,443,13,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,26,462,463,464,465,466,467,468,469,470,471],"tindex":"1bf74380-2eb0-11e6-ab13-81d8e4379c31","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1bf76a91-2eb0-11e6-ab13-ed248a4762c2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    return doRemoveValue(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtBinaryOperatorImpl","sourcecode":"((set.size()) > 0) || ((list.size()) > 0)"},"failures":[472,473],"tindex":"1bf76a92-2eb0-11e6-ab13-83d74abe3401","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.util.Set<E> java.util.Set<E>;\n                    if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                        subSet = new java.util.HashSet<E>(list.size());\n                    } else {\n                        try {\n                            subSet = set.getClass().newInstance();\n                        } catch (final java.lang.InstantiationException ie) {\n                            subSet = new java.util.HashSet<E>();\n                        } catch (final java.lang.IllegalAccessException iae) {\n                            subSet = new java.util.HashSet<E>();\n                        }\n                    }\n                    subSet.addAll(list);\n                    return subSet;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"1bf76a93-2eb0-11e6-ab13-0915faf0a3e2","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                        return true;\n                    } \n                    return java.util.Map.Entry<K, V>.equals(object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],"tindex":"1bf791a4-2eb0-11e6-ab13-912b664009f9","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"1bf791a5-2eb0-11e6-ab13-3145139a471c","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"1bf791a6-2eb0-11e6-ab13-99c7d41477a7","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"1bf7b8b7-2eb0-11e6-ab13-9bf3f9823d90","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[500,501,502,503,504,505,506,507],"tindex":"1bf7b8b8-2eb0-11e6-ab13-4755cd137fce","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"1bf7dfc9-2eb0-11e6-ab13-87da1dcdbb89","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1bf7dfca-2eb0-11e6-ab13-2dfb590efb25","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[438,439,440,441,442,443,13,444,437,196,14,202,203,204,205,207,208,16,211,226,230,231,232,233,235,236,18,239,254,269,270,272,273,276,277,19,280,302,312,313,314,315,317,318,21,321,336,346,347,348,349,351,352,23,355,370,375,376,377,378,380,384,399,456,457,458,459,460,461,26,462,455,400,402,415,419,421,434],"tindex":"1bf7dfcb-2eb0-11e6-ab13-1d15ae7743ae","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[],"tindex":"1bf806dc-2eb0-11e6-ab13-fb4a6d5eb488","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[508,509],"tindex":"1bf806dd-2eb0-11e6-ab13-7946553112df","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[510,511],"tindex":"1bf806de-2eb0-11e6-ab13-234a8761d9a8","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,124,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556],"tindex":"1bf82def-2eb0-11e6-ab13-fd318a0eb56e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"1bf82df0-2eb0-11e6-ab13-c52a4d0f1398","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            if (count == 1) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().add(object, count);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[557,558],"tindex":"1bf82df1-2eb0-11e6-ab13-d7035df99557","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"1bf85502-2eb0-11e6-ab13-ff295a106937","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        {\n            if (count == 1) {\n                {\n                    if (!(keyIterator.hasNext())) {\n                        return null;\n                    } \n                    final K K = keyIterator.next();\n                    final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                        public java.util.Map.Entry<K, V> transform(final V input) {\n                            return new java.util.Map.Entry<K, V>() {\n                                public K getKey() {\n                                    return key;\n                                }\n\n                                public V getValue() {\n                                    return input;\n                                }\n\n                                public V setValue(V value) {\n                                    throw new java.lang.UnsupportedOperationException();\n                                }\n                            };\n                        }\n                    };\n                    return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[46,152,47,153,154,155,156,157,11,48,158,159,49,50,51,52,160,54,55,161,56,57,162,58,59,60,163,164,61,62,165,166,167,63,64,65,66,67,68,69,168,169,70,71,170,171,72,73,74,75,76,53,172,174,173,77,175,78,176,177,178,179,180,181,79,80,182,82,83,183,84,85,184,86,87,185,186,187,88,89,90,91,188,189,190,92,191,192,193,93,194,94,95,96,81,195],"tindex":"1bf87c13-2eb0-11e6-ab13-335948751a5d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[143,103,104,144,145,146,147,148,149],"tindex":"1bf8a324-2eb0-11e6-ab13-abb5bc2b6a33","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[559],"tindex":"1bf8ca35-2eb0-11e6-ab13-4f7b3e8d1e18","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"1bf8f146-2eb0-11e6-ab13-153ca97806d2","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"1bf8f147-2eb0-11e6-ab13-712be3dfb2c7","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[560],"tindex":"1bf8f148-2eb0-11e6-ab13-1f9b170b0ac5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"1bf91859-2eb0-11e6-ab13-c72eb90fa854","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[561,562],"tindex":"1bf9185a-2eb0-11e6-ab13-4972381f5a19","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"1bf9185b-2eb0-11e6-ab13-5963cd1cbaaa","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[28,29,30,31,32,33],"tindex":"1bf9185c-2eb0-11e6-ab13-7daace489058","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((end2 - end1) > (start2 - end1)) {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"start2","end1":"end2","start2":"end1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"1bf93f6d-2eb0-11e6-ab13-319ba96cddfb","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1bf9667e-2eb0-11e6-ab13-496df4fa77e0","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,510,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,255,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,511,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648],"tindex":"1bf9667f-2eb0-11e6-ab13-6991d2e28fee","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[649],"tindex":"1bf96680-2eb0-11e6-ab13-4d11918f1e5f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[650],"tindex":"1bf98d91-2eb0-11e6-ab13-bf4332f05591","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"1bf98d92-2eb0-11e6-ab13-5bd1c563e436","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                {\n                    final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n                    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(bag.toArray()));\n                        bag.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"1bf98d93-2eb0-11e6-ab13-674abf049dee","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object instanceof java.util.Map<?, ?>) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                        return true;\n                    } \n                    return java.util.Map.Entry<K, V>.equals(object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[651,652],"tindex":"1bf9b4a4-2eb0-11e6-ab13-c1e01bd1e157","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"1bf9b4a5-2eb0-11e6-ab13-ab159edd0e3a","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (defaultValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[653],"tindex":"1bf9b4a6-2eb0-11e6-ab13-a5d641ce2a6b","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"1bf9b4a7-2eb0-11e6-ab13-e79f762f1494","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    java.util.Set<E> java.util.Set<E>;\n                    if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                        subSet = new java.util.HashSet<E>(list.size());\n                    } else {\n                        try {\n                            subSet = set.getClass().newInstance();\n                        } catch (final java.lang.InstantiationException ie) {\n                            subSet = new java.util.HashSet<E>();\n                        } catch (final java.lang.IllegalAccessException iae) {\n                            subSet = new java.util.HashSet<E>();\n                        }\n                    }\n                    subSet.addAll(list);\n                    return subSet;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"1bf9dbb8-2eb0-11e6-ab13-b3cc175040eb","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[],"tindex":"1bf9dbb9-2eb0-11e6-ab13-9f97a8acd075","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[654],"tindex":"1bf9dbba-2eb0-11e6-ab13-c52a589a0591","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[197,15,198,206,223,224,17,234,251,252,264,274,299,300,305,20,316,333,334,24,371,379,396,397,455,456,457,458,459,460,461,26,462],"tindex":"1bfa02cb-2eb0-11e6-ab13-9bfdc68fd0c8","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"1bfa02cc-2eb0-11e6-ab13-4f6b12d7e8ed","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"1bfa29dd-2eb0-11e6-ab13-2b1d97d2b919","method":{"position":"org.apache.commons.collections4.PredicateUtils:502","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(predicate);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[655,656,657,658,659,660,661,662,663,664,665,647,648],"tindex":"1bfa29de-2eb0-11e6-ab13-eb2dc0100b60","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[666,667,668,669,670,671,672,673,674,675],"tindex":"1bfa50ef-2eb0-11e6-ab13-011b2de0baa6","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1bfa50f0-2eb0-11e6-ab13-a5dca710172b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"1bfa50f1-2eb0-11e6-ab13-f1fa67e89a55","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[676],"tindex":"1bfa7802-2eb0-11e6-ab13-8b1dc4165933","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,608,692,693,694,695,609,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,610,713,714,611,612,613,614,615,715,716],"tindex":"1bfa7803-2eb0-11e6-ab13-cfe4b3091cc1","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"1bfa9f14-2eb0-11e6-ab13-6b73077476e6","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[257,259,34,256,258],"tindex":"1bfa9f15-2eb0-11e6-ab13-b1ecfd3c0bd1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[717],"tindex":"1bfa9f16-2eb0-11e6-ab13-1b99a28b7034","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}