{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":599,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalEmptyCollectionExists":721,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":952,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":418,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":52,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":483,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":404,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSimpleSerialization":164,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":100,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":286,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":876,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":941,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":728,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":337,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":940,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":610,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":384,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":302,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":865,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":942,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":845,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":187,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":655,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":922,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalFullCollectionExists":719,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":436,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":749,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":783,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":654,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":356,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":264,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":90,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":651,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":736,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":793,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":664,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":604,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":771,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":870,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":645,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":119,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":643,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":893,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":684,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":11,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":29,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":186,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":563,"org.apache.commons.collections4.CollectionUtilsTest.select":315,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":211,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectEqualsSelf":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":636,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":525,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":824,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":957,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":755,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":971,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":778,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":829,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":878,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":25,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":745,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.CollectionUtilsTest.intersection":320,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":691,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":879,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":618,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":74,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":353,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":391,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":502,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":495,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":496,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":611,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":47,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":497,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":237,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":416,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":154,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":737,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":298,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":487,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":12,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":798,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":228,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":853,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":600,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":789,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":362,"org.apache.commons.collections4.map.CompositeMapTest.testPut":301,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":657,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":836,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":428,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":692,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":747,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":120,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":231,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":346,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":616,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":965,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":567,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":174,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":799,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":962,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":476,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":478,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration":297,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":968,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":44,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":459,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":460,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":671,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":631,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":858,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":323,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":184,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":801,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":350,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":307,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":503,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":270,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":198,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":686,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":634,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":331,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":364,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":837,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":386,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":695,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":741,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":475,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":847,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":815,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":124,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":127,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":98,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":761,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":13,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":510,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":699,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":641,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":226,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":516,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":434,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":685,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":835,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":697,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":915,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":806,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":779,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":693,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":694,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":848,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":86,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":688,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":882,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":463,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":342,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":153,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":869,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":950,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":656,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":946,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":647,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":765,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":5,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":419,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":776,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":787,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":345,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":2,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":596,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":242,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":283,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":608,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":863,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":943,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":521,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":890,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":598,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":274,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":841,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":334,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":373,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":150,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":553,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":552,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":461,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":122,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.map.LRUMapTest.testReset":831,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":877,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":788,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":118,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":729,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":133,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":38,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":312,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":900,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":519,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":338,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":210,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":352,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsSelfHashCode":724,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":593,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":809,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsSelfHashCode":166,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":330,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":842,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":400,"org.apache.commons.collections4.map.LinkedMapTest.testReset":804,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":224,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":866,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":333,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":827,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":849,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":454,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":0,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":857,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":216,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":134,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":206,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":109,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":888,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":568,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":856,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList":401,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":225,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":438,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":746,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":571,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":584,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":219,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":781,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":820,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":332,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":250,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":267,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":489,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":387,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":221,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":784,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":790,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":397,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":913,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":958,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":486,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":579,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":580,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":590,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":240,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":894,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":928,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":234,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":34,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":760,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":468,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":887,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":532,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":177,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":247,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":884,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":961,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":954,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":430,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":197,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":682,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":839,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":200,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":176,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":314,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":227,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":170,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":709,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":51,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyIterator":715,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":759,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":933,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":907,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":202,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":433,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":527,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":526,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":262,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":306,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":528,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":603,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":808,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":317,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":415,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":498,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":811,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":214,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":734,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":653,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":292,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":309,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":743,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":901,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":826,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":825,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testFullIterator":158,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":22,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":805,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":239,"org.apache.commons.collections4.ListUtilsTest.testSelect":308,"org.apache.commons.collections4.map.LinkedMapTest.testClone":803,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":753,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":325,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":383,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":506,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":591,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":577,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":762,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":921,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":578,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":846,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":757,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":690,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":668,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":409,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":843,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":758,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":938,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":675,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":680,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":924,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":670,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectEqualsSelf":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":241,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":777,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":396,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":218,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":830,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":662,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":661,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":791,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testRemove":159,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":104,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":536,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":135,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":271,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":31,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":898,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":398,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":282,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":257,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":318,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":895,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":698,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":868,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":131,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":376,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":452,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":969,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":810,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":891,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":429,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":920,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":27,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":403,"org.apache.commons.collections4.map.LRUMapTest.testLRU":832,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":930,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":701,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":748,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":909,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":296,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":84,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsContract":723,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":146,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":280,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":372,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":490,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":465,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":885,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":903,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":244,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":854,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":204,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":358,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":103,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":973,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":602,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEqualsNull":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":589,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":852,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":840,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":236,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":99,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":299,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":268,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":360,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":547,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsContract":165,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":217,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":707,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":406,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":351,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":855,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":775,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":613,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":97,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyListIteratorIsIndeedEmpty":711,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":538,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":772,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":953,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":678,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":733,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":773,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":76,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":272,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":339,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":443,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":91,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":368,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":622,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":896,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":774,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":70,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":327,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":407,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":446,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":615,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":951,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":606,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":812,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":813,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":310,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":714,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":423,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":451,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenSet":712,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":394,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":522,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":931,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":935,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":570,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":17,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":284,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":336,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":207,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":117,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":504,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":767,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":575,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":16,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":28,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":750,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":285,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":687,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":908,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":7,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":105,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":261,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":259,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":730,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":625,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":689,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":932,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":624,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalFullCollectionExists":161,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":381,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":756,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":860,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":15,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":488,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":861,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":735,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":674,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":213,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":365,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":89,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":344,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":377,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":886,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":977,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":517,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":329,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":449,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":355,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":966,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":79,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":288,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":484,"org.apache.commons.collections4.map.CompositeMapTest.testGet":300,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":978,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":479,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":672,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":814,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":43,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":466,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":705,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":481,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":480,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":88,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":215,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":366,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":191,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":537,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":818,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":768,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":66,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalEmptyCollectionExists":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":914,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":639,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":731,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":681,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":432,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":769,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":929,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":944,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":679,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":251,"org.apache.commons.collections4.CollectionUtilsTest.union":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":500,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":144,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":121,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":260,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":248,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":375,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":802,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":623,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":704,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":614,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":205,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":864,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":619,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenRemove":708,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":185,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":456,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":455,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":607,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":792,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":923,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":457,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":48,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":513,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":512,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":816,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":917,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":511,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":145,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":474,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":919,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":980,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":629,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":807,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":872,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":627,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":766,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":26,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":265,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":71,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":555,"org.apache.commons.collections4.map.LRUMapTest.testClone":533,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":822,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":222,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":421,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":819,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":20,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":33,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":18,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":19,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":278,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":844,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":569,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":125,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":964,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":4,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":823,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":912,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":57,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":349,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":605,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":937,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":867,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":142,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":55,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":77,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":437,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":751,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":229,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":786,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":927,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":976,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":963,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":726,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":934,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":910,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":340,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":635,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator":255,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":172,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":304,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":303,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":417,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":902,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":926,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":972,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":354,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":821,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":60,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":94,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":126,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":290,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":361,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":780,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":862,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":230,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":564,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":572,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":925,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":612,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":573,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":136,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":881,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":960,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":875,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":740,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":24,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":883,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":871,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":702,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":378,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":388,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":727,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemoveThenSet":713,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":752,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":592,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":380,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":911,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":14,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":947,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":531,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":530,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":817,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":956,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":959,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":658,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":188,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":50,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":92,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":703,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":311,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":178,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":313,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":540,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":413,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":560,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":305,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":561,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":562,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":467,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":979,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":967,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":182,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":405,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":795,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":640,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEqualsNull":162,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":738,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":785,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":464,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":326,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":1,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":850,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":556,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":472,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":321,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":518,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":918,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":859,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":642,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":425,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":395,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":175,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":72,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":970,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":945,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":838,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":422,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":149,"org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":411,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":646,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":277,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":431,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":137,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":770,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":897,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":385,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":899,"org.apache.commons.collections4.set.CompositeSetTest.testContains":190,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":363,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":546,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":710,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":739,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":129,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":515,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":916,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":630,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":906,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":676,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":683,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":151,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":199,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":485,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":287,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":123,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":324,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":904,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":65,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":73,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":948,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":279,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":797,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":666,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSerializeDeserializeThenCompare":725,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":660,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":32,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":45,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":266,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":648,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":281,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":880,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":539,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":96,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":370,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":291,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":889,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":667,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":955,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":632,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":620,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":601,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":75,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":851,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemove":717,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":873,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":558,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":559,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":557,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":565,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":93,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":621,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":975,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":892,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":633,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":492,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":183,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":949,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":263,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSerializeDeserializeThenCompare":167,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":650,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":732,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":644,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":471,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":393,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":874,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":427,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":744,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":108,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":374,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":420,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":106,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testIterator":156,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":440,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":936,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":833,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":194,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":238,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":195,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":359,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testFullIterator":716,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":550,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":974,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":677,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":179,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":399,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":905,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":794,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":549,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":85,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEmptyIterator":157,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":494,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":520,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":328,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":499,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":939,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":764,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":754,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":834,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSimpleSerialization":722,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":742,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":132,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":141,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":544,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":42},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"d9a6a73a-2e8e-11e6-a998-cdec91a54b02","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[0,1,2,3],"tindex":"d9a7b8ab-2e8e-11e6-a998-c306959eb90d","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[4],"tindex":"d9a7b8ac-2e8e-11e6-a998-c5802250435d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[5],"tindex":"d9a7dfbd-2e8e-11e6-a998-17465259ea18","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d9a8a30e-2e8e-11e6-a998-8180d8575eb6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[6],"tindex":"d9a8ca1f-2e8e-11e6-a998-8f38a635fb87","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"d9a8f130-2e8e-11e6-a998-95d0746bc17a","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d9a8f131-2e8e-11e6-a998-cf97d1957d2c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"d9a91842-2e8e-11e6-a998-c3b8e59cbcb1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"tindex":"d9a93f53-2e8e-11e6-a998-f799f6452a2d","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[299],"tindex":"d9a96664-2e8e-11e6-a998-773050a899b3","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[300,301,302,303,304,305,306,307,308,309,188,189,190,191,192,193,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"tindex":"d9aac5f5-2e8e-11e6-a998-01f6ca76b09b","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[326],"tindex":"d9aaed06-2e8e-11e6-a998-39c46897569c","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == end) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[327],"tindex":"d9ab1417-2e8e-11e6-a998-8dfb2d3e7d7b","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[328,329],"tindex":"d9ab1418-2e8e-11e6-a998-7f4154a4502d","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[330],"tindex":"d9ab3b29-2e8e-11e6-a998-15090078c673","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350],"tindex":"d9ab3b2a-2e8e-11e6-a998-e3e253e0f55f","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d9ab3b2b-2e8e-11e6-a998-e7132d0298e7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[351],"tindex":"d9ab623c-2e8e-11e6-a998-db0c0d14233a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"d9ab623d-2e8e-11e6-a998-6770f83d4d5b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[18,19,20,21,352,353,354,355,22,23,356,357,24,358,359,25,360,361,362,26,27,28,29,363,30,31,32,33,34,364],"tindex":"d9ab894e-2e8e-11e6-a998-0189e339fd4e","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[308,309,310,311,365,315,318,321,323,324,325],"tindex":"d9ab894f-2e8e-11e6-a998-eff23af7625b","method":{"position":"org.apache.commons.collections4.CollectionUtils:510","type":"CtMethodImpl","sourcecode":"public static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (a.size())) {\n        {\n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            if ((helper.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (helper.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : helper.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n                if ((helper.freqA(obj)) != (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"d9abb060-2e8e-11e6-a998-3f18b045b44c","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[401,402,403,404,405,406],"tindex":"d9abb061-2e8e-11e6-a998-39b449658200","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[407,408,409,410,411,412],"tindex":"d9abb062-2e8e-11e6-a998-9bd10e6f5b5b","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d9abd773-2e8e-11e6-a998-c1953f1931d4","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[413],"tindex":"d9ad5e14-2e8e-11e6-a998-5722c9f7ef48","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[414,415,416],"tindex":"d9ad8525-2e8e-11e6-a998-3b3c8f12ae71","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[417,418,419,420,421],"tindex":"d9ad8526-2e8e-11e6-a998-d5fe6e53e34e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[422],"tindex":"d9ae6f87-2e8e-11e6-a998-f91fe095ea86","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"d9aee4b8-2e8e-11e6-a998-a3bd9fb4ce64","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[423,424,425,426,427,428,429,430,431,432,433,434,421,435,436,437,438],"tindex":"d9aee4b9-2e8e-11e6-a998-9f47daedfc3d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"d9af0bca-2e8e-11e6-a998-0f67d05384dc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[300,301,302,303,304,305,306,307,188,189,190,191,192,193,313,314,316,320,323,324],"tindex":"d9af32db-2e8e-11e6-a998-a788cba01a69","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d9afa80c-2e8e-11e6-a998-0fabdac33f7e","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[439,440,441,442],"tindex":"d9afcf1d-2e8e-11e6-a998-4bb769485fe3","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d9afcf1e-2e8e-11e6-a998-75e5f16f513d","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[443],"tindex":"d9afcf1f-2e8e-11e6-a998-c9178d1fc59f","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"d9aff630-2e8e-11e6-a998-858a6599dba9","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,425,426,427,429,430,432,421,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587],"tindex":"d9aff631-2e8e-11e6-a998-f5c7044f34a1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,233,653,234,654,655,235,236,656,237,238,239,657,240,658,659,660,241,661,662,663,664,665,666,242,667,668,669,243,411,670,671,672],"tindex":"d9b01d42-2e8e-11e6-a998-970be022719d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[673],"tindex":"d9b01d43-2e8e-11e6-a998-c1ba83a8fe7b","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d9b04454-2e8e-11e6-a998-3772442eeeca","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[140],"tindex":"d9b0e095-2e8e-11e6-a998-bd26bfbc377d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[588,589,590,591,592,593,594,595,596,597,598,599,600,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,233,653,234,654,655,235,236,656,237,238,239,657,240,658,659,660,241,661,662,663,664,665,666,242,667,668,669,243,411,670,671,672],"tindex":"d9b107a6-2e8e-11e6-a998-ff0d5be1bce3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[674],"tindex":"d9b107a7-2e8e-11e6-a998-35379a5f3626","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[675,676,677,678,679],"tindex":"d9b12eb8-2e8e-11e6-a998-e1a26af9c911","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[680],"tindex":"d9b155c9-2e8e-11e6-a998-fdebc0d747e7","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[681,682],"tindex":"d9b155ca-2e8e-11e6-a998-d13b0900fcea","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[],"tindex":"d9b17cdb-2e8e-11e6-a998-0d4c5462464a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[683,684,685,686,687,688,689,690,249],"tindex":"d9b17cdc-2e8e-11e6-a998-556293c3c437","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[691],"tindex":"d9b17cdd-2e8e-11e6-a998-9bf410d4b371","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"d9b28e4e-2e8e-11e6-a998-df4ec9f9fa24","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[692],"tindex":"d9b2b55f-2e8e-11e6-a998-bb9342cd3439","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[693,694,695,696,697,698,699,700,701],"tindex":"d9b2db70-2e8e-11e6-a998-f1eb6a087563","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[702,134,703,704,705],"tindex":"d9b2db71-2e8e-11e6-a998-d9b437c9fc1c","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"d9b2db72-2e8e-11e6-a998-835ac9e050dc","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (transformer != null) {\n                {\n                    return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d9b30283-2e8e-11e6-a998-fde72868e4a4","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d9b30284-2e8e-11e6-a998-5f57d622de9c","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((coll.size()) == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[590,591,617,646,647],"tindex":"d9b30285-2e8e-11e6-a998-cb31058e061b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"d9b32996-2e8e-11e6-a998-dbf20499af7e","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,256,257,726,258,727,728,259,260,261,729,262,263,264,265,266,267,730,268,731,732,733],"tindex":"d9b32997-2e8e-11e6-a998-c79a9365e509","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d9b350a8-2e8e-11e6-a998-d71c2975d2f5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"d9b350a9-2e8e-11e6-a998-d9edd33c076b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d9b377ba-2e8e-11e6-a998-5959abd1f2ba","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d9b39ecb-2e8e-11e6-a998-df8fa52d73a4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[734],"tindex":"d9b413fc-2e8e-11e6-a998-4f3cd59abbd9","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[6,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766],"tindex":"d9b413fd-2e8e-11e6-a998-6dd0b3465bcb","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[767],"tindex":"d9b43b0e-2e8e-11e6-a998-8d9ec345e5be","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[768,769],"tindex":"d9b43b0f-2e8e-11e6-a998-03c084f6e376","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[770],"tindex":"d9b43b10-2e8e-11e6-a998-11b5aaff1cfb","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[300,301,302,303,304,305,306,307,308,309,188,189,190,191,192,193,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"tindex":"d9b46221-2e8e-11e6-a998-ab3e20f7ba47","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"d9b46222-2e8e-11e6-a998-d5b43de7c6d4","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            if (count > 3) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    decorated().add(object, count);\n                    return true;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[186],"tindex":"d9b48933-2e8e-11e6-a998-2fac832e7f09","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[771,772,773,774,775,776,777,778],"tindex":"d9b48934-2e8e-11e6-a998-dd1e3d4354a9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[],"tindex":"d9b48935-2e8e-11e6-a998-df3fdd351ea5","method":{"position":"org.apache.commons.collections4.MapUtils:1311","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedMap.transformingMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[6,779,735,780,781,738,782,739,783,740,784,785,786,787,788,789,790,791,792,744,745,748,749,750,751,753,754,755,756,759],"tindex":"d9b54c86-2e8e-11e6-a998-3f529157a8bd","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[793],"tindex":"d9b636e7-2e8e-11e6-a998-8103ccc2df3d","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                {\n                    if (node == null) {\n                        throw new java.lang.NullPointerException(\"Node must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[794,795,796,797,798,799,800,801,802,803,804,805,806,807,515,516,808,809,810,811,518,519,812,520,521,813,814,522,523,815,816,524,525,817,818,819,526,527,528,529,530,531,775,820,821,822,823,824,825,826,532,827,828,829,830,517,533,831,832,534,833,834,835,836,535,837,838,839,840,841,842,843,536,537,844,845,846,847,539,540,848,541,542,543,849,544,545,850,851,546,547,852,853,854,548,549,550,551,552,553,776,855,856,857,858,859,860,861,554,555,556,862,863,538,864],"tindex":"d9b65df8-2e8e-11e6-a998-21119b109d32","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"d9b6ac19-2e8e-11e6-a998-4da7c9d12700","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[865],"tindex":"d9b6d32a-2e8e-11e6-a998-3b529f9e68b4","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d9b6d32b-2e8e-11e6-a998-075f21f9f1b8","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[866],"tindex":"d9b6d32c-2e8e-11e6-a998-594d4d495703","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"d9b6fa3d-2e8e-11e6-a998-93c9f020b51b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[867,868,869,870,871,872,873],"tindex":"d9b6fa3e-2e8e-11e6-a998-3f1bf6548c67","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[58,66,85,87],"tindex":"d9b7214f-2e8e-11e6-a998-2f71ef75a82c","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892],"tindex":"d9b72150-2e8e-11e6-a998-99c880a2304d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[588,589,590,591,601,592,593,594,595,596,597,598,599,600,602,603,604,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,605,606,643,642,644,645,646,647,648,649,650,651,652,233,653,655,235,236,656,237,238,239,657,240,658,659,660,241,661,662,663,664,665,666,242,667,668,669,243,411,670,671,672,234,654],"tindex":"d9b72151-2e8e-11e6-a998-737352093d19","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"d9b74862-2e8e-11e6-a998-f57f22125e83","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"d9b74863-2e8e-11e6-a998-9be3c925c71d","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[543,555,556],"tindex":"d9b74864-2e8e-11e6-a998-919607a47c42","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[893,894,895,896,897,898,899],"tindex":"d9b76f75-2e8e-11e6-a998-cb6a38095ecd","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"d9b76f76-2e8e-11e6-a998-15dd5bd7d8d7","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"d9b79687-2e8e-11e6-a998-f361b169cca3","method":{"position":"org.apache.commons.collections4.IteratorUtils:805","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.Node node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                {\n                    if (node == null) {\n                        throw new java.lang.NullPointerException(\"Node must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.NodeListIterator(node);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d9b79688-2e8e-11e6-a998-5b6548bd0db3","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (transformer != null) {\n                {\n                    return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[900],"tindex":"d9b79689-2e8e-11e6-a998-9d893a8bcfa8","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,675,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,679,975,976,977,978,979,980],"tindex":"d9b7968a-2e8e-11e6-a998-8738ceee430f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[313],"tindex":"d9b7bd9b-2e8e-11e6-a998-638469833e34","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) != (b.size())) {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[794,839,840,841,832,833,836,535,838],"tindex":"d9b7bd9c-2e8e-11e6-a998-ab16e01e043e","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"d9b80bbd-2e8e-11e6-a998-475c0ce49e5b","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            if (count > 3) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    decorated().add(object, count);\n                    return true;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}