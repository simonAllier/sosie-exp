{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":365,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":502,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":506,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":271,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":600,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":429,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":86,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":253,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":45,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":259,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":562,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":373,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":133,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":552,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":319,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":593,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":387,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":127,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":332,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalEmptyCollectionExists":434,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":526,"org.apache.commons.collections4.CollectionUtilsTest.get":62,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":379,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":380,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":115,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":471,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":339,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":12,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":305,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":423,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":537,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":327,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":369,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":308,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":451,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":83,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":177,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":323,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":191,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":274,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":301,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":522,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":619,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":486,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":407,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":299,"org.apache.commons.collections4.CollectionUtilsTest.select":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":328,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":455,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":401,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":608,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":147,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":490,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":612,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":594,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":418,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":24,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":564,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":183,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":233,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":390,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":391,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":389,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.CollectionUtilsTest.intersection":125,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":583,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":210,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":565,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":34,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":50,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":465,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":250,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":519,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":334,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":513,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":98,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":572,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":240,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":163,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":535,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":366,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":478,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":15,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":598,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":363,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":272,"org.apache.commons.collections4.map.CompositeMapTest.testPut":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":337,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":243,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":263,"org.apache.commons.collections4.map.CompositeMapTest.testGet":131,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":42,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":445,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":381,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":425,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":447,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":515,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":64,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":269,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":63,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":459,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":270,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":112,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":297,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":404,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":19,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":288,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":541,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":101,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":542,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":540,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":229,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":582,"org.apache.commons.collections4.CollectionUtilsTest.union":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":396,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":247,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":378,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":138,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":322,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":449,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":97,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":410,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":384,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":266,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":590,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":399,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":372,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":283,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":481,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":421,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":10,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":303,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":469,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":382,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":260,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":77,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":51,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":452,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":55,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":265,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":499,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":551,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":239,"org.apache.commons.collections4.map.LRUMapTest.testClone":496,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":88,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":517,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":79,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":219,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":597,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":568,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":545,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":245,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":224,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":285,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":313,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":80,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":431,"org.apache.commons.collections4.set.ListOrderedSetTest.testCanonicalFullCollectionExists":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":333,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":174,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":104,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":309,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":376,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":584,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":295,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":596,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":227,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":476,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":417,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":415,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":487,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":61,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":35,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":350,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":585,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":463,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":167,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":370,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":76,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":235,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":164,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":403,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":577,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":291,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":4,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":543,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":6,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":453,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":604,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":563,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":150,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":477,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":317,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":78,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":400,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":241,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":135,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":23,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":117,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":360,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":409,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":555,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":575,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":436,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":148,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":466,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":558,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":140,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":375,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":539,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":521,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":460,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":279,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":567,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":60,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":110,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":268,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":267,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":450,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":574,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":561,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":472,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":606,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":569,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":516,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":225,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":414,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":359,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":90,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":234,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":91,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":173,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":89,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":528,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":146,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":187,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":87,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":340,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":5,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":109,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":170,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":49,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":298,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":116,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":118,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":592,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":158,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":473,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":479,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":581,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":136,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":205,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":66,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":166,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":113,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":523,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":202,"org.apache.commons.collections4.map.HashedMapTest.testClone":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":524,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":525,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":16,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":190,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":495,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":208,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":405,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":338,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":468,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":474,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":182,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":546,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":336,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":603,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":251,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":573,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":550,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":570,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":618,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":126,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":441,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":142,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":275,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":444,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":276,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":605,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":3,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":324,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":273,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":492,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":557,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":254,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":615,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":152,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":446,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":533,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":368,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":218,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":232,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":122,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":458,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":52,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":217,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":355,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":21,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":326,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":314,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":290,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":280,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":503,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":242,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":231,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":17,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":587,"org.apache.commons.collections4.set.CompositeSetTest.testContains":111,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":211,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":497,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsSelfHashCode":437,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":153,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":430,"org.apache.commons.collections4.ListUtilsTest.testSelect":107,"org.apache.commons.collections4.map.LinkedMapTest.testClone":500,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":278,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":277,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":488,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":534,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":130,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":197,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":443,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":316,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":505,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":94,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":611,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":311,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":129,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":160,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":186,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":196,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":262,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":321,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":99,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":352,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":92,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":93,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":306,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":330,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":14,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":342,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":602,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":8,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":508,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":73,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":556,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":149,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":544,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":96,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":193,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":38,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":498,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":462,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":416,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":591,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":576,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":72,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":281,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":215,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":344,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":580,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":351,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":25,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":144,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":599,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":157,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":480,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":424,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":100,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":385,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":188,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":536,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":213,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":595,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":30,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":184,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":29,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":433,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":386,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":588,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":207,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":579,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":398,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":578,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":95,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":141,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":151,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":325,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":484,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":614,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":560,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":419,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":482,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":494,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":547,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":427,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":571,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":169,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":300,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":448,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":610,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":176,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":223,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":509,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":258,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":335,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":530,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":165,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":310,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":228,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":85,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":511,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":331,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":426,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":549,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":230,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":489,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":293,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":531,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":159,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":256,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":246,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":287},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[0],"tindex":"d6435a7c-3e76-11e6-a7ee-7fbcc28191f8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d643a89d-3e76-11e6-a7ee-ad4443c87c75","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d643cfae-3e76-11e6-a7ee-5fcec4840344","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"d643cfaf-3e76-11e6-a7ee-4d27a25de7fb","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[47,48],"tindex":"d643cfb0-3e76-11e6-a7ee-03d666bff1fa","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[49,50,51,52,53,54,55,56,57,58,59],"tindex":"d643f6c1-3e76-11e6-a7ee-b9f726dfe9b6","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[60],"tindex":"d643f6c2-3e76-11e6-a7ee-77bb13be64f3","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"d643f6c3-3e76-11e6-a7ee-4b38236a4f6b","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            return decorated().add(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[61],"tindex":"d6441dd4-3e76-11e6-a7ee-fd44af01b3c6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[62,63,64,65],"tindex":"d6441dd5-3e76-11e6-a7ee-9fe9e088ccd4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    int int = index;\n                    org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n                    while (iterator.hasNext()) {\n                        i--;\n                        if (i == (-1)) {\n                            return iterator.next();\n                        } \n                        iterator.next();\n                    }\n                    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[66],"tindex":"d6441dd6-3e76-11e6-a7ee-53da5a1a41a9","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.CompositeMap.this.mutator) == null"},"failures":[],"tindex":"d64444e7-3e76-11e6-a7ee-2bd506118303","method":{"position":"org.apache.commons.collections4.map.CompositeMap:121","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> mutator) {\n    if (mutator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"d64444e8-3e76-11e6-a7ee-4540486dba06","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"d64444e9-3e76-11e6-a7ee-fde521fa2c8e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"d6446bfa-3e76-11e6-a7ee-313beebaccb8","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"d6446bfb-3e76-11e6-a7ee-2db48616979d","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"d644930c-3e76-11e6-a7ee-73b27c01332b","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj instanceof java.util.Enumeration) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[1,2,3,4,7,5,6,9,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"d644930d-3e76-11e6-a7ee-65ae0f18be4f","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(lengthInBits)) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[139,140,141,142,143,144,145],"tindex":"d644930e-3e76-11e6-a7ee-097b96c86a4c","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.AbstractMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[146],"tindex":"d644930f-3e76-11e6-a7ee-8f1e716553c1","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"d644ba20-3e76-11e6-a7ee-a7c5fe33090e","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[65],"tindex":"d644ba21-3e76-11e6-a7ee-0bddc0218839","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d644ba22-3e76-11e6-a7ee-691f193b136a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if ((contains(item)) == false) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[147,148],"tindex":"d644ba23-3e76-11e6-a7ee-f3f2d2f3414c","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                {\n                    if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n                    } \n                    return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,139,140,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,142,143,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"d644ba24-3e76-11e6-a7ee-e3406a039e9c","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"d644e135-3e76-11e6-a7ee-bd22e9daf2ad","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"d644e136-3e76-11e6-a7ee-1363e27619b5","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[294],"tindex":"d644e137-3e76-11e6-a7ee-9f312658e2a5","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[228,229,230],"tindex":"d644e138-3e76-11e6-a7ee-f5688d3a1ec2","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[295,296,297,298],"tindex":"d644e139-3e76-11e6-a7ee-0fcf3e7c5248","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"d645084a-3e76-11e6-a7ee-3d01ae08db5b","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[299],"tindex":"d645084b-3e76-11e6-a7ee-9d489cb00e84","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll2.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[300],"tindex":"d645084c-3e76-11e6-a7ee-3bf73d45379a","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[301],"tindex":"d645084d-3e76-11e6-a7ee-9bedae432f5a","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d6452f5e-3e76-11e6-a7ee-99582a52e420","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"d6452f5f-3e76-11e6-a7ee-21b890d8e2be","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                {\n                    if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n                    } \n                    return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"d6452f60-3e76-11e6-a7ee-5356c4a4b2c7","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:107","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(object, comparator, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"d6452f61-3e76-11e6-a7ee-cfd83322feaf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1322","type":"CtMethodImpl","sourcecode":"private boolean doEquals(final java.lang.Object obj, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                try {\n                    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        final java.lang.Object java.lang.Object = it.getValue();\n                        if ((value.equals(other.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                } catch (final java.lang.ClassCastException ex) {\n                    return false;\n                } catch (final java.lang.NullPointerException ex) {\n                    return false;\n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d6455672-3e76-11e6-a7ee-870be8ec133f","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d6455673-3e76-11e6-a7ee-e7fb1f216f60","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[302,303],"tindex":"d6455674-3e76-11e6-a7ee-63f6bc32bab4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index > 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d6455675-3e76-11e6-a7ee-0f78b4b29438","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[304,305],"tindex":"d6455676-3e76-11e6-a7ee-3f277f18f6da","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"d6455677-3e76-11e6-a7ee-07b9a6f74ef4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (obj instanceof java.util.Enumeration) {\n                {\n                    return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[],"tindex":"d6457d88-3e76-11e6-a7ee-a568ef13bbf9","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"d6457d89-3e76-11e6-a7ee-f119d54249c6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[118],"tindex":"d6457d8a-3e76-11e6-a7ee-b94f80434814","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (b.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[],"tindex":"d6457d8b-3e76-11e6-a7ee-b327be5ebb53","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies > 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"d6457d8c-3e76-11e6-a7ee-95544148408f","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[306],"tindex":"d645a49d-3e76-11e6-a7ee-a9db8c741f06","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"d645a49e-3e76-11e6-a7ee-e72b5a3adf4b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[307],"tindex":"d645a49f-3e76-11e6-a7ee-7352a1aa886c","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d645a4a0-3e76-11e6-a7ee-858dcd6dcae8","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[308,309,310,311],"tindex":"d645a4a1-3e76-11e6-a7ee-75c535ab4a35","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d645cbb2-3e76-11e6-a7ee-33de473b9ab2","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"d645cbb3-3e76-11e6-a7ee-6d2e87d0b622","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[312,313,314,315,316,317,318],"tindex":"d645cbb4-3e76-11e6-a7ee-bf3ced0bff10","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[123],"tindex":"d645cbb5-3e76-11e6-a7ee-ed3429ec4d05","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[319],"tindex":"d645f2c6-3e76-11e6-a7ee-cd53a39cd490","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll1.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[320],"tindex":"d645f2c7-3e76-11e6-a7ee-0ddcfb289bf3","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[321,322],"tindex":"d645f2c8-3e76-11e6-a7ee-e17dfb387bb7","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d645f2c9-3e76-11e6-a7ee-152412bba2fd","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                {\n                    for (final java.lang.Object java.lang.Object : coll) {\n                        if ((contains(item)) == false) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"d645f2ca-3e76-11e6-a7ee-31a356190f74","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.util.Set) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[323,324,325,308,326,309,149,150,151,327,328,152,329,330,331,332,333,334,335,336,153,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,154,155,356,357,310,358,311,359,360,361,362,61,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406],"tindex":"d64619db-3e76-11e6-a7ee-fb7c42ec8dd7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[381,385,395,398,399,402,403,404,405,406],"tindex":"d64619dc-3e76-11e6-a7ee-2585017dd78d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[309,311,398,402,404,405,406],"tindex":"d64619dd-3e76-11e6-a7ee-638c2eaa21d8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"d64619de-3e76-11e6-a7ee-8fcc9fa9c80f","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[407],"tindex":"d64640ef-3e76-11e6-a7ee-c1ed2461508b","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"d64640f0-3e76-11e6-a7ee-fd770c86c294","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"d64640f1-3e76-11e6-a7ee-2f01be332775","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[],"tindex":"d6466802-3e76-11e6-a7ee-41ae59327424","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end < end) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437],"tindex":"d6466803-3e76-11e6-a7ee-07d14bec1a94","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.set.CompositeSet.this.mutator) == null"},"failures":[114,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"tindex":"d6466804-3e76-11e6-a7ee-1b66cca06498","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d6466805-3e76-11e6-a7ee-118036b9c9e3","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"d6466806-3e76-11e6-a7ee-7d9d783484af","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"tindex":"d6466807-3e76-11e6-a7ee-6d9402eaed75","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return getList().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"d6468f18-3e76-11e6-a7ee-2dcd003907d2","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d6468f19-3e76-11e6-a7ee-1592b5e9204e","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[493,494,495,496,497,498,499,500,501,502,503,504,505],"tindex":"d6468f1a-3e76-11e6-a7ee-db33ababa459","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            _putAll(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[506],"tindex":"d6468f1b-3e76-11e6-a7ee-d1b037be8308","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[507,508],"tindex":"d6468f1c-3e76-11e6-a7ee-8115a599a1e8","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[509,510,511,512],"tindex":"d6468f1d-3e76-11e6-a7ee-8f2441367933","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d6468f1e-3e76-11e6-a7ee-1db134c13c6e","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    int int = index;\n                    org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n                    while (iterator.hasNext()) {\n                        i--;\n                        if (i == (-1)) {\n                            return iterator.next();\n                        } \n                        iterator.next();\n                    }\n                    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[154,164,171,208,221,279],"tindex":"d646b62f-3e76-11e6-a7ee-33c0a58db3d9","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[513],"tindex":"d646b630-3e76-11e6-a7ee-a723fa5415bb","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[514,515,516,517,518,519,520,521,495,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,502,539,540,541,542,543,544,545,546,547,548],"tindex":"d646b631-3e76-11e6-a7ee-cfdbd436a8a6","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d646b632-3e76-11e6-a7ee-6dbe68714209","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"d646b633-3e76-11e6-a7ee-fd0fa6df92d0","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[549,549,550,550,551],"tindex":"d646b634-3e76-11e6-a7ee-9304f8f5d9d5","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"d646b635-3e76-11e6-a7ee-a5c85231fd6d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[552,553,554,555,556,557,558],"tindex":"d646dd46-3e76-11e6-a7ee-c5abf5a37f98","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"d646dd47-3e76-11e6-a7ee-5bfa863c0b90","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d646dd48-3e76-11e6-a7ee-11045fc0b6c9","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[559],"tindex":"d646dd49-3e76-11e6-a7ee-afdb6d56547a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1547","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), includeDuplicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"d646dd4a-3e76-11e6-a7ee-ebe7cf139923","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d646dd4b-3e76-11e6-a7ee-4f8ead2c8cdb","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map != null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579],"tindex":"d647045c-3e76-11e6-a7ee-7b4cd46e1a8e","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[580,581,582,583,584,585,586,587,588,184,188,195,198,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,260,264,271,274,288],"tindex":"d647045d-3e76-11e6-a7ee-e1e005866c78","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"d647045e-3e76-11e6-a7ee-430b6dbc6fa0","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"d647045f-3e76-11e6-a7ee-cd33df482a92","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254894943/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}