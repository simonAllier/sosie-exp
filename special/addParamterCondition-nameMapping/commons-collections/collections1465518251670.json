{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":745,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":278,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":752,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":822,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":367,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":1037,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":201,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":130,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":318,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":408,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":681,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsSelfHashCode":1005,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":253,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":404,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":766,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":1114,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":27,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":258,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":112,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":1030,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":29,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":983,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":124,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":669,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":413,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":871,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":924,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":668,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":715,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":846,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":1148,"org.apache.commons.collections4.CollectionUtilsTest.get":1064,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":550,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":279,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":327,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":1157,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":33,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":603,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":861,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":944,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":1144,"org.apache.commons.collections4.ListUtilsTest.testLazyList":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":237,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":801,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":1081,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":1138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":476,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":948,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":1135,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":457,"org.apache.commons.collections4.CollectionUtilsTest.select":1060,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":1134,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":826,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":841,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":330,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":50,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":880,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":89,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":986,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":697,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":847,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":509,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":411,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":187,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":644,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":703,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":567,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":157,"org.apache.commons.collections4.CollectionUtilsTest.intersection":1066,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":169,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":994,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":984,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":1122,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":523,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":268,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalFullCollectionExists":1009,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":746,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":539,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":740,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":757,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":556,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":1046,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":374,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":934,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":933,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":416,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":932,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":849,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":101,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":890,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":1110,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":403,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":562,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":692,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.map.CompositeMapTest.testPut":1029,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":1155,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":459,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":860,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":530,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":610,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":38,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":1010,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":775,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":747,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":777,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":733,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":359,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":501,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":482,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":229,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":381,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":800,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":971,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":978,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":972,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":973,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":481,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":996,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":690,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":1088,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":1024,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":632,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":776,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":191,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":619,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalFullCollectionExists":1092,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":954,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":759,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":57,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":512,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testCanonicalEmptyCollectionExists":1094,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":182,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":902,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":1131,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":75,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":378,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":802,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":779,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":537,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":134,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":398,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":1035,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":136,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":308,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":306,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":577,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":720,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":429,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":535,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":1011,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":751,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":52,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":526,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":760,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":862,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":1025,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":540,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":113,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":724,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":266,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":578,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":385,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":441,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":873,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":967,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":823,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":584,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":500,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEqualsNull":1093,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":1121,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":415,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":515,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":316,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":312,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":756,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":730,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":256,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":653,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":529,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":859,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":93,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":805,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":709,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":876,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":133,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":325,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":545,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":150,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":422,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":784,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":916,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":771,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":927,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsContract":1096,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":458,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":135,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":611,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":1151,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":878,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":1140,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":538,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":575,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":741,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":898,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":774,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":626,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":636,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":743,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":702,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":670,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":1014,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":467,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":739,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":497,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":1006,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":883,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":1112,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":816,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":969,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":744,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":691,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":582,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":866,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":521,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":763,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":897,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":896,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":895,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":689,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":466,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":1027,"org.apache.commons.collections4.map.LRUMapTest.testReset":853,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":410,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":600,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":591,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":987,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":261,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":39,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":456,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":1055,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":813,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":767,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":684,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":503,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":1090,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":1106,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":809,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":662,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":1021,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":484,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":867,"org.apache.commons.collections4.map.LinkedMapTest.testReset":798,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":980,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":762,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":845,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":881,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":548,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":901,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":722,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":982,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":640,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":251,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":432,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":79,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":212,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":127,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":736,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":117,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":900,"org.apache.commons.collections4.ListUtilsTest.testPartition":941,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":221,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":307,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":219,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":1003,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":223,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":222,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":346,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":936,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":793,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":86,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":342,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":614,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":131,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":780,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":442,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":179,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":492,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":688,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":837,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":761,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":54,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":254,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":959,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":605,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":496,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":216,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":560,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":563,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":168,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":1039,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":770,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":60,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":624,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":1057,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":479,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":487,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":787,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":650,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIterator":1084,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":303,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":443,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":1015,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":1103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":144,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":71,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":1156,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":186,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":960,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":1153,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":574,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":953,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":1097,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":431,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":844,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":672,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":426,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":968,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":85,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":852,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":463,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":324,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":337,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":864,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":1059,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":685,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":354,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":444,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":228,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":332,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":646,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":244,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":156,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":347,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":831,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":830,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":601,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":832,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":1034,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":549,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":716,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":1080,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":808,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":1063,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":197,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":811,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":59,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":382,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":1167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":1147,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":696,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":990,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":226,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":225,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":394,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":997,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":635,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":843,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":546,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":842,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":1016,"org.apache.commons.collections4.list.TreeListTest.testBug35258":712,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":799,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":297,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":1000,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":1154,"org.apache.commons.collections4.map.LinkedMapTest.testClone":804,"org.apache.commons.collections4.ListUtilsTest.testSelect":1051,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":109,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":519,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":531,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":783,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":329,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":1048,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":1069,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":295,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":935,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":296,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":630,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":449,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":464,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":1042,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":1104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":965,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":872,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":988,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":573,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":1017,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":1100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":499,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":401,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":868,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":331,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":856,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":542,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":937,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":511,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":31,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":758,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":198,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":340,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":645,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":714,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":1161,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":705,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":821,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":1085,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":694,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":564,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":322,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":1038,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":147,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":648,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":1163,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":110,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":869,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":1089,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":579,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":638,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":657,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":176,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":1041,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":393,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":44,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":43,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":594,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":1065,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":111,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":451,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":284,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":929,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":286,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":285,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":167,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":581,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":513,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":810,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":435,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":764,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":414,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":725,"org.apache.commons.collections4.map.LRUMapTest.testLRU":855,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":470,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":718,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":365,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":105,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":568,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":931,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":323,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":1019,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":588,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":102,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":238,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":239,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":69,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":240,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":920,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":928,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":143,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":172,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":192,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":427,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":891,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":918,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":183,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":524,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":592,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":90,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":206,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":1079,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":18,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":641,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":889,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":1102,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":865,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":73,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":1159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":1150,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":506,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":338,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":527,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":939,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":304,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":888,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":951,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":970,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":56,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":47,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":220,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":910,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":912,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":946,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":78,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":899,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":836,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":1117,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":879,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":977,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":388,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":1040,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":1,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":580,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":683,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":1099,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":375,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":768,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":114,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":9,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":213,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":3,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":1022,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":1125,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":453,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":1068,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":781,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":164,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":541,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":1002,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":1119,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":543,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":814,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":1120,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":818,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":1053,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":642,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":533,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":820,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":96,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":794,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":765,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":313,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":26,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":1026,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":1166,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":67,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":269,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":25,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":622,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":203,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":328,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":507,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":141,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":247,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":1145,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":245,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":494,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":599,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":677,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalEmptyCollectionExists":1008,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":243,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":259,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":1087,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":597,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":97,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":981,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":1128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":1129,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":108,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":1127,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":319,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":572,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":70,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":634,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":904,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":553,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":791,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":49,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":905,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":701,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":520,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":555,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":925,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":1058,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":202,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":773,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":430,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":817,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":792,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":149,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":576,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":72,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":1109,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":190,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":294,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":20,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":208,"org.apache.commons.collections4.map.CompositeMapTest.testGet":1028,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":1108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":708,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":974,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":819,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":1165,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":976,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":975,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":797,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":790,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":998,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":728,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":913,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":17,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":1073,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":731,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":828,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":1107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":754,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":608,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":37,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":370,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":95,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":938,"org.apache.commons.collections4.CollectionUtilsTest.union":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":241,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":163,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":723,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":598,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":1077,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":263,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":339,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":803,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":1075,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":1126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":145,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":207,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":612,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":952,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":596,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":361,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":1118,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":923,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":627,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":1123,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.list.TreeListTest.testRemove":711,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":171,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":782,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":1111,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":440,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":824,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":344,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":966,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":620,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":82,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":663,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":721,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":949,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":750,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":806,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":993,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":1101,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":233,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":749,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":748,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":311,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":336,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":489,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":510,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":907,"org.apache.commons.collections4.map.LRUMapTest.testClone":854,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":839,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":829,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":926,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":475,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":565,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":999,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":282,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":281,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":587,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":870,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":19,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":1050,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":631,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":205,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":462,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":1049,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":148,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":528,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":357,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":654,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":675,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":840,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":778,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":695,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":165,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":1116,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":249,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":950,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":162,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":158,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":140,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":199,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":288,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":569,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":126,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":132,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":289,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":224,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":287,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":552,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":214,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":561,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":667,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":80,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":1020,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":1076,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":491,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":616,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":326,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSerializeDeserializeThenCompare":1098,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":61,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":383,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":906,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":58,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":5,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":753,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":272,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":270,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":120,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":595,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":98,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":651,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":534,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":943,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":686,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":633,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":447,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":769,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":465,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":1142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":710,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":437,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":352,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":1133,"org.apache.commons.collections4.CollectionUtilsTest.filter":732,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":1078,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":302,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":1032,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":637,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":1031,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":351,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":838,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":433,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":660,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":355,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":676,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":301,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":300,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":299,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":478,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":629,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":909,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":376,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":989,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":713,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":877,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":1061,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":153,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":1115,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":656,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":363,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":420,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":1071,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":963,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":919,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":407,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":559,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":155,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":345,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":423,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":915,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":51,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":188,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":267,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":1105,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":942,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":320,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":659,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":22,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":835,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":827,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":834,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":921,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":833,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":1045,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":682,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":825,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":1158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":979,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":962,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":1070,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":473,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":911,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":177,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":184,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":1054,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":665,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":1056,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":103,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":875,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":502,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":742,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":1033,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":628,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":985,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":958,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":1074,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":77,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":851,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":914,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMakeMap":991,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":755,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":558,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":885,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":908,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":428,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":961,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":421,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":1001,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":544,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":1067,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":257,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":215,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":291,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":106,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":362,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":293,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":292,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":674,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":242,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":812,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":903,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":1136,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":180,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":480,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":468,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":679,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":12,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":13,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":14,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":151,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":321,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":719,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":1146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":88,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":341,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":460,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":1062,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":1004,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":185,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":863,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":81,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":796,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":1164,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":217,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":508,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":795,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":1139,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":586,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":609,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":36,"org.apache.commons.collections4.set.CompositeSetTest.testContains":1072,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":1086,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":525,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":615,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":917,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":189,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":887,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":166,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":1130,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":389,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":409,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testSimpleSerialization":1095,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":160,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":64,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":955,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":1018,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":76,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":377,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":661,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":1047,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":772,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":785,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":469,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":333,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":418,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":593,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":848,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":1149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":964,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":498,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":1160,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":940,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":62,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":1083,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":604,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":1012,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":1141,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":589,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":399,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":395,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":178,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":419,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":874,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":6,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":11,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":260,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":392,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":1043,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":434,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":298,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":315,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":930,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":412,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":472,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":369,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":1162,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":698,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":1132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1082,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":439,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":46,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":532,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":590,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testObjectEqualsSelf":1091,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":0,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":406,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":356,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":886,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":446,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":349,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":368,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":1023,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":687,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":947,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":455,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":41,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":310,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":42,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":995,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":1124,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":436,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":956,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":91,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":1013,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":1113,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":617,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":602,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":373,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":218,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":884,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":490,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":945,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":1143,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSimpleSerialization":1007,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":1137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":957,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":210,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":405,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":517,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":129,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":621,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":566,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":536,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":727,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":121,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":738,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":788,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":737,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":99,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":857,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":1036,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":1152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":729,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":84,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":83,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":894,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":343,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":1052,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":666,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":992,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":850,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":892,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":623,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":893,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":175,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":734,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":387,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":815,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":786,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":262,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":488,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":717,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":100,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":154,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":495,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":789,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":391,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":571,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":858,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":613,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":1044,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":400,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":922,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":673,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":678,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":882},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1],"tindex":"a78e4517-2ea1-11e6-a83b-f5e7e17f388f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a78f2f78-2ea1-11e6-a83b-9d02031419fe","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[2],"tindex":"a78f5689-2ea1-11e6-a83b-75dea1b26849","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[3],"tindex":"a78f568a-2ea1-11e6-a83b-e3856f816c74","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[4],"tindex":"a78f7d9b-2ea1-11e6-a83b-c3a3a1539f13","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[5],"tindex":"a7908f0c-2ea1-11e6-a83b-a9cee60cb1fe","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"a790b61d-2ea1-11e6-a83b-fb7d20bfab76","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"a790b61e-2ea1-11e6-a83b-1b5889aad38b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"a790dd2f-2ea1-11e6-a83b-23987dcafba6","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[73,74,75,76],"tindex":"a790dd30-2ea1-11e6-a83b-f9e7aa944e16","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[77,78,79,80],"tindex":"a790dd31-2ea1-11e6-a83b-c779e2f4da2a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"a7910442-2ea1-11e6-a83b-79032319e318","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"a7910443-2ea1-11e6-a83b-2188e680d540","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"a7910444-2ea1-11e6-a83b-ef3e00c6656e","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[77,78,79,80],"tindex":"a7912b55-2ea1-11e6-a83b-6f13b1e504f7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[81,82],"tindex":"a7912b56-2ea1-11e6-a83b-c1a64ccd7978","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[83],"tindex":"a7915267-2ea1-11e6-a83b-516d25e96f8d","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"a7915268-2ea1-11e6-a83b-8f3cb5e64964","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[84],"tindex":"a7915269-2ea1-11e6-a83b-2540cb534ee9","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"a791797a-2ea1-11e6-a83b-ab11bcfc5e88","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"a792d90b-2ea1-11e6-a83b-07eb60548254","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"a792d90c-2ea1-11e6-a83b-b3ec1ad22481","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[130],"tindex":"a793001d-2ea1-11e6-a83b-e3020a9b255c","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[131,91,99],"tindex":"a793001e-2ea1-11e6-a83b-b33b54fb3f00","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,81,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,101,103,107,108,110,113,116,119],"tindex":"a793272f-2ea1-11e6-a83b-5f40cdf7b93b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                {\n                    return decorated().contains(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[398,399,400,401,402,403,404,82,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438],"tindex":"a7932730-2ea1-11e6-a83b-8deea724ebeb","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return addAll(size(), coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,401,402,405,407,408,550,410,411,419,422,423,424,426,427,430,431,432,433,434,551,435,436,438,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,327,328,569,570,329,571,330,572,573,332,574,575,576,577,578,579,580,581,582,583,584,585,586,587,333,588,589,590,335,591,592,593,594,595,596,597,598,599,600,601,602,603,336,604,605,606,338,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,342,343,624,625,344,626,345,627,628,347,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,348,349,646,647,350,648,351,649,650,353,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,105,122,123,126],"tindex":"a7934e41-2ea1-11e6-a83b-978de255aa05","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                {\n                    return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtBinaryOperatorImpl","sourcecode":"(key == null) || (bitIndex >= lengthInBits)"},"failures":[681,682,683,684,685,686,687,688,689,690,31,32,691,33,34,35,692,693,36,694,37,695,696,38,39,697,698,699,40,41,42,43,44,45,700,701,702,703,704,705,706,707,46,708,709,710],"tindex":"a7937552-2ea1-11e6-a83b-cb0fdbf69657","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            if ((key == null) || (bitIndex >= bitIndex)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((key == null) || (bitIndex >= lengthInBits)) {\n                        return false;\n                    } \n                    final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                    final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                    return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex","key":"key","bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[711,712,713,714,715,716,717,718,719,720,721,722,723,724],"tindex":"a7939c63-2ea1-11e6-a83b-c328fa7b68f2","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"a7939c64-2ea1-11e6-a83b-4fb25669b4b0","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a793c375-2ea1-11e6-a83b-d7531bf7fb99","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"a793c376-2ea1-11e6-a83b-2f520ebb6da9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[725,726,727,728],"tindex":"a793c377-2ea1-11e6-a83b-2f46f7b93254","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[729],"tindex":"a793c378-2ea1-11e6-a83b-7d372ef01e0d","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"a793ea89-2ea1-11e6-a83b-ede72c2941bb","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[730,731],"tindex":"a793ea8a-2ea1-11e6-a83b-3387af208d66","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (predicate != null)"},"failures":[732,733],"tindex":"a794addb-2ea1-11e6-a83b-3551b22d7634","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((collection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[734],"tindex":"a794addc-2ea1-11e6-a83b-a92cbe5907f6","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[735],"tindex":"a794d4ed-2ea1-11e6-a83b-fdfbeef428f0","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[736,737,738,739],"tindex":"a794d4ee-2ea1-11e6-a83b-09e22f455014","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"a794d4ef-2ea1-11e6-a83b-97c67e9d7b12","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[740,741],"tindex":"a794fc00-2ea1-11e6-a83b-b9dbb4e1a730","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[742],"tindex":"a7952311-2ea1-11e6-a83b-d14b665b3f29","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[564],"tindex":"a7954a22-2ea1-11e6-a83b-9f671dcd0df2","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"a7954a23-2ea1-11e6-a83b-e78f4bc93485","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759],"tindex":"a7957134-2ea1-11e6-a83b-97fc7f6eb90d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1018","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779],"tindex":"a7957135-2ea1-11e6-a83b-55ba57922890","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[780,781,782,783,784,723,785],"tindex":"a7957136-2ea1-11e6-a83b-23bfd8afc656","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"a7959847-2ea1-11e6-a83b-abd239507c1c","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"a7959848-2ea1-11e6-a83b-21fdbed37734","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[786,787,788,789,790,791,792,793,794,795,796,797],"tindex":"a795bf59-2ea1-11e6-a83b-550a8eb55c5d","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[798,799,800,801,802,803,804,805,806,807,730,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,731,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,792,793,918,919,794,920,795,921,922,796,797,923],"tindex":"a795e66a-2ea1-11e6-a83b-639064d25e59","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"a796d0cb-2ea1-11e6-a83b-d358a59752a8","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (comparator == null) {\n        {\n            setComparator(index, comparator, false);\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"a796d0cc-2ea1-11e6-a83b-ed3bfbf4a2b4","method":{"position":"org.apache.commons.collections4.comparators.NullComparator:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if (obj == (org.apache.commons.collections4.comparators.NullComparator.this)) {\n                return true;\n            } \n            if (!(obj.getClass().equals(org.apache.commons.collections4.comparators.NullComparator.this.getClass()))) {\n                return false;\n            } \n            final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(obj));\n            return ((org.apache.commons.collections4.comparators.NullComparator.this.boolean) == (other.boolean)) && (org.apache.commons.collections4.comparators.NullComparator.this.java.util.Comparator<? super E>.equals(other.java.util.Comparator<? super ?>));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"a796f7dd-2ea1-11e6-a83b-31e1fa7208b0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[924,925],"tindex":"a796f7de-2ea1-11e6-a83b-dd88e2eacc4a","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[926],"tindex":"a796f7df-2ea1-11e6-a83b-534eeff35029","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[430,435],"tindex":"a7979420-2ea1-11e6-a83b-4b3297d5c0cf","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"a7979421-2ea1-11e6-a83b-87ded38cd890","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"a7979422-2ea1-11e6-a83b-399e9706600c","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[355,927,384,928],"tindex":"a797bb33-2ea1-11e6-a83b-bfa78ecc7647","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final boolean boolean = decorated().remove(object);\n                    if (result) {\n                        java.util.List<E>.remove(object);\n                    } \n                    return result;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"a797bb34-2ea1-11e6-a83b-8d99ab73f61e","method":{"position":"org.apache.commons.collections4.BagUtils:180","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(bag);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[929,930,931,932,933,934,935,936,937,938,939,940],"tindex":"a7980955-2ea1-11e6-a83b-33ed25f6c297","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[941],"tindex":"a7983066-2ea1-11e6-a83b-9bc08aa67eab","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"a7985777-2ea1-11e6-a83b-37d563aca410","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[743],"tindex":"a7985778-2ea1-11e6-a83b-63f3f2af0b1b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"a7985779-2ea1-11e6-a83b-37ecf8e6e8e3","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Collection<?>) {\n                {\n                    return decorated().contains(object);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"a7987e8a-2ea1-11e6-a83b-83a4cf9cf71c","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            if ((key == null) || (bitIndex >= bitIndex)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((key == null) || (bitIndex >= lengthInBits)) {\n                        return false;\n                    } \n                    final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                    final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                    return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"a7987e8b-2ea1-11e6-a83b-ebdeb7e885cd","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[942,943],"tindex":"a7987e8c-2ea1-11e6-a83b-d5d112e705e3","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 1) {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[326,944,561,945],"tindex":"a798a59d-2ea1-11e6-a83b-43aab3ad5e14","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[946],"tindex":"a798a59e-2ea1-11e6-a83b-315eb3d37a4a","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"a798a59f-2ea1-11e6-a83b-eb780d2a2db8","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"a798ccb0-2ea1-11e6-a83b-21190d413072","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988],"tindex":"a798ccb1-2ea1-11e6-a83b-258d09c3dc6f","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[989],"tindex":"a798ccb2-2ea1-11e6-a83b-a7fa09d1e641","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"a798f3c3-2ea1-11e6-a83b-1f4a6f7ba4c7","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[990],"tindex":"a7991ad4-2ea1-11e6-a83b-a304c5b7eeb9","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"a7991ad5-2ea1-11e6-a83b-bf5978f5875d","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009],"tindex":"a7991ad6-2ea1-11e6-a83b-a73b6cc157c8","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,703,1020,1021,1022,1023,839,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,980,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,901,1051,990,1052,1053,1054,1055,1056,1057,1058,1059,1060,73,1061,1062,1063,1064,1065,74,1066,1067,1068,75,76,1069,1070,1071,1072,1073,1074,1075],"tindex":"a79941e7-2ea1-11e6-a83b-331532a4c6e1","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"a79941e8-2ea1-11e6-a83b-f7622938281b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"a79941e9-2ea1-11e6-a83b-ffa5f887303d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (null == object) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final boolean boolean = decorated().remove(object);\n                    if (result) {\n                        java.util.List<E>.remove(object);\n                    } \n                    return result;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"a79968fa-2ea1-11e6-a83b-7dd68b4316e2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[803,808,809,810,826,833,834,836,839,840,843,844,845,846,847,850,855,857,860,861,863,864,865,866,870,871,872,888,895,896,898,901,902,905,906,907,908,909],"tindex":"a79968fb-2ea1-11e6-a83b-e1cd371e4854","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((entry.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[77,78,79,80],"tindex":"a799900c-2ea1-11e6-a83b-c318affc9677","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"a799900d-2ea1-11e6-a83b-e12521f3f35c","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (null == object) {\n                {\n                    return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1076],"tindex":"a799900e-2ea1-11e6-a83b-9b56387cf37e","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"a799900f-2ea1-11e6-a83b-2354281b27b0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"a799b720-2ea1-11e6-a83b-19d782d9dbf5","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"a799b721-2ea1-11e6-a83b-bd64beaf6322","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[],"tindex":"a799b722-2ea1-11e6-a83b-b5c79ad5b0be","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection.size()) > 0) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[1077,1078],"tindex":"a799b723-2ea1-11e6-a83b-796a17cb174b","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[745],"tindex":"a799de34-2ea1-11e6-a83b-6f8b0e0b6c6c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[743,1079,1080,1081,1082],"tindex":"a799de35-2ea1-11e6-a83b-894214a5b381","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100],"tindex":"a799de36-2ea1-11e6-a83b-f748f746c55d","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[1101,1102,1103,1104,1105,1106,1107,1108,743,1109,744,745,1110,1080,1081,1079,1111,1112,1113,1114,746,1115,1116,1117,1118,1119,1120,747,1121,1122,1123,1082,1124,1125,1126,1127,1128,1129,748,749,750,1130,1131,1132,1013,751,1133,1134,752,753,754,755,756,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,757,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,234,235,236,237,497,498,1014,1162,499,500,1163,1164,758,759,1165],"tindex":"a79a2c57-2ea1-11e6-a83b-1b6ff24dfafb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[1166],"tindex":"a79a5368-2ea1-11e6-a83b-6f931738b964","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"a79a5369-2ea1-11e6-a83b-09e964665460","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[1167],"tindex":"a79a536a-2ea1-11e6-a83b-f3d43789e314","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}