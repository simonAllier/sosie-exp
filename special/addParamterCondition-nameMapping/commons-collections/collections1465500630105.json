{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":244,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":245,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":243,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":93,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":13,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":81,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":219,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":231,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":26,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":22,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":188,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":86,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":266,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":275,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":56,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":288,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":60,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":59,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":174,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":180,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":24,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":238,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":104,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":216,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":55,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":172,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":251,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":246,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":253,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":99,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":252,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":64,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":40,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":16,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":250,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":150,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":0,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":272,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":282,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":156,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":225,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":141,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":131,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":276,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":273,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":145,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":193,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":226,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":274,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":58,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":57,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":175,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":291,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":164,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":78,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":135,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":194,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":184,"org.apache.commons.collections4.CollectionUtilsTest.transform1":94,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":278,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":113,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":100,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":14,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":121,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":89,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":177,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":122,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":206,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":262,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":213,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":260,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":152,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":136,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":112,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":147,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":87,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":116,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":110,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":277,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":132,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":48,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":281,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":178,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":162,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":46,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":47,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":204,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":163,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":154,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":258,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":146,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":196,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":53,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":199,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":248,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":207,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":5,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":108,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":114,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":144,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":68,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":97,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":158,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":190,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":287,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":63,"org.apache.commons.collections4.list.TreeListTest.testBug35258":12,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":292,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":96,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":79,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":134,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":149,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":120,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":143,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":139,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":3,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":82,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":205,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":255,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":234,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":221,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":233,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":38,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":117,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":294,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":202,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":84,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":208,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":11,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":267,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":21,"org.apache.commons.collections4.list.TreeListTest.testRemove":9,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":83,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":187,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":90,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":72,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":198,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":91,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":41,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":28,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":151,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":211,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":259,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":189,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":240,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":160,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":42,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":265,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":212,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":220,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":52,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":171,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":105,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":49,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":107,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":229,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":269,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":232,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":218,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":155,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":176,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":185,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":191,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":98,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":69,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":115,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":235,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":242,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":157,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":43,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":67,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":261,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":95,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":125,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":101,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":173,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":130,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":103,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":124,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":35,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":50,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":236,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":279,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":111,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":264,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":293,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":270,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":228,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":256,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":268,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":129,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":167,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":106,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":239,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":118,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":74,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":182,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":271,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":102,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":217,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":80,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":4,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":138,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":137,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":66,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":224,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":148,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":227,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":133,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":166,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":18,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":33,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":286,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":127,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":195,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":165,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":15,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":181,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":7},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[0,1,2,3,4,5],"tindex":"a0483a30-2e78-11e6-be89-cda1cd5e8d9b","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtFieldReadImpl","sourcecode":"nextObjectSet"},"failures":[],"tindex":"a048fd81-2e78-11e6-be89-a31008c76992","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (fromInclusive) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"fromInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[6],"tindex":"a0492492-2e78-11e6-be89-1914972e7bfa","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[7,8],"tindex":"a0494ba3-2e78-11e6-be89-b9b7a0d038b8","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"a04a5d14-2e78-11e6-be89-038e005f8fe9","method":{"position":"org.apache.commons.collections4.list.TreeList:781","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> previous) {\n    if (node == null) {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? previous : node;\n            recalcHeight();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[29],"tindex":"a04a8425-2e78-11e6-be89-39dab6ad9580","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"a04aab36-2e78-11e6-be89-658c896d5793","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if (b instanceof java.lang.String) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtBinaryOperatorImpl","sourcecode":"(pos != (-1)) && (pos != index)"},"failures":[],"tindex":"a04aab37-2e78-11e6-be89-a5e1bf7d1fac","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if ((index != (-1)) && (pos != index)) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtInvocationImpl","sourcecode":"currentNode.isRightChild(dataElement)"},"failures":[68,69,70,71,72,73,74,75,76,77],"tindex":"a04ad248-2e78-11e6-be89-b5930e62cbab","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node.isRightChild(dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[],"tindex":"a04ad249-2e78-11e6-be89-c56d78777c46","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:587","type":"CtMethodImpl","sourcecode":"protected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(subList , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[78],"tindex":"a04ad24a-2e78-11e6-be89-7be22ff24e78","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:299","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[79,80,81,82,83],"tindex":"a04af95b-2e78-11e6-be89-0f0d8dee3bdd","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[84],"tindex":"a04af95c-2e78-11e6-be89-0b19add6c4ad","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"a04b206d-2e78-11e6-be89-a79ab8b47c78","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[85,85,86,87,87,88,89,90,91,92,93],"tindex":"a04b206e-2e78-11e6-be89-31b05dd46458","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"a04b477f-2e78-11e6-be89-a7f91cfc872a","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (transformer != null)"},"failures":[94],"tindex":"a04b4780-2e78-11e6-be89-a14e5efdefa6","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[95,96],"tindex":"a04b4781-2e78-11e6-be89-058fd7692b0a","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[97,98,99],"tindex":"a04b6e92-2e78-11e6-be89-6dfda94bdc05","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[100],"tindex":"a04b6e93-2e78-11e6-be89-ad93ab7c234b","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[101],"tindex":"a04b95a4-2e78-11e6-be89-3bf0391aa2a2","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0"},"failures":[],"tindex":"a04ca715-2e78-11e6-be89-4dce0beee067","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(set, set).size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","existingSet":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"a04cce26-2e78-11e6-be89-85dcd6686b8a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"a04cce27-2e78-11e6-be89-459b0643eae3","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"object","position2":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"tindex":"a04cf538-2e78-11e6-be89-6189bd78505e","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[291],"tindex":"a04cf539-2e78-11e6-be89-cd4cc3ba5cb3","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[292],"tindex":"a04d1c4a-2e78-11e6-be89-5b8a2f84a864","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if ((list.isEmpty()) && (list.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"list","pendingInsertions":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"a04d1c4b-2e78-11e6-be89-277f072c239e","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final K K : mapToCopy.keySet()) {\n                if (!(containsKey(key))) {\n                    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n                } \n            }\n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"a04d435c-2e78-11e6-be89-f5cf595c6641","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"a04d435d-2e78-11e6-be89-2de0f4b2a99c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            _putAll(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"a04d6a6e-2e78-11e6-be89-97ea305350dc","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"a04ea2ef-2e78-11e6-be89-53efcdbb7b9e","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"a0500280-2e78-11e6-be89-31bb41525fc7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:158","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[293,294],"tindex":"a0500281-2e78-11e6-be89-47ec33f68294","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Double) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":34,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}