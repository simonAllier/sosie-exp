{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":461,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":638,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":1298,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":652,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":1290,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":859,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":1001,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":1255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":1086,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":218,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":684,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":70,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":1393,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":189,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":1285,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":739,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":1386,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":627,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":467,"org.apache.commons.collections4.CollectionUtilsTest.collect":273,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":313,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":1200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":1240,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":254,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":923,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":237,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":1022,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":946,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":1046,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":492,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":633,"org.apache.commons.collections4.CollectionUtilsTest.get":246,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":740,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":1184,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":585,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":811,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":495,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":1193,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":1391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":1367,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":770,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":1167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":1073,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":1065,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":465,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":1051,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":486,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":1264,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":917,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":1212,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":484,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":140,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":1143,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":888,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":388,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":1281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":1010,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":1334,"org.apache.commons.collections4.CollectionUtilsTest.select":228,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":271,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":1293,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":287,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":482,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":516,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":559,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":1038,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":817,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":662,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":604,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":949,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":981,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":987,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":536,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":1047,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":709,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":687,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":742,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":342,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":836,"org.apache.commons.collections4.list.GrowthListTest.testObjectHashCodeEqualsContract":849,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":809,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":407,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":606,"org.apache.commons.collections4.CollectionUtilsTest.intersection":252,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":361,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":619,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":1333,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":597,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":590,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":979,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":472,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":573,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":339,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":517,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":992,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":432,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":993,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":260,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":325,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":725,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":442,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":673,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":916,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":799,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":123,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":389,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":1344,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":462,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":804,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":295,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":629,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":129,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":1199,"org.apache.commons.collections4.map.CompositeMapTest.testPut":312,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":611,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":494,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":126,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":900,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":1016,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":79,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":958,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":851,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":1182,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":1373,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":1121,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":394,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":1155,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":581,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":896,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":1076,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":257,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":1233,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":1237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":1234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":1235,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":895,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":363,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":1388,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":1097,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":357,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":824,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":600,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":1159,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":50,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":838,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":113,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":860,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":626,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":422,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":423,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":421,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":1011,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":1049,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":1152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":1217,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":1139,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":880,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":46,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":387,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":712,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":1243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":479,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":1028,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":274,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":1140,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":168,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":1120,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":225,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":262,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":391,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":318,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":1173,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":1268,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":1060,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":1214,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":213,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":779,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":384,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":990,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":15,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":954,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":369,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":574,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":243,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":726,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":666,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":780,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":108,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":575,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":906,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":974,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":1305,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":786,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":898,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":374,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":1203,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":505,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":471,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":685,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":263,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":731,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":903,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":1068,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":947,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":695,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":1132,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":378,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":1288,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":1337,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":202,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":797,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":1058,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":1384,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":548,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":1101,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":1326,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":195,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":1144,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":1145,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":744,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":1146,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":426,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSimpleSerialization":594,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":588,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":902,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":166,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":556,"org.apache.commons.collections4.CollectionUtilsTest.get1":248,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":746,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":94,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":232,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":852,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":196,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":622,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":1170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":493,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":649,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":488,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":297,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":822,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":960,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":681,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":996,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":677,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":1265,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":290,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":1002,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":1289,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":1027,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":386,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":1275,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":680,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":870,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":1308,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":1169,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":409,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":1147,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":828,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":458,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":732,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":1106,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":911,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":120,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":924,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":179,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":184,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":889,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":1115,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":1083,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":1111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":430,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":205,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":1137,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":754,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":1231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":460,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":784,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":1020,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":955,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":671,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":1026,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":424,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":1025,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":878,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":1364,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":250,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":640,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":564,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":741,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":170,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":148,"org.apache.commons.collections4.CollectionUtilsTest.exists":220,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":767,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":795,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":660,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":982,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":107,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":214,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":887,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":1374,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":572,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":584,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":1190,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":455,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":1036,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":1107,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":936,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":1050,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":899,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":149,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":309,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":1257,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":1045,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":728,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":420,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":1239,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":1177,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":832,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":535,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":751,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":776,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":1131,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":1130,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":1129,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":55,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":1258,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":670,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":868,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":865,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":855,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":1254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":408,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":907,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":720,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":1,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":1363,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":186,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":546,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":962,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":1138,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":1331,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":1222,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":27,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":773,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":1332,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":708,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":32,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":645,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":802,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":805,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":332,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":1273,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":1315,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":24,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":867,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":217,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":893,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":703,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":403,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":846,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":1136,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":404,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":908,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":405,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":1370,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":169,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":1343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":1223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":444,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":348,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":821,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":1216,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":750,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":1044,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":563,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":926,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":747,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":1230,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":1322,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":617,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":1287,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":1018,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":522,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":226,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":1259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":1361,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":1319,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":910,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":1072,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":89,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":329,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":544,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":820,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":539,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":209,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":840,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":1077,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":1122,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":605,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":874,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":768,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":317,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":464,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":1035,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":244,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":672,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":997,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":1059,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":675,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":1067,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":1081,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":1390,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":705,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":1299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":491,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":1336,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":1162,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":301,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":51,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":125,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":156,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":827,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":1043,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":200,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":114,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":540,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":1091,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":1013,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":847,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":44,"org.apache.commons.collections4.ListUtilsTest.testSelect":300,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":367,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":102,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":815,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":292,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":558,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":146,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":876,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":1053,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":1000,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":576,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":618,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":879,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":283,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":453,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":1228,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":270,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":1055,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":1023,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":1054,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":983,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":1381,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":819,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":78,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":178,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":1156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":504,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":735,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":1202,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectHashCodeEqualsContract":722,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":199,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":160,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":697,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":711,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":1066,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":1142,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":1365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":377,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":1185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":676,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":837,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":499,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":1007,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":1382,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":956,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":1048,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":447,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":914,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":446,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":566,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":637,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":1350,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":668,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":806,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":163,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":137,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":525,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":1163,"org.apache.commons.collections4.CollectionUtilsTest.find":247,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":620,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":1209,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":843,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":1368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":589,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":506,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":551,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":1157,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":781,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":116,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":830,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":927,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":1075,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":965,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":734,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":562,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":1380,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":794,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":1379,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":761,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":1378,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":249,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":1313,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":1294,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":882,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":1166,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":515,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":1071,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":418,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":783,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":1269,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":995,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":1277,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":729,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":547,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":1037,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":222,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":755,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":557,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":1208,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":1070,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":344,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":1074,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":555,"org.apache.commons.collections4.map.LRUMapTest.testLRU":1014,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":892,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":296,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":939,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":810,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":612,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":1078,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":791,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":428,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":577,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":578,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":1151,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":579,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":969,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":1346,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":628,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":669,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":748,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":23,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":953,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":655,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":531,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":161,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":410,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":796,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":39,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":845,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":463,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":1197,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":833,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":451,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEmptyMapCompatibility":570,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":1019,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":234,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":1148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":441,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":714,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":692,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":375,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":775,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":1196,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":371,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":99,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":1201,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":1024,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":1141,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":973,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":1232,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":621,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":34,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":302,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":72,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":532,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":966,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":419,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":568,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":691,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":1041,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":1286,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":373,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":1325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":977,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":1105,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":280,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":1108,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":1354,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":994,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":69,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":782,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":1338,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":241,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":560,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":207,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":192,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":510,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":324,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":474,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":266,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":886,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":1063,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":182,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":412,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":530,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":721,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":835,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":435,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":723,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":470,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":1358,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":208,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":267,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":834,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":111,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":417,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":1317,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":397,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":1128,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":185,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":216,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":63,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":1304,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":567,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":659,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":682,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":1123,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":863,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":402,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":1359,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":812,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":715,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":5,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":188,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":663,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":630,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":1274,"org.apache.commons.collections4.CollectionUtilsTest.transform2":211,"org.apache.commons.collections4.CollectionUtilsTest.transform1":210,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":1172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":490,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":1079,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":1340,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":279,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":379,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":989,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":706,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":766,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":931,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":1118,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":764,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":438,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":884,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":978,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":437,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":928,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":193,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":818,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":826,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":9,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":171,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectHashCodeEqualsContract":759,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":36,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":1029,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":1242,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":368,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":798,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":66,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":219,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":352,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":206,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":1303,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":688,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":749,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":968,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":1112,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":1394,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":415,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":340,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":639,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":1249,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":778,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":459,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":1096,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":88,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":609,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":665,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":1181,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":191,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":337,"org.apache.commons.collections4.map.CompositeMapTest.testGet":311,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":1389,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":457,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":1282,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":1342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":1383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":975,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":1360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":508,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":1149,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":1278,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":918,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":613,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":1310,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":1236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":976,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":258,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":1124,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":999,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":1093,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":537,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":1102,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":144,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":777,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":1103,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":224,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":1104,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":1267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":1372,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":511,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":1134,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":736,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":610,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":1194,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":350,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":98,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":1306,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":569,"org.apache.commons.collections4.CollectionUtilsTest.union":251,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":580,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":8,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":765,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":565,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":1034,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":1280,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":475,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":853,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":1215,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":763,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":1012,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":469,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":533,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":1158,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":872,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":1328,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":436,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":82,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":538,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":1276,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":625,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":1263,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":527,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":466,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":509,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":905,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":1366,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":1062,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":1061,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":291,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":869,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":4,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":991,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":1229,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":861,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":130,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":937,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":1347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":971,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":1244,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":550,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":81,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":1251,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":96,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":476,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":591,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":343,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":717,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":771,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":1179,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":710,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":1031,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":122,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":636,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":33,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":1100,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":1004,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":1069,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":364,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":807,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":915,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":1189,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":1154,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":1187,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":789,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":1021,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":1188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":396,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":1064,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":1348,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":1339,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":56,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":823,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":904,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":957,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":110,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":240,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":239,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":921,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":948,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":1042,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":964,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":1324,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":261,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSerializeDeserializeThenCompare":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":434,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":1335,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":1135,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":972,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":93,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":583,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":608,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":661,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":1330,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":678,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":813,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":942,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":294,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":758,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":1261,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":642,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":803,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":945,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":1052,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":323,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":719,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":857,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":1297,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":25,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":293,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":275,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":553,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":10,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":1272,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":1030,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":118,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":1085,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":17,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":561,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":1349,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":762,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":848,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":269,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":356,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":952,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectHashCodeEqualsContract":938,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":690,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":1311,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":825,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalEmptyCollectionExists":595,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":877,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":635,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":934,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":42,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":1385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":481,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":883,"org.apache.commons.collections4.CollectionUtilsTest.filter":221,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":1171,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":1309,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":315,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":829,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":1126,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":1204,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":844,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":1191,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":752,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":930,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":1110,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":203,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":922,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":656,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":875,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":897,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":1300,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":587,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":1198,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":1033,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":1165,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":961,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":1205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":399,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":433,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":1356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":400,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":950,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":598,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":693,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":84,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":304,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":1117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":1226,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":738,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":801,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":1087,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":1088,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":1352,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":543,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":984,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":1089,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":3,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":603,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":871,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":272,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":745,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":95,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":518,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":940,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":519,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":520,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":988,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":814,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":454,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":117,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":194,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":929,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":970,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":1040,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":1316,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":1039,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":382,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1387,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":136,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":1109,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":727,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":986,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":1238,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":278,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":1225,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalFullCollectionExists":596,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":60,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":554,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":1009,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":1271,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":913,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":1150,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":1241,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":212,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":689,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":998,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":943,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":215,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":1355,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":582,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":259,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":1266,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":1005,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":316,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":1006,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":1178,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":873,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":980,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":1221,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":307,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":524,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":615,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":696,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":1283,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":54,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":1314,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":183,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":19,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":925,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":1341,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":1253,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":800,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":131,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":427,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":528,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":162,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":1207,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":1032,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":67,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":694,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":1125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":1224,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":365,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":1256,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectHashCodeEqualsContract":724,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":256,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":91,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":1057,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":100,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":101,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":227,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":920,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":1084,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":1114,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":1192,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":483,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":841,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":894,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":890,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":933,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":64,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":281,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":1168,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":1180,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":941,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":1080,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":1250,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":1270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":40,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":592,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":22,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":413,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":647,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":1160,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":901,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":1098,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":238,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":153,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":1017,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":1296,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":1248,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":265,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":679,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":1247,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":1116,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":507,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":48,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":646,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":716,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":521,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":1127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":487,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":242,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":788,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":1090,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":105,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":850,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":1357,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":1213,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":1246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":1371,"org.apache.commons.collections4.set.CompositeSetTest.testContains":305,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":299,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":1153,"org.apache.commons.collections4.CollectionUtilsTest.isFull":223,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":346,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":856,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":967,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":1164,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":277,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":414,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":1252,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":1318,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":1292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":1307,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":245,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":1218,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":190,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":644,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":1262,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":686,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":289,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":330,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":935,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":1095,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":35,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":1082,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":145,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":891,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":127,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":790,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":760,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":512,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":513,"org.apache.commons.collections4.CollectionUtilsTest.reverse":276,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":440,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":514,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":549,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":1227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":502,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":1369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":498,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":347,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":698,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":699,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":26,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":653,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":328,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":545,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":526,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":772,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":177,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":792,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":1174,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":1245,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":1176,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":1175,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":159,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":743,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":372,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":370,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":1008,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":1329,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":1353,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":753,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":385,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":1312,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":683,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":80,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":151,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":912,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":787,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":503,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":623,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":701,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":534,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":1323,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":31,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":12,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":909,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":1092,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":1295,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":416,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":667,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":831,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":298,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":128,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":793,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":951,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":985,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":288,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":881,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":839,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":1362,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":1094,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":393,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":1211,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":885,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":1375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":1376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":1377,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":362,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":1395,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":473,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":353,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":756,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":842,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":1302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":1219,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":541,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":1321,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":1327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":431,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":1291,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":165,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":858,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":769,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":1161,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":648,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":718,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":1133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":43,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":599,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":1220,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":733,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":737,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":862,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":1206,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":1345,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":808,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":959,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":366,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":1003,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":1301,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":62,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":319,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":1015,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":1320,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":1260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":443,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":1195,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":1392,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":1351,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":866,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":204,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":359,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":944,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":1279,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":1099,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":1210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":1113,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":1119,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":1056,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":864,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":6,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":97,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":634,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":1186,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":1183,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":631,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":1284,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":552,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":963,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":704,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":602,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":707,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":816,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":2,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":854,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":49,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":919,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":529,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":932,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":112},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1,2,3],"tindex":"b6097ba8-3e4c-11e6-a200-19ce8a205162","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[4,5],"tindex":"b609c9c9-3e4c-11e6-a200-694d96708dcf","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[6,7,8,9,10],"tindex":"b609f0da-3e4c-11e6-a200-ad48340d0d47","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b609f0db-3e4c-11e6-a200-77e573d269cd","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"b609f0dc-3e4c-11e6-a200-270f6732c10c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Map) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = getHash(obj);\n                    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                        for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                            final java.lang.Object java.lang.Object = n.getKey();\n                            if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                                org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                                return true;\n                            } \n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[11,12,13,14,15,16,17,18,19,20],"tindex":"b60a17ed-3e4c-11e6-a200-87d36bc585b5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[21,22],"tindex":"b60a17ee-3e4c-11e6-a200-3d7f1d1f3609","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"b60a3eff-3e4c-11e6-a200-534b2b3b91df","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[172,173,174,175,176,177,14,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,60,329,330,331,332,333,334,335,90,336,102,103,337,105,106,107,108,110,111,112,113,338,339,340,341,342,343,344,345,346,116,347,348,349,350,351,352,353,354,355,356,124,147,357,358,359,360,361,362,363,156,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,161,379,380,381,382,383,384,385,386,387,388,389,390,391,171,392],"tindex":"b60a3f00-3e4c-11e6-a200-69318953381d","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429],"tindex":"b60a6611-3e4c-11e6-a200-6d886cbd1e3f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtBinaryOperatorImpl","sourcecode":"c == null"},"failures":[240],"tindex":"b60a6612-3e4c-11e6-a200-cf75f7f12eca","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (c == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"b60a8d23-3e4c-11e6-a200-a76f9dce6287","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        {\n            if (entry == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    try {\n                        final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                        while ((loop != entry) && (loop != null)) {\n                            previous = loop;\n                            loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                        }\n                        if (loop == null) {\n                            throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                        } \n                        (int)++;\n                        removeEntry(entry, removeIndex, previous);\n                        reuseEntry(entry, hashIndex, hashCode, key, value);\n                        addEntry(entry, hashIndex);\n                    } catch (final java.lang.NullPointerException ex) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[430,431,432,433,434,435,11,436,12,437,438,439,440,441,442,443,444,445,446,447,448],"tindex":"b60a8d24-3e4c-11e6-a200-a78f8f3edf5a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1533","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            return (node != null) && (node.getValue().equals(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b60ab435-3e4c-11e6-a200-fd7b2ef9902e","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"b60ab436-3e4c-11e6-a200-4fa4160f8e68","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[449],"tindex":"b60ab437-3e4c-11e6-a200-19f6768ec7a9","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,430,431,467,432,433,434,468,469,435,470,11,471,472,436,12,473,474,475,437,438,439,476,477,478,13,479,480,14,15,481,482,16,17,18,19,20,483,484,485,486,487,488,41,42,43,489,490,40,491,492,440,441,493,442,443,444,44,494,445,495,496,497,498,499,446,447,448,500,501,502,179,503,504,505,506,507,45,46,508],"tindex":"b60ab438-3e4c-11e6-a200-6d536d8dbbd6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[509,510,511,512,513,514,335,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555],"tindex":"b60adb49-3e4c-11e6-a200-8d993e96369d","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b60adb4a-3e4c-11e6-a200-216cf845cc1f","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b60adb4b-3e4c-11e6-a200-159525802574","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[556,557,24,25,26,558,559,23,560,561,562,563,564,565,566,567,27,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,175,583,584,585,586,587,28,29,588,589,590,591,592,593,594,595,596],"tindex":"b60adb4c-3e4c-11e6-a200-ab626ff8b2ff","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"b60adb4d-3e4c-11e6-a200-5f8392f91d69","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"b60b025e-3e4c-11e6-a200-6d7c50853d46","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[597,598,599,600],"tindex":"b60b025f-3e4c-11e6-a200-dfed964b21dd","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[601],"tindex":"b60b0260-3e4c-11e6-a200-8b16c1feaad7","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b60b0261-3e4c-11e6-a200-557f6207f408","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b60b0262-3e4c-11e6-a200-7b69e1aa696e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686],"tindex":"b60b0263-3e4c-11e6-a200-334e0a362567","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[687],"tindex":"b60b7794-3e4c-11e6-a200-b55a4227d30c","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[],"tindex":"b60b7795-3e4c-11e6-a200-8d4bf00b0577","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[688,689,690,691],"tindex":"b60b7796-3e4c-11e6-a200-bfa434735529","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[203],"tindex":"b60b7797-3e4c-11e6-a200-b5c5b3a39022","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input != null) {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"b60b7798-3e4c-11e6-a200-932c0c49df26","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b60b9ea9-3e4c-11e6-a200-b16d2bfd9c12","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"b60b9eaa-3e4c-11e6-a200-5953dbde18f1","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"b60b9eab-3e4c-11e6-a200-458dacf3c969","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[51],"tindex":"b60b9eac-3e4c-11e6-a200-1358e76320f7","method":{"position":"org.apache.commons.collections4.MapUtils:1772","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(final java.util.SortedMap<K, V> sortedMap) {\n    if (sortedMap == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sortedMap == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return sortedMap instanceof org.apache.commons.collections4.IterableSortedMap ? ((org.apache.commons.collections4.IterableSortedMap<K, V>)(sortedMap)) : new org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>(sortedMap) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"sortedMap"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[692,692,693,694,694,695,696,697,698,699,700],"tindex":"b60b9ead-3e4c-11e6-a200-6f61754abb07","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"b60bc5be-3e4c-11e6-a200-df6275026e3d","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[581,582,584,585,701,702,703,704,705,706,707,708,709,710,711,712,501,502,504,505,713,714,715,716,717,718,719,720,721,722,723,724,195,200,725,726,727,728,233,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,1,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,617,618,635,640,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,103,951,111,952,339,953,346,954,367,368,955,956,371,957,378,958,384,959,391,960],"tindex":"b60bc5bf-3e4c-11e6-a200-bf6fe6d46eb5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[961],"tindex":"b60bc5c0-3e4c-11e6-a200-0781c1fc5284","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[460,15],"tindex":"b60bebd1-3e4c-11e6-a200-518c89c2101d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[784],"tindex":"b60bebd2-3e4c-11e6-a200-15bb756b49b7","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,309,978,979,980,981,982,983,984,985,986,398,402,403,404,987,310,406,407,408,409,410,411,988,989,990,991,992,993,994,320,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,331,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,333,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,334,1042,1043,1044,1045,1046,1047,1048,1049,1050,420,421,422,1051,357,424,425,426,427,428,429,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,382,1064,1065,1066,167,168,1067],"tindex":"b60bebd3-3e4c-11e6-a200-57accb3a667b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"b60bebd4-3e4c-11e6-a200-db2c5fb170e5","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b60bebd5-3e4c-11e6-a200-0f1e6af43099","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[565,28,29,30,31,32,1068,38,39,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153],"tindex":"b60c12e6-3e4c-11e6-a200-9ba7aa03e81c","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.util.Map<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"b60c12e7-3e4c-11e6-a200-ff173fae3a61","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Map) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = getHash(obj);\n                    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                        for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                            final java.lang.Object java.lang.Object = n.getKey();\n                            if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                                org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                                return true;\n                            } \n                        }\n                    }\n                    return false;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1154],"tindex":"b60c12e8-3e4c-11e6-a200-b1adf2f4546a","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[1155,1156,1157,1158,1159,1160,1161,1162],"tindex":"b60c12e9-3e4c-11e6-a200-8b00ec4b031d","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1163],"tindex":"b60c39fa-3e4c-11e6-a200-0712a17111a9","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[850,851,1164,853,854,1165,1166,1167,855,856,1168,857,1169,1170,858,859,860,1171,862,863,864,865,866,867,869,870,871,872,874],"tindex":"b60c39fb-3e4c-11e6-a200-c57a452ef729","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b60c39fc-3e4c-11e6-a200-590d73c70750","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[208,212,214,215,226,228,234,244,249,251,252,256,266,274,289,292,300,301,303,304,305,306,307,308,311,312,313,314,315,316,317,318],"tindex":"b60c39fd-3e4c-11e6-a200-d5accc49f67d","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"b60c39fe-3e4c-11e6-a200-bd607f51b101","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[],"tindex":"b60c39ff-3e4c-11e6-a200-9da7765f7eb9","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (equator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:125","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[1172],"tindex":"b60c6110-3e4c-11e6-a200-e39bc148d87f","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[314,315,316,317,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183],"tindex":"b60c6111-3e4c-11e6-a200-3fd5aa846af9","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1184,858,1185],"tindex":"b60c6112-3e4c-11e6-a200-814c9b6785cb","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"b60c6113-3e4c-11e6-a200-672fcfd889d3","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        {\n            if (entry == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    try {\n                        final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                        while ((loop != entry) && (loop != null)) {\n                            previous = loop;\n                            loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                        }\n                        if (loop == null) {\n                            throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                        } \n                        (int)++;\n                        removeEntry(entry, removeIndex, previous);\n                        reuseEntry(entry, hashIndex, hashCode, key, value);\n                        addEntry(entry, hashIndex);\n                    } catch (final java.lang.NullPointerException ex) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"b60c8824-3e4c-11e6-a200-b3ce97edee6d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b60caf35-3e4c-11e6-a200-b97e9595074d","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1186],"tindex":"b60caf36-3e4c-11e6-a200-9db57c458674","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[1187,1188,1189,338,1190,339,1191,340,114,1192,1193,1194,341,953,1195,342,1196,1197,1198,1199,343,344,115,345,346,1200,116,347,1154,348,954,1201,1202,1203,1204,1205,1206,1207,1208],"tindex":"b60caf37-3e4c-11e6-a200-2fea83178157","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"b60caf38-3e4c-11e6-a200-85571147d45a","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b60caf39-3e4c-11e6-a200-cf058cbb2a44","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"b60cd64a-3e4c-11e6-a200-03f38ac13848","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        {\n            if ((list1.size()) > (list1.size())) {\n                {\n                    return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[1209],"tindex":"b60cd64b-3e4c-11e6-a200-6d0581ec77e7","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map != null) {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1210,1211,1212,1213,1214,971,972,973,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,974,1230,1231,1232,1233,1234,1235,975,976,1236,977,1237,1238,309,978,1239,1240,979,980,981,982,983],"tindex":"b60cd64c-3e4c-11e6-a200-a9f31b43c479","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[1052],"tindex":"b60cd64d-3e4c-11e6-a200-830ad7d951b2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b60cfd5e-3e4c-11e6-a200-23d5180d24f2","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[430,431,432,433,434,435,11,436,12,440,441,442,443,444,445],"tindex":"b60cfd5f-3e4c-11e6-a200-c983e3d78491","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"b60cfd60-3e4c-11e6-a200-a7eb9b8ae495","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"b60cfd61-3e4c-11e6-a200-af12f5030d63","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[785],"tindex":"b60cfd62-3e4c-11e6-a200-0d23c3fb0358","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[254],"tindex":"b60d2473-3e4c-11e6-a200-dbe8aad1171b","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"b60d2474-3e4c-11e6-a200-555e467bcea2","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                {\n                    final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n                    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(set.toArray()));\n                        set.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"b60d2475-3e4c-11e6-a200-e5d7032dfa9e","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,737,1252,1253,1254,738,739,741,742,1255,743,1256,744,745,747,748,749,750,751,752,753,754,755,757],"tindex":"b60d2476-3e4c-11e6-a200-1fdc6301ae2d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if ((java.util.Set<E>.contains(object)) == false) {\n                super.add(index, object);\n                java.util.Set<E>.add(object);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[562,563,565,566,567,27,569,1257,1258,1068,1259,1260,37,1261,1084,1262,1263,1264,1085,1265,1266,1267,1268,1086,1269,1270,1099,1271,1272,1273,1100,1274,1275,1276,1277,1101,1278,1279,440,441,442,443,444,44,445,1126,1280,1281,1282,1127,1283,1284,1285,1286,1128,1287,1288,1141,1289,1290,1291,1142,1292,1293,1294,1295,1143,1296,1297,1298,1299,184,1300,1301,1302,1303,768,787,808,835,862,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,59,1323,1324,1325,324,325,326,327,328,60,329,1326,1327,1328,1329,1330,1331,1332,63,1333,1334,1335,105,106,107,108,110,112,113,341,342,343,344,345,116,347,348,1336,1337,1338,1339,1340,1341,153,1342,1343,1344,1345,359,360,361,362,363,156,364,365,373,374,375,376,377,161,379,1346,1347,1348,1349,1350,1351,1352,164,1353,1354,1355,386,387,388,389,390,171,392],"tindex":"b60d2477-3e4c-11e6-a200-e3458f9fd4e7","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"b60d4b88-3e4c-11e6-a200-6dd142354f24","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1211,1212,1222,981,982,1356,998,999,1357,1011,1012,1358,1045,1046,1359],"tindex":"b60d4b89-3e4c-11e6-a200-21197eeea49a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1360,1177],"tindex":"b60d4b8a-3e4c-11e6-a200-d377fad50220","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,172,1382,1383,1384,1385,1386,1387],"tindex":"b60d729b-3e4c-11e6-a200-0d9721c60ff1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[1388,1389],"tindex":"b60d729c-3e4c-11e6-a200-91ee0beb44dc","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[188],"tindex":"b60d729d-3e4c-11e6-a200-0bc163723307","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[68,69,88,89,103,111,145,146],"tindex":"b60d729e-3e4c-11e6-a200-1dc6d262d51c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"b60d729f-3e4c-11e6-a200-b989a64d1be7","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                {\n                    if (enumeration == null) {\n                        throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[1390,1391],"tindex":"b60d99b0-3e4c-11e6-a200-4dbfc585384c","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"b60d99b1-3e4c-11e6-a200-e3db90ac1823","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list2.size())) {\n        {\n            if ((list1.size()) > (list1.size())) {\n                {\n                    return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[87,144],"tindex":"b60d99b2-3e4c-11e6-a200-f1b3ac3f440b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"b60d99b3-3e4c-11e6-a200-e922cbc91176","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                {\n                    final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n                    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final E[] E[] = ((E[])(set.toArray()));\n                        set.clear();\n                        for (final E E : values) {\n                            decorated.decorated().add(transformer.transform(value));\n                        }\n                    } \n                    return decorated;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[],"tindex":"b60d99b4-3e4c-11e6-a200-913bb42be602","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1392],"tindex":"b60dc0c5-3e4c-11e6-a200-9deed1cc8407","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[1393],"tindex":"b60dc0c6-3e4c-11e6-a200-4b18b65fc7a5","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[239],"tindex":"b60dc0c7-3e4c-11e6-a200-8f7a8b70bb31","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"b60dc0c8-3e4c-11e6-a200-5922ce7e7cb8","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                {\n                    if (enumeration == null) {\n                        throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"b60de7d9-3e4c-11e6-a200-c911f9e05cd2","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"b60de7da-3e4c-11e6-a200-eb93729bc955","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[1394,1395],"tindex":"b60de7db-3e4c-11e6-a200-dd32e2f94d13","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237990294/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}