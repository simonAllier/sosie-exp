{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":29,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":672,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":661,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":162,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":584,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":226,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":260,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":470,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":710,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":490,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":347,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":607,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":286,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":404,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":544,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":589,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":381,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":473,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":309,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":518,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":480,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":37,"org.apache.commons.collections4.CollectionUtilsTest.collect":340,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":567,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":460,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":275,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":551,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSerializeDeserializeThenCompare":384,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":532,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":715,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":322,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":51,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":663,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":117,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":84,"org.apache.commons.collections4.CollectionUtilsTest.get":314,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":44,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":620,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":94,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":653,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":413,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":588,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":259,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":669,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":102,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":33,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":74,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":284,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":377,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":522,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":606,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":695,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":71,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":552,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":417,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":575,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":169,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":642,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":380,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":321,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":634,"org.apache.commons.collections4.CollectionUtilsTest.transform2":279,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":205,"org.apache.commons.collections4.CollectionUtilsTest.transform1":278,"org.apache.commons.collections4.CollectionUtilsTest.select":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":81,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":0,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":166,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":65,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":298,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":262,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":346,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":530,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":705,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":192,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":679,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":713,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":53,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":385,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":564,"org.apache.commons.collections4.CollectionUtilsTest.intersection":320,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":623,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":493,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":227,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":442,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":528,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToString":379,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":533,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":446,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":514,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRetainAll":501,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":574,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":173,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":176,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":234,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":235,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":483,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":236,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":328,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":88,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":430,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":560,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":225,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":258,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":439,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":689,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":447,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":362,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":671,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":27,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":626,"org.apache.commons.collections4.map.CompositeMapTest.testPut":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":543,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":222,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":383,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":407,"org.apache.commons.collections4.map.CompositeMapTest.testGet":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":250,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":113,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":45,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":349,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":251,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":565,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":326,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":325,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":711,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":249,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":397,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":495,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":627,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":122,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":292,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":598,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":537,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":415,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":239,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":481,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":157,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":112,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":693,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":151,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.CollectionUtilsTest.union":319,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":15,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":512,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":60,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":147,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":341,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":558,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":175,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":399,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":293,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":700,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":42,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":130,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":177,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":281,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":48,"org.apache.commons.collections4.list.TreeListTest.testRemove":7,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":664,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":369,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":63,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":153,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":502,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":311,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":16,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":569,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":34,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":118,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":411,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":134,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":246,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":186,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":358,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":506,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":245,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":108,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":46,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":185,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":697,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":515,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":58,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":450,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":475,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":505,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":198,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":270,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":497,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":651,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":583,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":592,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":638,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":387,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":429,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":666,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":524,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":538,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":120,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":509,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":655,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":433,"org.apache.commons.collections4.CollectionUtilsTest.get1":316,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":300,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":308,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":412,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":307,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalFullCollectionExists":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":87,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":329,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":688,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":155,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":76,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":40,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":591,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":600,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":357,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":691,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":546,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":436,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":635,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":573,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":554,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":26,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":432,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":376,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":619,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":171,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":143,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":360,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":342,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":273,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":529,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":631,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":677,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":180,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":257,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":676,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":28,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":160,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":556,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":337,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":487,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":220,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":219,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":218,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":690,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":318,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":478,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":78,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":351,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":618,"org.apache.commons.collections4.CollectionUtilsTest.exists":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":64,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":594,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":488,"org.apache.commons.collections4.CollectionUtilsTest.filter":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":706,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsSelfHashCode":393,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":410,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":462,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":282,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":461,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":255,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":4,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":23,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":114,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":424,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":271,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":508,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":596,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":431,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":123,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":548,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":6,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":208,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":504,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":303,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":39,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":479,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":654,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":613,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":714,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":244,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":511,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":687,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":448,"org.apache.commons.collections4.CollectionUtilsTest.addIgnoreNull":339,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":550,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":152,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":561,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":22,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":563,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":386,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":268,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":267,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":266,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":521,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":534,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":261,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":95,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":612,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":712,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":345,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":378,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":704,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":156,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":426,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":630,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":718,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":150,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":513,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":228,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":280,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":283,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":570,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":207,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":327,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":686,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":202,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":503,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":203,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":463,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":547,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":580,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":632,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":242,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":398,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":285,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":224,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":643,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnmodifiable":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":93,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":520,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":603,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":717,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":90,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":238,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":269,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":708,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":195,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":498,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":324,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":650,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":294,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":295,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":196,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":578,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":427,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":348,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":277,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":11,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":132,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":82,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":115,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":264,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":263,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":332,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":265,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":464,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":301,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":628,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":8,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":32,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":170,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":312,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":652,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":333,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":670,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":83,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":75,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":373,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":310,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":408,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":617,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":299,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":496,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":568,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectHashCodeEqualsContract":392,"org.apache.commons.collections4.set.CompositeSetTest.testContains":396,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":367,"org.apache.commons.collections4.CollectionUtilsTest.isFull":291,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":453,"org.apache.commons.collections4.list.TreeListTest.testBug35258":5,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":213,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":539,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":59,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":91,"org.apache.commons.collections4.ListUtilsTest.testSelect":372,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":119,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":406,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveAll":500,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":680,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":142,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":165,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":542,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":313,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":645,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":701,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":181,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":223,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":608,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":382,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":684,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":350,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":675,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":401,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":665,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":702,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":338,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":647,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":646,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":707,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":107,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":685,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":614,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":523,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":682,"org.apache.commons.collections4.CollectionUtilsTest.reverse":343,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":703,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":104,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testSimpleSerialization":391,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCanonicalEmptyCollectionExists":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":97,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":455,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":111,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":474,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":535,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":425,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":371,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":98,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":469,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":579,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":553,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":602,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":128,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":435,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":674,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":172,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":99,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":106,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":352,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":49,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":136,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":420,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":21,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":364,"org.apache.commons.collections4.CollectionUtilsTest.find":315,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":590,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":668,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":586,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":615,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":454,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":200,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":445,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":541,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":201,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":581,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":145,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":696,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":317,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":494,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":167,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":297,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":50,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":484,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":240,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":637,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":290,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":231,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":163,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":649,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":601,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":451,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":79,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":73,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":363,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":625,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":241,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":576,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":616,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":193,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":229,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":555,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":622,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":557,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":499,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":507,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":605,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":125,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":466,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":89,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":140,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":217,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":31,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":491,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":640,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":629,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":582,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":215,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":216,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":18,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":692,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":526,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":681,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":96,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":178,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":610,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":9,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":472,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":468,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":694,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":159,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":699,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":719,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":211,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":414},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eecfb4cf-3f4d-11e6-a45e-13eae20c5fca","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"eed02a00-3f4d-11e6-a45e-a7fa66205780","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed02a01-3f4d-11e6-a45e-1b4b882c39d6","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (count == 1) {\n        {\n            if (null == object) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[1],"tindex":"eed05112-3f4d-11e6-a45e-9de7848b77bd","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl"},"failures":[2],"tindex":"eed07823-3f4d-11e6-a45e-ab99f1e8c560","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[3],"tindex":"eed07824-3f4d-11e6-a45e-7b733127ff18","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[4],"tindex":"eed09f35-3f4d-11e6-a45e-e91be467f6e0","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed09f36-3f4d-11e6-a45e-63688f07f3af","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj instanceof org.w3c.dom.NodeList) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    if ((entryKey == null) || (entryValue == null)) {\n                        return false;\n                    } \n                    return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"eed0c647-3f4d-11e6-a45e-b9126b537191","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed0ed58-3f4d-11e6-a45e-79960ec93d10","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"eed11469-3f4d-11e6-a45e-8bd876951dfa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl"},"failures":[114,115,116,117,118,119,120,15,121],"tindex":"eed1146a-3f4d-11e6-a45e-9d1bda71cd85","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl"},"failures":[122],"tindex":"eed13b7b-3f4d-11e6-a45e-1377f4806ab9","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[123,124],"tindex":"eed13b7c-3f4d-11e6-a45e-8122261f45eb","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"eed1628d-3f4d-11e6-a45e-0b94b8c0b4f6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl"},"failures":[143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"eed1628e-3f4d-11e6-a45e-693013051456","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed1899f-3f4d-11e6-a45e-eb36f751b7db","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[172],"tindex":"eed189a0-3f4d-11e6-a45e-97bf1470430e","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[173],"tindex":"eed1b0b1-3f4d-11e6-a45e-971f9c9529a2","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed1b0b2-3f4d-11e6-a45e-d3c4f8e9b9e8","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"tindex":"eed1b0b3-3f4d-11e6-a45e-454fc6e7f683","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtBinaryOperatorImpl"},"failures":[270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,0,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,2,364,365,366,367,368,369,62,370,105,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"tindex":"eed1d7c4-3f4d-11e6-a45e-a72cc6461db4","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:54","type":"CtMethodImpl","sourcecode":"public static <T>java.util.Collection<T> unmodifiableCollection(final java.util.Collection<? extends T> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[506,507,508,509],"tindex":"eed1fed5-3f4d-11e6-a45e-ab83533aa1ba","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[510],"tindex":"eed1fed6-3f4d-11e6-a45e-156cd0facba6","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed1fed7-3f4d-11e6-a45e-715912c22643","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed225e8-3f4d-11e6-a45e-914d8026c994","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl"},"failures":[511,512,513,514,515,516,517,518,519,520,521,522,523,524],"tindex":"eed225e9-3f4d-11e6-a45e-750921224825","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed225ea-3f4d-11e6-a45e-2f0e786420f9","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed225eb-3f4d-11e6-a45e-0bf375149373","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[525,526,527,528,529],"tindex":"eed24cfc-3f4d-11e6-a45e-5dbab308ca46","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[530],"tindex":"eed24cfd-3f4d-11e6-a45e-f1c2ed4502bf","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[531,532],"tindex":"eed24cfe-3f4d-11e6-a45e-3dd198f45c67","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[531,533,532],"tindex":"eed2740f-3f4d-11e6-a45e-abb1426ae756","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                {\n                    return containsValue(o);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[534,535],"tindex":"eed27410-3f4d-11e6-a45e-197fe1047bbd","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed27411-3f4d-11e6-a45e-5f44737a222c","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed27412-3f4d-11e6-a45e-b90457300254","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed29b23-3f4d-11e6-a45e-c19269733629","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[536],"tindex":"eed29b24-3f4d-11e6-a45e-c92eaf07351d","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[537,538,539,540,541],"tindex":"eed29b25-3f4d-11e6-a45e-432474a9bb24","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed29b26-3f4d-11e6-a45e-592e34746bdc","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[542,543,544,545],"tindex":"eed29b27-3f4d-11e6-a45e-d17d9ba3976d","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[536],"tindex":"eed2c238-3f4d-11e6-a45e-4d0f61deaa46","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed2c239-3f4d-11e6-a45e-df729c56ab9f","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl"},"failures":[546,547],"tindex":"eed2c23a-3f4d-11e6-a45e-4f480f1c2aab","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582],"tindex":"eed2e94b-3f4d-11e6-a45e-19c5fe585da4","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl"},"failures":[583],"tindex":"eed2e94c-3f4d-11e6-a45e-2baace70e747","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[584,585,586],"tindex":"eed2e94d-3f4d-11e6-a45e-d99f6e0645d5","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[270,297,331,350,363,173],"tindex":"eed2e94e-3f4d-11e6-a45e-c9a0ac829bb5","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed3105f-3f4d-11e6-a45e-4f6ee6d1a77a","method":{"position":"org.apache.commons.collections4.list.TreeList:452","type":"CtMethodImpl","sourcecode":"void toArray(final java.lang.Object[] array, final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            array[index] = E;\n            if ((getLeftSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            if ((getRightSubTree()) != null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(array, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[587,588,1,589,590,591],"tindex":"eed31060-3f4d-11e6-a45e-ff1830cc8e4b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed31061-3f4d-11e6-a45e-097a5f632c24","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[592],"tindex":"eed31062-3f4d-11e6-a45e-4f760d5c062a","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed33773-3f4d-11e6-a45e-f9047f41fb18","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl"},"failures":[593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],"tindex":"eed33774-3f4d-11e6-a45e-0580f40649c3","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed33775-3f4d-11e6-a45e-85a7f28ed629","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[609,610],"tindex":"eed33776-3f4d-11e6-a45e-ad3dd381cc33","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[19,20,46,75,76],"tindex":"eed35e87-3f4d-11e6-a45e-55361627a645","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed35e88-3f4d-11e6-a45e-d5d06cb73091","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[7,611,612,613],"tindex":"eed35e89-3f4d-11e6-a45e-6b7fc8d5d698","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[614],"tindex":"eed35e8a-3f4d-11e6-a45e-112c256ad8ab","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[615],"tindex":"eed35e8b-3f4d-11e6-a45e-a1a00a60f48a","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed3859c-3f4d-11e6-a45e-abb507fde757","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[616,617,618,619],"tindex":"eed3859d-3f4d-11e6-a45e-23531760817b","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtBinaryOperatorImpl"},"failures":[620],"tindex":"eed3859e-3f4d-11e6-a45e-ddae4bea4dd2","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl"},"failures":[621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640],"tindex":"eed3acaf-3f4d-11e6-a45e-4faad695e1f7","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed3acb0-3f4d-11e6-a45e-f158cc42b8f3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed3acb1-3f4d-11e6-a45e-69eb427a3e9d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed3acb2-3f4d-11e6-a45e-e76e625c1d45","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl"},"failures":[641,642,643,644,645,646,647,648,649,650,651,652,653,174,175,654,176,177,178,655,656,179,657,180,658,659,181,182,660,661,662,183,184,185,186,187,188,663,664,665,416,666,667,668,669,189,190,191,670],"tindex":"eed3d3c3-3f4d-11e6-a45e-ad84e7112111","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[644],"tindex":"eed3d3c4-3f4d-11e6-a45e-6b1fe00d14cb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed3d3c5-3f4d-11e6-a45e-bd247be9a8ec","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed3d3c6-3f4d-11e6-a45e-fb7b5ad8900f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj instanceof org.w3c.dom.NodeList) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    if ((entryKey == null) || (entryValue == null)) {\n                        return false;\n                    } \n                    return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[671],"tindex":"eed3fad7-3f4d-11e6-a45e-37abe1205dba","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed3fad8-3f4d-11e6-a45e-5fd54cb9f935","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690],"tindex":"eed3fad9-3f4d-11e6-a45e-b3b7af5ee543","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed421ea-3f4d-11e6-a45e-f54e7caf4bda","method":{"position":"org.apache.commons.collections4.IteratorUtils:588","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[116,117,118,119,120,15,121],"tindex":"eed421eb-3f4d-11e6-a45e-b51c695726fb","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[26],"tindex":"eed421ec-3f4d-11e6-a45e-f187ac6a7361","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed421ed-3f4d-11e6-a45e-6d1e67f0ba27","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                {\n                    return decorated().indexOf(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl"},"failures":[691],"tindex":"eed448fe-3f4d-11e6-a45e-331999821168","method":{"position":"org.apache.commons.collections4.TransformerUtils:192","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed448ff-3f4d-11e6-a45e-b53dff686cfb","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl"},"failures":[292],"tindex":"eed44900-3f4d-11e6-a45e-b567977ec99f","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed44901-3f4d-11e6-a45e-35ded591b641","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isEqualKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed44902-3f4d-11e6-a45e-1fb5c5ee246e","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed44903-3f4d-11e6-a45e-8db62e8dbed4","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed47014-3f4d-11e6-a45e-0de71440fe6f","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed47015-3f4d-11e6-a45e-c93451ec6d13","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed47016-3f4d-11e6-a45e-7ff55609c160","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[692,693,694],"tindex":"eed47017-3f4d-11e6-a45e-152107179a03","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl"},"failures":[17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"eed47018-3f4d-11e6-a45e-0f0c115a3daa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"eed49729-3f4d-11e6-a45e-475cac9a0911","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed4e54a-3f4d-11e6-a45e-e1e124238e9b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (count == 1) {\n        {\n            if (null == object) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed4e54b-3f4d-11e6-a45e-fbee90fcebee","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed4e54c-3f4d-11e6-a45e-5f971c532ea0","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl"},"failures":[695,696,697,698,699,700,238,239,701,240,241,242,702,246,703,245,704,244,243,253,705,706,707,708,709,710,711,712,504,713,714,715,716,717,718,719,247,248,249,250,251,252],"tindex":"eed4e54d-3f4d-11e6-a45e-b3fdb78751e6","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed50c5e-3f4d-11e6-a45e-cdfa42454543","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed50c5f-3f4d-11e6-a45e-cbb75560ddd4","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed50c60-3f4d-11e6-a45e-bf2556fce304","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed50c61-3f4d-11e6-a45e-c5d1cc45c5a5","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"eed50c62-3f4d-11e6-a45e-95d28b4f563c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                {\n                    return containsValue(o);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346759922/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}