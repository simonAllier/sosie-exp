{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":53,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":890,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":438,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":823,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":1065,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":127,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":767,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":203,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":730,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":975,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":728,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":818,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":675,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":792,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":997,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":667,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":1143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":1142,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":268,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":1048,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":1153,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":1027,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":270,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":1002,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":1043,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":1120,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":118,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":311,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":209,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":421,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":625,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":439,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":721,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":59,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":351,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":754,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":812,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":495,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains3":1180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":2,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":1179,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":1178,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":689,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":830,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":603,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":635,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":98,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":642,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":787,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":317,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":478,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":731,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":596,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":898,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":827,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":92,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":956,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":1071,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":663,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":735,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":738,"org.apache.commons.collections4.ListUtilsTest.testEquals":160,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":1087,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":285,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":266,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":629,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":602,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":910,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":841,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":875,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":990,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":567,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":1037,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":893,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":1054,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":425,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":247,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":221,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":647,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":19,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":508,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":202,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":604,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":872,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":54,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":775,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":999,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":1150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":23,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":581,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":287,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":685,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":496,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":1082,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":724,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":242,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":575,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":611,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":126,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":1076,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":284,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":329,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":391,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":392,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":877,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":592,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":1084,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":128,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":718,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":996,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":350,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":348,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":318,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":456,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":278,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":149,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":301,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":249,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":817,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":426,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":447,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":591,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":489,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":641,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":516,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":774,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":709,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":386,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":595,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":502,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":978,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":714,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":671,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":39,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":185,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":606,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":1001,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":73,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":892,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":1022,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":158,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":529,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":298,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":678,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":796,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":864,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":943,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":1112,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":419,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":933,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":806,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":833,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":359,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":1079,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":164,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":753,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":108,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":491,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":942,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1063,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":1039,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":1061,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":7,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":614,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":749,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":229,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":814,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":282,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":652,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":822,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":1147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":1021,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":598,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":803,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":977,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":142,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":697,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":784,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":50,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":889,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":34,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":1057,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":1161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":1100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":512,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":355,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":514,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":559,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":744,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":713,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":1014,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":494,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":258,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":492,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":769,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":406,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":708,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":950,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":528,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":254,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":579,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":297,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":649,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":269,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":654,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":1030,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":399,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":526,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":424,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":699,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":401,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":1177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":1098,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":1046,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":987,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":734,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":1126,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":527,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":741,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":540,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":1059,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":146,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":541,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":1083,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":137,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":1049,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":1053,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":1009,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":740,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":274,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":680,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":1034,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":517,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":911,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":1154,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":181,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":463,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":941,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":958,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":838,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":378,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":563,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":253,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":839,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":208,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":519,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":800,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":781,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":342,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":1110,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":1072,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":608,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":201,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":548,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":263,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":764,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":171,"org.apache.commons.collections4.map.HashedMapTest.testClone":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":264,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":577,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":947,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":265,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":969,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":47,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":594,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":871,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":24,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":770,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":1144,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":21,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":640,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":372,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":545,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":742,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":558,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":1173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":1075,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":859,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":1067,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":1165,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":289,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":795,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":1104,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":530,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":856,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":1019,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":653,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":746,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":121,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":923,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":1135,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":922,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":921,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":1124,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":295,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":147,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":884,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":197,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":58,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":896,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":952,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":0,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":468,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":1130,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":747,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":973,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":462,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":584,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":891,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":11,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":863,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":968,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":967,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":1101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":964,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":963,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":966,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":965,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":960,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":878,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":962,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":961,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":903,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":623,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":22,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":696,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":694,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":1152,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":586,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":587,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":153,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":673,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":414,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":435,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":1013,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":989,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":260,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":1119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":384,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":850,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":417,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":666,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":416,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":415,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":407,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":38,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":661,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":214,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":733,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":1140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":454,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":676,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":825,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":210,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":1122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":42,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":125,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":677,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":157,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":429,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":29,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":309,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":323,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":154,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":485,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":31,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":30,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":561,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":847,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":957,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":257,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":312,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":300,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":683,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":991,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":1010,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":668,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":1155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":99,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":501,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":638,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":726,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":1029,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":189,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":1176,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":618,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":776,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":557,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":944,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":702,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":1020,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":601,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":828,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":1174,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":251,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":751,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":860,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":725,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":819,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":226,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":177,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":805,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":1085,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":937,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":656,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":1028,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":288,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":315,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":1118,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":477,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":633,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":900,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":1132,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":1175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":1127,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":500,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":211,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":939,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":361,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":571,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":174,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":572,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":573,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":843,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":998,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":1103,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":555,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":628,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":908,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":907,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":681,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":902,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":695,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":276,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":1089,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":932,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":60,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":46,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":976,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":16,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":674,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":630,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":662,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":1169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":1023,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":821,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":389,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":992,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":982,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":1032,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":340,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":411,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":564,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":980,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":1160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":793,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":669,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":862,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":396,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":979,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":1066,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":736,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":1052,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":357,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":865,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":556,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":135,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":464,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":955,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":646,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":469,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":78,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":446,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":953,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":327,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":590,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":732,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":271,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":906,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":917,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":881,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":70,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":919,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":1064,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":918,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":897,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":712,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":335,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":854,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":1133,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":535,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":710,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":1137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":246,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":613,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":794,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":520,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":493,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":840,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":430,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":562,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":720,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":460,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":409,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":612,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":244,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":1151,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":802,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":1005,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":1115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":1025,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":727,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":867,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":259,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":684,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":914,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":195,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":547,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":1047,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":400,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":1134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":82,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":80,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":935,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":338,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":206,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":610,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":192,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":292,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":901,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":352,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":322,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":768,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":885,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":936,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":1093,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":1031,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":150,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":331,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":51,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":461,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":1051,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":198,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":698,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":788,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":870,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":1157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":1094,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":807,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":778,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":717,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":394,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":191,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":431,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":232,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":1111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":816,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":1131,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":1058,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":155,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":510,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":1168,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":422,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":513,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":560,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":786,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":1012,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":371,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":161,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":69,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":144,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":835,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":1041,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":804,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":476,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":949,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":811,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":995,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":765,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":346,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":345,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":506,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":1121,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":347,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":948,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":486,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":648,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":912,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":445,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":1114,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":443,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":141,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":1164,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":385,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":1017,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":1117,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":1172,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":844,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":1011,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":1096,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":85,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":758,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":874,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":83,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":632,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":927,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":926,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":537,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":925,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":984,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":1055,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":524,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":801,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":1149,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":207,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":739,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":299,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":879,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":617,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":459,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":615,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":616,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":245,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":971,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":450,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":845,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":866,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":490,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":1145,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":223,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":521,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":1078,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":670,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":1026,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":1109,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":745,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":1033,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":842,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":1139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":369,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":759,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":578,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":533,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":837,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":509,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":659,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":543,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":657,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":534,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":481,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":930,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":413,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":928,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":152,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":929,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":117,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":832,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":934,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":1092,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":799,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":432,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":763,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":552,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":672,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":813,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":846,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":1024,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":755,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":1077,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":970,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":1136,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":719,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":1107,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":536,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":783,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":940,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":13,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":91,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":131,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":780,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":946,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":785,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":1102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":1088,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":1129,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":621,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":707,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":655,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":1163,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":504,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":148,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":988,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":888,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":582,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":631,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":539,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":1123,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":1183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":1162,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":252,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":487,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":179,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":1182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":723,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":1074,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":1181,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":107,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":627,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":849,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":238,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":1004,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":143,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":690,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":757,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":773,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":55,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":762,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":1108,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":954,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1070,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":180,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":853,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":1069,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":1073,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":449,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":172,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":240,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":398,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":381,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":651,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":316,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":1015,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":931,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":983,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":909,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":771,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":267,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":467,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":474,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":852,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":951,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":576,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":815,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":306,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":307,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":1035,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":1095,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":945,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":790,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":1097,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":255,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":868,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":1099,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":360,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":380,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":880,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":418,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":1006,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":691,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":894,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":213,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":693,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":692,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":924,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":809,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":1116,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":994,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":3,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":899,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":915,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":290,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":483,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":167,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":820,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":1086,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":1159,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":523,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":328,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":1060,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":750,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":869,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":831,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":1171,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":916,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":6,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":165,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":1036,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":291,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":703,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":1158,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":488,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":363,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":1007,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":1170,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":974,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":115,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":636,"org.apache.commons.collections4.CollectionUtilsTest.isFull":959,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":224,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":1128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":1113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":1040,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":1125,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":981,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":330,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":761,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":855,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":1045,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":826,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":505,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":374,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":810,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":1044,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":1105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":1080,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":985,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":1038,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":1166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":28,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":639,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":737,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":905,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":12,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":665,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":664,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":280,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":660,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":938,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":313,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":279,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":1146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":339,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":836,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":851,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":593,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":782,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":777,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":883,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":895,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":679,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":993,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":544,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":861,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1068,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":518,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":752,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":333,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":829,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":772,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":704,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":729,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":452,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":920,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":1018,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":760,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":1056,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":304,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":102,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":235,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":303,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":130,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":215,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":364,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":876,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":986,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":1042,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":682,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":296,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":1148,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":886,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":375,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":1091,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":858,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":834,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":216,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":217,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":62,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":824,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1062,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":408,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":1016,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":4,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":701,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":376,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":904,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":286,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":132,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":688,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":748,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":134,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":882,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":1156,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":1008,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":645,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":283,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":972,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":294,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":887,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":1138,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":857,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":20,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":848,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":1081,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":1090,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":138,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":756,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":1050,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":479,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":873,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":913,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":808,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":365,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":797,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":722,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":1106,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":136,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":1003,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":1167,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":1000,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":791,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":218,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":427,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":700,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":549,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":1141,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":162,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":715},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"f053749a-3e6c-11e6-9a96-d7d2cf47d7c4","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                {\n                    if (classToInstantiate == null) {\n                        throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n                    } \n                    if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                        throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n                    } \n                    if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                        return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n                    } \n                    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[0,1],"tindex":"f053e9cb-3e6c-11e6-9a96-c9cf6ac8aee9","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:87","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().add(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"f053e9cc-3e6c-11e6-9a96-192d13fc82d4","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"f053e9cd-3e6c-11e6-9a96-53163dcab86d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            if ((node.getLeft(dataElement)) != null) {\n                {\n                    return getParent(getParent(node, dataElement), dataElement);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[3,2,4,5,6,7,12,13,14,8,9,10,11,16,15,17,18,21,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,55,56,57,49,50,51,52,53,54,60,58,59,62,61,63,64,67,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"f05410de-3e6c-11e6-9a96-432758bb72f8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[98],"tindex":"f05410df-3e6c-11e6-9a96-0b08761e3f15","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll2.size()) < (coll2.size())) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll2","coll1":"coll2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"f05437f0-3e6c-11e6-9a96-93afc72d842e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"f05437f1-3e6c-11e6-9a96-0f61205189ca","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[155,156],"tindex":"f05437f2-3e6c-11e6-9a96-ab1b2dc6d4ab","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[157,158],"tindex":"f0545f03-3e6c-11e6-9a96-5bcc16bd09f8","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[159],"tindex":"f0545f04-3e6c-11e6-9a96-09679277af03","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[160],"tindex":"f0545f05-3e6c-11e6-9a96-85ac1a346aff","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (((list2 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f0548616-3e6c-11e6-9a96-cb87475fb462","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[74],"tindex":"f0548617-3e6c-11e6-9a96-e1575611b711","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[161,162],"tindex":"f0548618-3e6c-11e6-9a96-5b272e69de1c","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f054ad29-3e6c-11e6-9a96-518db6df191a","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f054ad2a-3e6c-11e6-9a96-b71975e1c779","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[163,164,165,166,167,168,169],"tindex":"f054ad2b-3e6c-11e6-9a96-c9be1f4ded8f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1382","type":"CtMethodImpl","sourcecode":"public static boolean sizeIsEmpty(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                return true;\n            } else if (object instanceof java.util.Collection<?>) {\n                return ((java.util.Collection<?>)(object)).isEmpty();\n            } else if (object instanceof java.util.Map<?, ?>) {\n                return ((java.util.Map<?, ?>)(object)).isEmpty();\n            } else if (object instanceof java.lang.Object[]) {\n                return (((java.lang.Object[])(object)).int) == 0;\n            } else if (object instanceof java.util.Iterator<?>) {\n                return (((java.util.Iterator<?>)(object)).hasNext()) == false;\n            } else if (object instanceof java.util.Enumeration<?>) {\n                return (((java.util.Enumeration<?>)(object)).hasMoreElements()) == false;\n            } else {\n                try {\n                    return (java.lang.reflect.Array.getLength(object)) == 0;\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[170],"tindex":"f054ad2c-3e6c-11e6-9a96-8b5ef6a184e7","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[72,76,86,89,90,93,94,95,96,97],"tindex":"f054d43d-3e6c-11e6-9a96-29e6bde0277a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[171,172,173,174],"tindex":"f054d43e-3e6c-11e6-9a96-5754387aaf67","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"f054d43f-3e6c-11e6-9a96-31b95fda28c2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[459],"tindex":"f054fb50-3e6c-11e6-9a96-fb7a09dc5a5b","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[460,461,462,463],"tindex":"f054fb51-3e6c-11e6-9a96-770995d760b2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:225","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            K K = null;\n            if (java.util.Map<V, K>.containsKey(value)) {\n                key = java.util.Map<V, K>.remove(value);\n                java.util.Map<K, V>.remove(key);\n            } \n            return key;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"f054fb52-3e6c-11e6-9a96-e714e5101262","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f054fb53-3e6c-11e6-9a96-83347cdd3d5a","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[464],"tindex":"f054fb54-3e6c-11e6-9a96-f3701d2217ab","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f054fb55-3e6c-11e6-9a96-5958e9ce06d5","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"f0552266-3e6c-11e6-9a96-7b74b5816dc6","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"f0552267-3e6c-11e6-9a96-6dd03d3c2a81","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"f0552268-3e6c-11e6-9a96-316e9b01d2a5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[2,3,5,6,7,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,45,49,50,51,52,53,54,55,56,57,60,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"f0552269-3e6c-11e6-9a96-dfb27cbb9232","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1866","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,4,5,6,7,10,11,15,16,18,19,20,21,22,23,24,516,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,459,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719],"tindex":"f055497a-3e6c-11e6-9a96-bbe9f8106440","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[720],"tindex":"f055497b-3e6c-11e6-9a96-e15fa200ae63","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f055497c-3e6c-11e6-9a96-bd2c286a9fb8","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[721],"tindex":"f055497d-3e6c-11e6-9a96-971e8f33c156","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        {\n            return getEntry(index).getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"f055708e-3e6c-11e6-9a96-2310fd85a382","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,418,419,420,436,770,771],"tindex":"f055708f-3e6c-11e6-9a96-911cc23faf8e","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[2,3,4,5,6,7,12,13,14,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,772,55,56,57,49,50,51,52,53,54,60,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"f0557090-3e6c-11e6-9a96-77ae8e0d47ac","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"f0557091-3e6c-11e6-9a96-c7e66844356f","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[773],"tindex":"f05597a2-3e6c-11e6-9a96-25b8bb922a7b","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[774,775,776],"tindex":"f05597a3-3e6c-11e6-9a96-87edaf4f820d","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[777,747],"tindex":"f05597a4-3e6c-11e6-9a96-cb3e76619d17","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:66","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformingSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[2,3,4,5,6,7,12,13,14,8,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,55,56,57,49,50,51,52,53,54,772,60,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"f05597a5-3e6c-11e6-9a96-57390f8dc454","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f05597a6-3e6c-11e6-9a96-cd20cf8591be","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"f05597a7-3e6c-11e6-9a96-11b44c72c251","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[778,471,779,780,781,782,783,784,493,502,505,510,15,16,19,20,21,22,24,785,786,787,788,789,790,791,792,793,794,795,796,526,527,529,530,531,532,534,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,557,558,560,561,562,563,565,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,731,842,843,844,845,846,847,848,849,850,851,736,852,853,854,855,856,857,858,859,860,861,745,862,598,600,603,604,606,610,613,627,629,632,633,635,638,639,640,646,647,648,649,650,651,653,863,864,865,866,867,868,869,870,871,872,748,669,671,674,675,677,681,684,873,874,875,876,877,878,879,880,703,705,708,709,711,715,718,132,881,882,883,884,885,886,887,888,889,890,891],"tindex":"f055beb8-3e6c-11e6-9a96-7bed4c899207","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f055beb9-3e6c-11e6-9a96-13b407afe937","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f055beba-3e6c-11e6-9a96-431fba5f3bc0","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"f055bebb-3e6c-11e6-9a96-5b75c03e7d82","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"f055bebc-3e6c-11e6-9a96-d1d1c23a8bea","method":{"position":"org.apache.commons.collections4.MapUtils:861","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Properties toProperties(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            final java.util.Properties java.util.Properties = new java.util.Properties();\n            if (map != null) {\n                for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = entry2;\n                    final java.lang.Object java.lang.Object = entry.getKey();\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    answer.put(key, value);\n                }\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"f055e5cd-3e6c-11e6-9a96-a927a2d835ec","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"f055e5ce-3e6c-11e6-9a96-2156834f3ee6","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"f055e5cf-3e6c-11e6-9a96-6b94999540ab","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"f055e5d0-3e6c-11e6-9a96-9b518397a3ac","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f055e5d1-3e6c-11e6-9a96-434a19d6baa8","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[892,893],"tindex":"f0560ce2-3e6c-11e6-9a96-ef7322697832","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f0560ce3-3e6c-11e6-9a96-23a93f5ee5d9","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f0560ce4-3e6c-11e6-9a96-b3eab75da245","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[161,894,895,896,897,898,162,899,900,901,902,903,904,905,906,907,908,909,910,911,912,509,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,144,932,933,934,935,936,937,938,939,940,941,942,943,944,945,770,771,946,947,948,949],"tindex":"f0560ce5-3e6c-11e6-9a96-750ccf347f2e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[950,951,952,953],"tindex":"f0560ce6-3e6c-11e6-9a96-5f6317a3bb24","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((a.size()) != (a.size())) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"f05633f7-3e6c-11e6-9a96-dfe0e12a7338","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[954,955,956,957,958],"tindex":"f05633f8-3e6c-11e6-9a96-f1ae73119881","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[959,170,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988],"tindex":"f05633f9-3e6c-11e6-9a96-2b14aac2512f","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index > 0) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[989,990,991,992,491,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1],"tindex":"f05633fa-3e6c-11e6-9a96-91c76534f688","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1008],"tindex":"f05633fb-3e6c-11e6-9a96-67da0ecfab50","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,155,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,156,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147],"tindex":"f0565b0c-3e6c-11e6-9a96-070433632f6a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"f056821d-3e6c-11e6-9a96-67046853195d","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f056821e-3e6c-11e6-9a96-5f4d80909cf6","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"f056821f-3e6c-11e6-9a96-4d4a209c239d","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"f0568220-3e6c-11e6-9a96-0fa6e5e14757","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f0568221-3e6c-11e6-9a96-6ba976d6178d","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"f056a932-3e6c-11e6-9a96-699a082196cc","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                {\n                    if (classToInstantiate == null) {\n                        throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n                    } \n                    if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                        throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n                    } \n                    if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                        return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n                    } \n                    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"f056a933-3e6c-11e6-9a96-e9cdbd1e4532","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[1148],"tindex":"f056a934-3e6c-11e6-9a96-1f976d91715f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[770,771],"tindex":"f056a935-3e6c-11e6-9a96-f7975089d0cc","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[],"tindex":"f056a936-3e6c-11e6-9a96-dfe02ad4f816","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            if ((node.getLeft(dataElement)) != null) {\n                {\n                    return getParent(getParent(node, dataElement), dataElement);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[785,786,787,788,789,790,791,792,793,794,795,796,1149,1150,1151,526,527,529,530,531,532,534,1152,797,798,799,800,801,802,803,804,805,806,807,808,1153,1154,1155,809,810,811,812,813,814,815,816,817,818,819,820,1156,1157,1158,557,558,560,561,562,563,565,1159,821,822,823,824,825,826,827,828,829,830,831,832,1160,1161,1162],"tindex":"f056d047-3e6c-11e6-9a96-c9af8c28d7bf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[955],"tindex":"f056d048-3e6c-11e6-9a96-c1baeb2e9e37","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1163,1164],"tindex":"f056d049-3e6c-11e6-9a96-81b3eab020de","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[1165],"tindex":"f056d04a-3e6c-11e6-9a96-59793cff7d4d","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtBinaryOperatorImpl","sourcecode":"(valueTransformer) == null"},"failures":[1166],"tindex":"f056d04b-3e6c-11e6-9a96-83f81990ef43","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (valueTransformer == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueTransformer":"valueTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"f056d04c-3e6c-11e6-9a96-a3802dfbc526","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"f056d04d-3e6c-11e6-9a96-bd07ccabbe4b","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[1167,1168,1169],"tindex":"f056f75e-3e6c-11e6-9a96-59fdbd3d9540","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[1170],"tindex":"f056f75f-3e6c-11e6-9a96-21b3b226a09d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1668","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> retainAll(final java.util.Collection<C> collection, final java.util.Collection<?> retain) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.retainAll(collection, retain);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"f056f760-3e6c-11e6-9a96-978fac067bf5","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f056f761-3e6c-11e6-9a96-6778b49fcd08","method":{"position":"org.apache.commons.collections4.MapUtils:822","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key, final float defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return defaultValue;\n            } \n            return floatObject.floatValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[289,295,309,312],"tindex":"f056f762-3e6c-11e6-9a96-7b406afe9ea5","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1171,1172],"tindex":"f056f763-3e6c-11e6-9a96-f126c998e9e8","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[1173],"tindex":"f0571e74-3e6c-11e6-9a96-a131e55f6012","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Set<E>.containsAll(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"f0571e75-3e6c-11e6-9a96-c93377e62d64","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"f0571e76-3e6c-11e6-9a96-61a639df5f4c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Set<E>.containsAll(coll);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[1174,1175],"tindex":"f0571e77-3e6c-11e6-9a96-05d2f4d319ac","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"f0571e78-3e6c-11e6-9a96-817b8227ad3d","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (end == start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[1176],"tindex":"f0571e79-3e6c-11e6-9a96-cf57079cb0f1","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[1177],"tindex":"f057458a-3e6c-11e6-9a96-6f9a6b32d647","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"f057458b-3e6c-11e6-9a96-5576d3af1f1b","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"f057458c-3e6c-11e6-9a96-1b5cf520a8ac","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                {\n                    return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[1178,1179,1180,1181,1182,1183,691,692,693],"tindex":"f057458d-3e6c-11e6-9a96-c127c4ab0a2a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            return getEntrySet().contains(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647137/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}