{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":67,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":257,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":315,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":116,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":181,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":304,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":250,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":153,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":248,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":11,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":112,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":190,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":187,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":290,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":160,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":168,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":313,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":77,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":232,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":192,"org.apache.commons.collections4.ListUtilsTest.testLazyList":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":147,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":235,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":14,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":150,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":98,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":134,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":178,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":203,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":211,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":264,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":298,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":172,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":111,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":80,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":165,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":107,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":243,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":156,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":169,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":68,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":271,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":202,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":65,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":242,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":244,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":176,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":78,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":163,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":282,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":51,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":259,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":206,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":287,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":166,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":269,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":162,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":174,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":278,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":152,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":81,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":146,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":72,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":19,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":253,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":312,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":45,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":263,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":79,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":291,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":239,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":283,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":205,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":82,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":303,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":184,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":238,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":258,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":218,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":217,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":300,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":216,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":286,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":207,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":8,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":149,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":261,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":127,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":130,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":21,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":301,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":15,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":133,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":136,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":277,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":4,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":266,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":279,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":148,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":198,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":124,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":308,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":320,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":241,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":20,"org.apache.commons.collections4.map.SingletonMapTest.testClone":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":97,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":28,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":137,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":61,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":311},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:99","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[0],"tindex":"e3025564-2e9e-11e6-94ed-cb3fc231733a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[],"tindex":"e30318b5-2e9e-11e6-94ed-17d710bcd064","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[1,2],"tindex":"e3033fc6-2e9e-11e6-94ed-2d1dc7934ae5","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:133","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"e3033fc7-2e9e-11e6-94ed-a3bd66c6d2f4","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e30366d8-2e9e-11e6-94ed-93d9a39a028a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtBinaryOperatorImpl","sourcecode":"(start) >= (maxElements)"},"failures":[3],"tindex":"e3038de9-2e9e-11e6-94ed-e731f75d3cdd","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","maxElements":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[4,5,6,7,8,9,10,11],"tindex":"e3038dea-2e9e-11e6-94ed-cf204c289aab","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[12],"tindex":"e303dc0b-2e9e-11e6-94ed-1d966960add9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"e303dc0c-2e9e-11e6-94ed-c35dc9771042","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[],"tindex":"e304031d-2e9e-11e6-94ed-65ff04e3851a","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"e304031e-2e9e-11e6-94ed-85fa6b9370ac","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[109,110],"tindex":"e304513f-2e9e-11e6-94ed-29d10b6c16cb","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if (inputCollection instanceof java.util.Set<?>) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[],"tindex":"e3045140-2e9e-11e6-94ed-9f57afeb86ff","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if ((coll.size()) < (coll.size())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().removeAll(coll);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[111,112,113,114,115],"tindex":"e3047751-2e9e-11e6-94ed-fb127c4b70d2","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtBinaryOperatorImpl","sourcecode":"(deletedNode.getParent(dataElement)) == null"},"failures":[13,14,17,18,15,16,19,20,21,22,23,24,25,26,27,28,29,54,55,30,51,52,53,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,58,59,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,107,108,76,104,105,106,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"e3049e62-2e9e-11e6-94ed-d7ed933fdef6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtBinaryOperatorImpl","sourcecode":"(size) >= (threshold)"},"failures":[],"tindex":"e3049e63-2e9e-11e6-94ed-1b5290101cd2","method":{"position":"org.apache.commons.collections4.MapUtils:782","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key, final int defaultValue) {\n    if (defaultValue >= defaultValue) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return defaultValue;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"defaultValue","threshold":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[116,117],"tindex":"e304c574-2e9e-11e6-94ed-95f9a7939a65","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184],"tindex":"e304ec85-2e9e-11e6-94ed-b9e8968ebf77","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (reverseMap instanceof org.apache.commons.collections4.IterableMap) {\n                {\n                    return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[185,186],"tindex":"e304ec86-2e9e-11e6-94ed-83bc9d8bbece","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (b.size())) {\n        {\n            if (b == b) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n                    } \n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                        public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                        }\n                    };\n                    return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"b","list2":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"e3053aa7-2e9e-11e6-94ed-e1874c7cb6bf","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start == 0) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(start)) {\n                {\n                    return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"start"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e30561b8-2e9e-11e6-94ed-e7d7853fe84b","method":{"position":"org.apache.commons.collections4.ListUtils:492","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> fixedSizeList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"e30561b9-2e9e-11e6-94ed-7b09c98806a0","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start == 0) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(start)) {\n                {\n                    return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"tindex":"e30561ba-2e9e-11e6-94ed-bf8411131845","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (bitIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bitIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"e30588cb-2e9e-11e6-94ed-8d743be200ac","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[249,250,251,252,253],"tindex":"e30588cc-2e9e-11e6-94ed-e7004fbd0977","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if ((key == null) || (key == null)) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key","b":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.left, p)"},"failures":[],"tindex":"e305afdd-2e9e-11e6-94ed-b9a955e8d2e7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:651","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryImpl(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> start, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> previous, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> tree) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(tree, p)) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = start;\n            if ((previous == null) || (start != (previous.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                while (!(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n                    if (previous == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                        break;\n                    } \n                    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                        return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    } \n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            } \n            if (current.isEmpty()) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if (previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current)) {\n                    return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n            } \n            while (current == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (current == tree) {\n                    return null;\n                } \n                current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            if (current == tree) {\n                return null;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            if ((previous != (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n                return current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            } \n            if ((current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                return null;\n            } \n            return nextEntryImpl(current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, previous, tree);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"previous","left":"tree"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"tindex":"e305d6ee-2e9e-11e6-94ed-0379e6104f7e","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n                    } \n                    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                        return it;\n                    } \n                    return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"e305fdff-2e9e-11e6-94ed-393a5d5872d6","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n                    } \n                    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                        return it;\n                    } \n                    return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[270,271,272,273,274,275],"tindex":"e305fe00-2e9e-11e6-94ed-73c8f0a11706","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if ((index - index) > (index - index)) {\n        {\n            return java.util.List<E>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"index","end2":"index","end1":"index","start2":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[276,277],"tindex":"e3062511-2e9e-11e6-94ed-d739c9b84307","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[278],"tindex":"e3062512-2e9e-11e6-94ed-9501e6988cd7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Collection) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[279,280],"tindex":"e3062513-2e9e-11e6-94ed-dff7ff6fcc31","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[281],"tindex":"e3064c24-2e9e-11e6-94ed-4370bba1631f","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtBinaryOperatorImpl","sourcecode":"(exhausted) || (slotFilled)"},"failures":[],"tindex":"e3064c25-2e9e-11e6-94ed-f5dfd3f171bc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive || forceInclusive) {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exhausted":"forceInclusive","slotFilled":"forceInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"e3064c26-2e9e-11e6-94ed-4db73c5386ac","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof org.w3c.dom.NodeList) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[306],"tindex":"e3067337-2e9e-11e6-94ed-2d70880a2a2b","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"e3067338-2e9e-11e6-94ed-71951571aafc","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (reverseMap instanceof org.apache.commons.collections4.IterableMap) {\n                {\n                    return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[307],"tindex":"e3067339-2e9e-11e6-94ed-8ddcca33f30f","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start == (-1)) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"e3069a4a-2e9e-11e6-94ed-cb931974ce4f","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (!(key == null ? key == null : o1.equals(o2))) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"key","o2":"key"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[],"tindex":"e3069a4b-2e9e-11e6-94ed-a70ccae5ce73","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl","sourcecode":"(callCounter) == 0"},"failures":[308,309,310,311,312,313,314],"tindex":"e306c15c-2e9e-11e6-94ed-55e92dd9c982","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"e306c15d-2e9e-11e6-94ed-0dd5ee09beba","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if ((coll.size()) < (coll.size())) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return decorated().removeAll(coll);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"e306c15e-2e9e-11e6-94ed-692bec83511c","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[315,316,115],"tindex":"e306e86f-2e9e-11e6-94ed-4d92f4732eb0","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"e306e870-2e9e-11e6-94ed-1b4ac55579c9","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if ((a.size()) != (b.size())) {\n        {\n            if (b == b) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n                    } \n                    if ((a.size()) != (b.size())) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                        public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                        }\n                    };\n                    return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[317,318,319,320],"tindex":"e3070f81-2e9e-11e6-94ed-3b5a351513f7","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtBinaryOperatorImpl","sourcecode":"(values) != null"},"failures":[3],"tindex":"e3073692-2e9e-11e6-94ed-6353439c3cea","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":47,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}