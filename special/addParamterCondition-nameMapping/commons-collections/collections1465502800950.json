{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":678,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":87,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":575,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":559,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":38,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":57,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":339,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":362,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":660,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":630,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":693,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":629,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":493,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":10,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":241,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":675,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":173,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":237,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":414,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":21,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":517,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":679,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithEmptyCollection":670,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":341,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":373,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":178,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":580,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":603,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":119,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":151,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":153,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":363,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":152,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":130,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":211,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":252,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":79,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":49,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":383,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":649,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":389,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":699,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":295,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":615,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":357,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":452,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":474,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":692,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":498,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":340,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":491,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":512,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":598,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":404,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":223,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":368,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":496,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":569,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":135,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":407,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":536,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":40,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":305,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":455,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":128,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":342,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":506,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":520,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":58,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":665,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":264,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":581,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":176,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":422,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":503,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":662,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":352,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":123,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":312,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":592,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":206,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":114,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":521,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":444,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":387,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":627,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":597,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":628,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":417,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":482,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":447,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNonEmptyCollection":669,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":36,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":400,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":556,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":181,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":167,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":208,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":470,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":255,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":360,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":685,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":702,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":219,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":459,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":530,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":349,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":437,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":73,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":282,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":658,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":262,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":370,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":454,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":442,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":659,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":511,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":248,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":616,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":545,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":316,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":684,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":266,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":259,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":438,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":88,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":350,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":614,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":212,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":613,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":610,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":533,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":681,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":311,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":302,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":532,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":1,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":591,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":28,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":468,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":527,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":652,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":291,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":571,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":671,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":279,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":131,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":162,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":238,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":367,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":193,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":625,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":104,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":500,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":433,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":421,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":103,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":657,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":646,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":96,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":289,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":480,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalFullCollectionExists":450,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":180,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":494,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":654,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":18,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":22,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":236,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":31,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":220,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":161,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":160,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":159,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":70,"org.apache.commons.collections4.map.LRUMapTest.testClone":50,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":576,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":143,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":507,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":562,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":432,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":683,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":643,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":228,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":283,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":448,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":586,"org.apache.commons.collections4.ListUtilsTest.testSubtract":2,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":109,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":648,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":186,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":619,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":501,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":548,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":398,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":443,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":188,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":467,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":577,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":142,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":552,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":85,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":260,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":522,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":490,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":481,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":313,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":486,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":686,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":344,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":655,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":589,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":232,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":489,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":97,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":487,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":606,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":300,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":5,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":411,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":471,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":547,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":637,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":146,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":147,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":328,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":14,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":528,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":83,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":403,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":110,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":380,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":668,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":69,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":539,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":346,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":9,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":510,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":251,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":7,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":585,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":508,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":697,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":68,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":233,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":67,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":244,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":502,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":247,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":319,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":140,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":175,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":374,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":497,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":199,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":531,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":534,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":680,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":0,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":666,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":101,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":463,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":263,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":242,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":205,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":207,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":690,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":196,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":318,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":537,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":573,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":682,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":377,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":376,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":611,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":375,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":602,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":77,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":661,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":579,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":465,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":612,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":590,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":184,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":473,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":195,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":172,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":213,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":321,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":594,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":98,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":187,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":526,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":391,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":434,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":358,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":623,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":430,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":696,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":303,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":46,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":45,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":386,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":558,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":44,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":80,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":476,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":538,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":39,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":596,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":296,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":246,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":550,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":141,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":429,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":424,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":16,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":149,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":122,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":106,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":634,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":336,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":298,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":371,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":563,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":564,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":478,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":518,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":664,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":95,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":239,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":469,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":677,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":513,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":600,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":256,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":458,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":306,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":519,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":523,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":23,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":419,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":620,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":689,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":229,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":676,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":71,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":194,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":192,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":372,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":190,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":399,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":185,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":324,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":379,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":642,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":132,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":15,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":388,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":320,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":243,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":299,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":129,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":137,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":460,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":157,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":156,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":155,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":82,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":354,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":20,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":42,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":100,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":41,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":43,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":427,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":572,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":416,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":582,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":633,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":644,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":413,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":488,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":19,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":425,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":516,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":653,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":546,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":150,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":304,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":504,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":514,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":515,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":405,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":549,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":261,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":544,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":285,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":499,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":257,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":330,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":116,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":209,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":674,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":81,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":224,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":555,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":435,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":570,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":74,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":365,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":535,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":423,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":541,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":174,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":461,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":170,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":392,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":540,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":420,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":457,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":231,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":638,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":636,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":694,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":495,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":640,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":588,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":456,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":464,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":165,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":26,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":48,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":695,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":650,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":700,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":249,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":364,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":505,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":485,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":322,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":163,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":565,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":278,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":138,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":567,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":688,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":335,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":197,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":332,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":609,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":356,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":177,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":492,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":338,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":431,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":451,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":265,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":234,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":366,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":297,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":351,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":566,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":315,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":673,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":595,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":479,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":672,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":11,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":253,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":290,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":6,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":51,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":226,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":343,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":553,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":245,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":270,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":144,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":267,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":269,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":323,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":78,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":331,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":198,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":401,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":200,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":524,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":397,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":631,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":277,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":574,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":108,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":86,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":390,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":408,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":179,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":687,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":221,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":113,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":353,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":703,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":117,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":169,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":384,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":90,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":139,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":309,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":621,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":475,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":325,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":557,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":561,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":440,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":691,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":466,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":543,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":121,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":214,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":307,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":120,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":395,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":294,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":215,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":607,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":94,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":112,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":127,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":418,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":525,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":64,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":92,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":584,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":34,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":551,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":410,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":136,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":439,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":529,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":62,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":76,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":317,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":656,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":164,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalEmptyCollectionExists":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":651,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":554,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":698},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[0,1],"tindex":"ae388c6b-2e7d-11e6-8a5f-3bc64e888327","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtBinaryOperatorImpl","sourcecode":"listIterator == null"},"failures":[],"tindex":"ae3a883c-2e7d-11e6-8a5f-e59719bf1963","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (listIterator == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listIterator":"listIterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[2,3],"tindex":"ae3a883d-2e7d-11e6-8a5f-71d16960c77f","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            if ((list2.size()) > (list2.size())) {\n                {\n                    final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n                    final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n                    for (final E E : list1) {\n                        if (!(bag.remove(e, 1))) {\n                            result.add(e);\n                        } \n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[4,5],"tindex":"ae3aaf4e-2e7d-11e6-8a5f-29e684c4e59b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"ae3ad65f-2e7d-11e6-8a5f-11a7820efe29","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (comparator == null) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[6],"tindex":"ae3ad660-2e7d-11e6-8a5f-8b89fd5ea695","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"ae3afd71-2e7d-11e6-8a5f-bba422774f11","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((coll.size()) == 0) {\n                        return false;\n                    } \n                    boolean boolean = false;\n                    for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                        changed |= item.removeAll(coll);\n                    }\n                    return changed;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[7],"tindex":"ae3b2482-2e7d-11e6-8a5f-0f74fff19643","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[8,9,10],"tindex":"ae3b2483-2e7d-11e6-8a5f-29ae17af8853","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[11,12],"tindex":"ae3b4b94-2e7d-11e6-8a5f-8d265402cc24","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index < 0) {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"ae3b4b95-2e7d-11e6-8a5f-e51e037c9f9e","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"ae3b72a6-2e7d-11e6-8a5f-252127022fc4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:738","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((multi.size()) >= 2) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[13],"tindex":"ae3b99b7-2e7d-11e6-8a5f-d93f63295493","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[14,15],"tindex":"ae3bc0c8-2e7d-11e6-8a5f-4b9b85a625aa","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"ae3bc0c9-2e7d-11e6-8a5f-6522a58a8c08","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                {\n                    return decorated().addAll(coll);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"ae3cd23a-2e7d-11e6-8a5f-41744ec2bccc","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[16,17,18,19,20,21,22,23,24,25,26],"tindex":"ae3cf94b-2e7d-11e6-8a5f-e5277371097d","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[27,28,29],"tindex":"ae3cf94c-2e7d-11e6-8a5f-71dcf3e7a3d2","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"ae3de3ad-2e7d-11e6-8a5f-f58fb1d6e2d9","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"ae3e7fee-2e7d-11e6-8a5f-13a59058ab3b","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"ae3ea6ff-2e7d-11e6-8a5f-5f102df565c4","method":{"position":"org.apache.commons.collections4.MapUtils:446","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key, final java.lang.Byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"ae3ea700-2e7d-11e6-8a5f-91f565934929","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[101,102,103,104,105,106,107,108,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"tindex":"ae3ea701-2e7d-11e6-8a5f-6155cb078507","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().remove(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[162,163,164,165,166,167,21,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,26,183,184,185,186,187,188,189,190,191,192,193,107,194,195,196,197,108,198,199,200],"tindex":"ae3ece12-2e7d-11e6-8a5f-57ebec6a4b87","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230],"tindex":"ae3ece13-2e7d-11e6-8a5f-a79c15e83563","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[231],"tindex":"ae3ece14-2e7d-11e6-8a5f-396c676387e0","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"ae3ef525-2e7d-11e6-8a5f-45428427e55f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ae3ef526-2e7d-11e6-8a5f-4d97ed7d2bb5","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[232,233,234,235],"tindex":"ae3f1c37-2e7d-11e6-8a5f-59d215f46274","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[236,237],"tindex":"ae3f1c38-2e7d-11e6-8a5f-61cd33ac7a66","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[236],"tindex":"ae402da9-2e7d-11e6-8a5f-614be11d3b55","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"ae402daa-2e7d-11e6-8a5f-db451926e1d1","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[238],"tindex":"ae402dab-2e7d-11e6-8a5f-25d9aaf34e07","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                        return true;\n                    } \n                    return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[239],"tindex":"ae41662c-2e7d-11e6-8a5f-f1dcb11b47f7","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[240,237,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"ae42508d-2e7d-11e6-8a5f-ef18242e7278","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (bitIndex == 0) {\n        {\n            if (lengthInBits == 0) {\n                {\n                    if (key == null) {\n                        return false;\n                    } \n                    return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[285,286,287],"tindex":"ae42508e-2e7d-11e6-8a5f-d3be5721b202","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[288,289,290],"tindex":"ae42779f-2e7d-11e6-8a5f-35d59b668320","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[291],"tindex":"ae429eb0-2e7d-11e6-8a5f-75209f36afc8","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[292,293],"tindex":"ae436201-2e7d-11e6-8a5f-d109ee08a11c","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,208,227,229,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"ae438912-2e7d-11e6-8a5f-a1ff4fb5d78f","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"ae438913-2e7d-11e6-8a5f-bfd9526f387c","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"ae438914-2e7d-11e6-8a5f-83ca52123c0f","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"ae43b025-2e7d-11e6-8a5f-81126da76987","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[363,364],"tindex":"ae442556-2e7d-11e6-8a5f-93a911fdcf78","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[365,366],"tindex":"ae444c67-2e7d-11e6-8a5f-4d81b683af1b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[367],"tindex":"ae444c68-2e7d-11e6-8a5f-7f939d02a25e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[368],"tindex":"ae447379-2e7d-11e6-8a5f-dd174c2dc2d8","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[369],"tindex":"ae44737a-2e7d-11e6-8a5f-b5b492426f74","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[370,371],"tindex":"ae44e8ab-2e7d-11e6-8a5f-53861a02545e","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"ae44e8ac-2e7d-11e6-8a5f-199eb8e3bf0d","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            if ((list2.size()) > (list2.size())) {\n                {\n                    final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n                    final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n                    for (final E E : list1) {\n                        if (!(bag.remove(e, 1))) {\n                            result.add(e);\n                        } \n                    }\n                    return result;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[358,372,373,374,375,376,377,359,158,378,379,159,160,161,380,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,361,402,362,403,404,405,406,407,408,409,410,411,412],"tindex":"ae450fbd-2e7d-11e6-8a5f-31646497c6a1","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[413],"tindex":"ae450fbe-2e7d-11e6-8a5f-fb1c9ddba8e4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[414],"tindex":"ae450fbf-2e7d-11e6-8a5f-0ffa6f5f0215","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if ((collection.size()) > 0) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"ae470b90-2e7d-11e6-8a5f-0790ef63358c","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[415,121,416,417,123,418,419,420,124,421,422,125,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,234,442,443,444,445,446,447,448,449,450,451,452,453,454],"tindex":"ae4732a1-2e7d-11e6-8a5f-fdb4025c1268","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"ae4732a2-2e7d-11e6-8a5f-393d1c446c37","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[455],"tindex":"ae4732a3-2e7d-11e6-8a5f-c911dd7500f7","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"ae4759b4-2e7d-11e6-8a5f-53f944fe5d93","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[456,457,458,12,459,460,461,462],"tindex":"ae4759b5-2e7d-11e6-8a5f-f32db8181223","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:537","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.getValue(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[463],"tindex":"ae4759b6-2e7d-11e6-8a5f-21f4b9a1d185","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[464],"tindex":"ae4780c7-2e7d-11e6-8a5f-bf615f8cd042","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[105],"tindex":"ae4780c8-2e7d-11e6-8a5f-cb8c68190e49","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"ae4780c9-2e7d-11e6-8a5f-db1a09f1c72e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[177,465],"tindex":"ae47a7da-2e7d-11e6-8a5f-7f52433be4f5","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().listIterator(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"put instanceof java.util.Map"},"failures":[238],"tindex":"ae47ceeb-2e7d-11e6-8a5f-dfb61dfc461d","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put instanceof java.util.Map) {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"ae47ceec-2e7d-11e6-8a5f-af815f2beb71","method":{"position":"org.apache.commons.collections4.CollectionUtils:898","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, answer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ae47f5fd-2e7d-11e6-8a5f-a956b47c8059","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[0,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495],"tindex":"ae47f5fe-2e7d-11e6-8a5f-6bab10da7091","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[496],"tindex":"ae47f5ff-2e7d-11e6-8a5f-a1b4aae144ee","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[497,498,499,500,501,421,443,502,503,504],"tindex":"ae47f600-2e7d-11e6-8a5f-3165045210d0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[505,506,507,508,509,510,341,511,512,513,514,515,516,517,342,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,343,538,344,539,540,541,542,543,544,545,546,547,548,549],"tindex":"ae481d11-2e7d-11e6-8a5f-5359213076cd","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"ae481d12-2e7d-11e6-8a5f-6ff9950fbcc5","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (bitIndex == 0) {\n        {\n            if (lengthInBits == 0) {\n                {\n                    if (key == null) {\n                        return false;\n                    } \n                    return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,286,287,570,571,572,573,574,40,44,45,575,576,577,578,47,579,580,581,582,583,584,585,586,587,588,62,66,67,589,590,591,592,69,70,71,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,347,348,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667],"tindex":"ae481d13-2e7d-11e6-8a5f-111bb34ecfea","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[668,669,670,671,672,673,674],"tindex":"ae484424-2e7d-11e6-8a5f-998d74ecb729","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    return (coll == null) || (coll.isEmpty());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"ae486b35-2e7d-11e6-8a5f-e5fd9bb45636","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"ae486b36-2e7d-11e6-8a5f-570f16606f30","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"ae486b37-2e7d-11e6-8a5f-dd08d9993101","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[675],"tindex":"ae486b38-2e7d-11e6-8a5f-8df482d37a29","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"ae489249-2e7d-11e6-8a5f-e3b1f425072a","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                        return true;\n                    } \n                    return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"ae48924a-2e7d-11e6-8a5f-a5f182fe4e34","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[676],"tindex":"ae48b95b-2e7d-11e6-8a5f-59ab5d1fe8b6","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start < start) {\n        {\n            if (start < 0) {\n                {\n                    return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"ae49559c-2e7d-11e6-8a5f-ed901f868d1d","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:64","type":"CtMethodImpl","sourcecode":"static boolean isEqualBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ae49559d-2e7d-11e6-8a5f-516c55bdfe9a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[677,678],"tindex":"ae497cae-2e7d-11e6-8a5f-218ac5393325","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694],"tindex":"ae497caf-2e7d-11e6-8a5f-49e5c3a609e7","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[695],"tindex":"ae497cb0-2e7d-11e6-8a5f-2319450151b9","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[696,697],"tindex":"ae49a3c1-2e7d-11e6-8a5f-51e966dcc79c","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[565,575,589,601,615,629,347,660],"tindex":"ae4e85c2-2e7d-11e6-8a5f-6d18c837c757","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[],"tindex":"ae4e85c3-2e7d-11e6-8a5f-abd469710d34","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (start < start) {\n        {\n            if (start < 0) {\n                {\n                    return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"ae4e85c4-2e7d-11e6-8a5f-c3225eb00a32","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    return (coll == null) || (coll.isEmpty());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"ae4eacd5-2e7d-11e6-8a5f-8ddf602bbaf4","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"ae4eacd6-2e7d-11e6-8a5f-9b73c40014cc","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                {\n                    return decorated().addAll(coll);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"ae4eacd7-2e7d-11e6-8a5f-cb03ce5df53d","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"ae4eacd8-2e7d-11e6-8a5f-6f1d2dd6fb3c","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (transform == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transform"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"ae4ed3e9-2e7d-11e6-8a5f-8fb120f22420","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((coll.size()) == 0) {\n                        return false;\n                    } \n                    boolean boolean = false;\n                    for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                        changed |= item.removeAll(coll);\n                    }\n                    return changed;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"ae4ed3ea-2e7d-11e6-8a5f-e3357f857109","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[698,699,700],"tindex":"ae4ed3eb-2e7d-11e6-8a5f-8b4b166d3cce","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"ae4ed3ec-2e7d-11e6-8a5f-8b15594bc77c","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[701,702,491,703,704],"tindex":"ae4efafd-2e7d-11e6-8a5f-69a74a74511d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"ae4efafe-2e7d-11e6-8a5f-cff6e63c1c1b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}