{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":484,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":707,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":127,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":240,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":505,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":541,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":278,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":548,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":163,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":276,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":275,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":430,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":720,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":593,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":109,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":204,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":371,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":198,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":530,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":560,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":606,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":607,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":409,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":608,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":609,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":3,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":320,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":429,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":293,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":253,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":209,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":468,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":243,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":326,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":71,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":376,"org.apache.commons.collections4.CollectionUtilsTest.get":463,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":536,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":191,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":539,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":451,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":102,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":629,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":482,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":630,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":540,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":101,"org.apache.commons.collections4.ListUtilsTest.testLazyList":319,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":573,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":740,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":266,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":61,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":59,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":527,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":718,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":725,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":578,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":153,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":341,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":350,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":571,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":729,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":703,"org.apache.commons.collections4.CollectionUtilsTest.transform1":37,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":279,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":331,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":380,"org.apache.commons.collections4.CollectionUtilsTest.select":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":317,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":285,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":104,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":728,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":9,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":246,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":272,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":121,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":653,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":689,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":562,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":207,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":442,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":21,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":239,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":339,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":691,"org.apache.commons.collections4.CollectionUtilsTest.intersection":466,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":363,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":348,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":512,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":592,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":112,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":587,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":181,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":610,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":391,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":744,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":524,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":456,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":568,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":75,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":152,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":665,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":241,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":420,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":489,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":510,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":533,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":342,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":183,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":212,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":480,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":679,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":197,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":708,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":373,"org.apache.commons.collections4.map.CompositeMapTest.testPut":408,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":696,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":531,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":731,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":632,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":506,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":654,"org.apache.commons.collections4.map.CompositeMapTest.testGet":407,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":621,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":308,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":443,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":282,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":698,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":503,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":660,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":569,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":519,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":349,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":487,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":627,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":638,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":164,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":626,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":478,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":517,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":437,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":162,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":639,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":401,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":328,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":502,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":504,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":580,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":655,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":359,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":146,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":370,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":695,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":492,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":336,"org.apache.commons.collections4.CollectionUtilsTest.union":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":521,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":588,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":151,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":357,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":469,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":439,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":522,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":345,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":192,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":190,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":312,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":525,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":670,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":340,"org.apache.commons.collections4.list.TreeListTest.testRemove":39,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":224,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":327,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":305,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":445,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":737,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":369,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":399,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":389,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":743,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":80,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":663,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":500,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":134,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":515,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":94,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":344,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":199,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":375,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":211,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":721,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":658,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":747,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":314,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":392,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":395,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":269,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":611,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":10,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":546,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":1,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":602,"org.apache.commons.collections4.map.LRUMapTest.testClone":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":110,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":138,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":705,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":424,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":5,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":273,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":567,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":651,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":745,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":248,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":741,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":551,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":622,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":742,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":156,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":572,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":56,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":418,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":217,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":385,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsSelfHashCode":34,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":300,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":526,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":661,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":185,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":133,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":219,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":264,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":366,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":74,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":255,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":645,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":179,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":678,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":63,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":352,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":174,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":715,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":518,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":262,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":473,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":177,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":178,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":333,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":693,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":613,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":727,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":182,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":635,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":106,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":144,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":157,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":723,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":402,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":591,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":668,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":89,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":739,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":597,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":528,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":538,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":267,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":387,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":736,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":680,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":335,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":30,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":709,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":315,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":532,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":704,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":206,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":254,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":474,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":69,"org.apache.commons.collections4.map.SingletonMapTest.testClone":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":343,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":232,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":726,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":242,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":26,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":411,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":616,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":410,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":535,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":150,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":316,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":36,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":38,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":52,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":228,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":650,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":428,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":54,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":288,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":354,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":598,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":303,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":43,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":552,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":575,"org.apache.commons.collections4.ListUtilsTest.testHashCode":681,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalEmptyCollectionExists":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":404,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":460,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":485,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":171,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":576,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":45,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":113,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":290,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":600,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":435,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":281,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":498,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":227,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":677,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":131,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":170,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":16,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":361,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":570,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":268,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":245,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":143,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":154,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":251,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":636,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":235,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":735,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":397,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":574,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":417,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":542,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":145,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":81,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":434,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":2,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":295,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":724,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":496,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":390,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":353,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":558,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":582,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":287,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":452,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":513,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":710,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":454,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":550,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":641,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":103,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":628,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":676,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":431,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":412,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":490,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":438,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":455,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":24,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":346,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":700,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":175,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":509,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":603,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":237,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":388,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":449,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":577,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":79,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":396,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":286,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":100,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":544,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":172,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":491,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":685,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":614,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":223,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":252,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":601,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":221,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":497,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":637,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":730,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":216,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":565,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":702,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":467,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":501,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":304,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":247,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":379,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":307,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":457,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":738,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":534,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":561,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":687,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":147,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":53,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":258,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":135,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":338,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":180,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":394,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":309,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":690,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":477,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":643,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":35,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":413,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":461,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":14,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":265,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":711,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":713,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":717,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":393,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":96,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":547,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":62,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":213,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":433,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":633,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":381,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":299,"org.apache.commons.collections4.set.CompositeSetTest.testContains":436,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":384,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":447,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalFullCollectionExists":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":579,"org.apache.commons.collections4.list.TreeListTest.testBug35258":42,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":155,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":555,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":472,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":77,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":20,"org.apache.commons.collections4.ListUtilsTest.testSelect":432,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":205,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":545,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":669,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":201,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":234,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":479,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":683,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":471,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":322,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":306,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":323,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":699,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":493,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":41,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":529,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":360,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":362,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":748,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":640,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":440,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":722,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":470,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":712,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":617,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":166,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":581,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":675,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":195,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":214,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":189,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":244,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":672,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":90,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":604,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":83,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":589,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":97,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":271,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":647,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":714,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":448,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":193,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":142,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":84,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":549,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":23,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":427,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":229,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":329,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":719,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":706,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":367,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":659,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":297,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":733,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":260,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":296,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":426,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":481,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":475,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":557,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":732,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":620,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":132,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":364,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":22,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":159,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":664,"org.apache.commons.collections4.queue.TransformedQueueTest.testSimpleSerialization":32,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNonEmptyCollection":382,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":124,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":270,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":596,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":284,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":422,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":605,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":136,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":667,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":7,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":464,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":220,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":337,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":746,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":231,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":318,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":140,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":12,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":494,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":283,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":233,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":444,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":618,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":230,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":298,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":108,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":564,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":684,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":210,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":114,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":644,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":70,"org.apache.commons.collections4.map.LRUMapTest.testLRU":118,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":60,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":749,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":495,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":697,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":200,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":441,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":563,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":257,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":514,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":334,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":321,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":358,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":222,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":372,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":657,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":734,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":583,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":311,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":584,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":649,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":415,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":8,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":76,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":302,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":595,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":259,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":450,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":508,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":129,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":585,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":377,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":186,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":586,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":671,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":374,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":459,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":625,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":82,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":73,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":520,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":27,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":599,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":688,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":656,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":169,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":556,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":6,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":332,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":423,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":365,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":194,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":516,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":648,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":554},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[0,1],"tindex":"4138ec56-2eb0-11e6-a427-5d9f0fffcc79","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"4139afa7-2eb0-11e6-a427-9b301bd1bb57","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"4139afa8-2eb0-11e6-a427-0d0049807ec7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"4139d6b9-2eb0-11e6-a427-ed7e44d22998","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[36],"tindex":"4139fdca-2eb0-11e6-a427-c1decd907ad8","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"413a24db-2eb0-11e6-a427-6ba89d2c2672","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[37],"tindex":"413a24dc-2eb0-11e6-a427-69e9c6fb0d53","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[38,39,40,41,42,43,44,45,46],"tindex":"413a4bed-2eb0-11e6-a427-4d61035a6531","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[47,48],"tindex":"413a72fe-2eb0-11e6-a427-d967d1e8062a","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"413a72ff-2eb0-11e6-a427-c922b947db57","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[49,50,51,52,53,54,55],"tindex":"413a9a10-2eb0-11e6-a427-9fdea106ce4e","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[56],"tindex":"413ac121-2eb0-11e6-a427-3daec8cfeaab","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[57],"tindex":"413ae832-2eb0-11e6-a427-8f59c7d16e4d","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"413ae833-2eb0-11e6-a427-e936eb386757","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            return entry.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"413b0f44-2eb0-11e6-a427-5984ed8176bd","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"413b0f45-2eb0-11e6-a427-99c4dd4d4dbb","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[111],"tindex":"413b3656-2eb0-11e6-a427-3f337f6418bc","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[112,113],"tindex":"413b5d67-2eb0-11e6-a427-9bf21d7bf477","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[114],"tindex":"413b5d68-2eb0-11e6-a427-937e212141a7","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[115],"tindex":"413b8479-2eb0-11e6-a427-8f07f0ed77a0","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[116],"tindex":"413b847a-2eb0-11e6-a427-f5e8f73fd047","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[117,118,119,120,121,122,123,124,125,126],"tindex":"413bab8b-2eb0-11e6-a427-efb37aad2406","method":{"position":"org.apache.commons.collections4.map.LRUMap:192","type":"CtMethodImpl","sourcecode":"protected void moveToMRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                (int)++;\n                if ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n                    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n                } \n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = entry;\n            } else if (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                throw new java.lang.IllegalStateException((\"Can't move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[127,128,129,130,131],"tindex":"413bf9ac-2eb0-11e6-a427-47efa15426b5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"413c20bd-2eb0-11e6-a427-df72919a9b0a","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[156],"tindex":"413c20be-2eb0-11e6-a427-2f8de302a497","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[157],"tindex":"413c20bf-2eb0-11e6-a427-b3f2e548ee2f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"413c20c0-2eb0-11e6-a427-370bf05ed19d","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[158,159],"tindex":"413c47d1-2eb0-11e6-a427-1b760f59ba9a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:477","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[160,161,162,163,164,165,166,167],"tindex":"413c47d2-2eb0-11e6-a427-4deff72391c0","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[168],"tindex":"413c47d3-2eb0-11e6-a427-5715108a7b63","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[169,170],"tindex":"413c6ee4-2eb0-11e6-a427-9503095c2de8","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"413c6ee5-2eb0-11e6-a427-432714595e66","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[],"tindex":"413c6ee6-2eb0-11e6-a427-5fa441d07105","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if ((coll1.size()) < (coll1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1","coll1":"coll1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"413c95f7-2eb0-11e6-a427-3910836f1007","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[171,172,173,174],"tindex":"413c95f8-2eb0-11e6-a427-35077dbdb242","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"413c95f9-2eb0-11e6-a427-d1db18de5a83","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry != null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[175,176],"tindex":"413cbd0a-2eb0-11e6-a427-053f0ca93a49","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"413cbd0b-2eb0-11e6-a427-ddab0bc9c89a","method":{"position":"org.apache.commons.collections4.list.PredicatedList:98","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"413cbd0c-2eb0-11e6-a427-eb2811aea35e","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[177,178,179,180,181,182,183,184,185,186,187,188],"tindex":"413ce41d-2eb0-11e6-a427-f9b5c8ab1bcf","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[189],"tindex":"413ce41e-2eb0-11e6-a427-5530721e6b04","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"413ce41f-2eb0-11e6-a427-01da759f176c","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[190],"tindex":"413d0b30-2eb0-11e6-a427-e9c741957ee7","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[191],"tindex":"413d0b31-2eb0-11e6-a427-75a6c332ae8f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"413d0b32-2eb0-11e6-a427-7153a6426dea","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,113,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"tindex":"413d3243-2eb0-11e6-a427-9b2c525a8aec","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"tindex":"413d3244-2eb0-11e6-a427-27f5d4ae4c3b","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[288],"tindex":"413d3245-2eb0-11e6-a427-53066eefc4b7","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"413d5956-2eb0-11e6-a427-99daccb6c0db","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[289,290,291,292,97,293],"tindex":"413d5957-2eb0-11e6-a427-796c5225d894","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"413d5958-2eb0-11e6-a427-a7f3e76c8458","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"413d8069-2eb0-11e6-a427-3b2f4c9e3714","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key3"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[294,55,49,50,51,52,295,53,54,296,297,298,299,300],"tindex":"413d806a-2eb0-11e6-a427-41a3b5cfa3aa","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317],"tindex":"413d806b-2eb0-11e6-a427-1d655d161d80","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[318],"tindex":"413da77c-2eb0-11e6-a427-a9c6134a3d0b","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[319],"tindex":"413da77d-2eb0-11e6-a427-51f441e5d3d8","method":{"position":"org.apache.commons.collections4.ListUtils:477","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.LazyList.lazyList(list, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"413da77e-2eb0-11e6-a427-2d8cfc841d7e","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[320,321,322,323,324,325,326,327,328,329,289,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360],"tindex":"413dce8f-2eb0-11e6-a427-fdcfc7d390c6","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381],"tindex":"413dce90-2eb0-11e6-a427-7383c5a8f1ed","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[382,383,384],"tindex":"413dce91-2eb0-11e6-a427-dbee6833a8cb","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[115,385,386],"tindex":"413df5a2-2eb0-11e6-a427-91215c54e1a6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[235,387],"tindex":"413df5a3-2eb0-11e6-a427-694eadc123a3","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 1) {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[388,389],"tindex":"413e1cb4-2eb0-11e6-a427-2dc136ef0b62","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"413e1cb5-2eb0-11e6-a427-4bf830968b41","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"413e43c6-2eb0-11e6-a427-07f17e3d161c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"413e43c7-2eb0-11e6-a427-1d8161b52691","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[390,391,392,393,394,198,395,396,397,398,214],"tindex":"413e43c8-2eb0-11e6-a427-4544ffe19caa","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[399,325,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,91,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471],"tindex":"413e6ad9-2eb0-11e6-a427-1d2c915e92f9","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[472,473],"tindex":"413e6ada-2eb0-11e6-a427-713c7d1c7fd2","method":{"position":"org.apache.commons.collections4.list.TransformedList:119","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[130,127,131,128],"tindex":"413e6adb-2eb0-11e6-a427-ab1674020f4d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[474],"tindex":"413e91ec-2eb0-11e6-a427-570cca28c9af","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (set == null) {\n                throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n            } \n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (((set.size()) > 0) || ((list.size()) > 0)) {\n                throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n            } \n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"413e91ed-2eb0-11e6-a427-6f9ac3eaf6b6","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,250,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,121,554,122,555,556,557,558,559,560,561,562,563,564,565,566,0,1,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582],"tindex":"413e91ee-2eb0-11e6-a427-6d1f6c4ff585","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,385,386,599,599,600,601,601,602,603,604,605,168],"tindex":"413eb8ff-2eb0-11e6-a427-b1d5d4b83613","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:78","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Predicate<?>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n            } \n            for (int int = 0 ; i < (predicates.int) ; i++) {\n                if ((predicates[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl","sourcecode":"h.isInternalNode()"},"failures":[189,606,607,608,609,441,610,611,612,613,614,615,616,617,442,618,619,620,621,622,623],"tindex":"413ee010-2eb0-11e6-a427-27614264c381","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[624,625,592],"tindex":"413ee011-2eb0-11e6-a427-1b632094f172","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[463,626,627,628,629],"tindex":"413ee012-2eb0-11e6-a427-65d7373dcd2f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    if (index < 0) {\n                        throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"413f0723-2eb0-11e6-a427-ebb9074fb846","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[630,631,562,563,632,564,565,633,566,0,1,567,561,634,635,636],"tindex":"413f0724-2eb0-11e6-a427-cf28890075b2","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[637],"tindex":"413f0725-2eb0-11e6-a427-cdcafce7d4a9","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[127,131,128],"tindex":"413f2e36-2eb0-11e6-a427-7d33b7c97cd0","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[386],"tindex":"413f2e37-2eb0-11e6-a427-8533e4edd275","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"413f5548-2eb0-11e6-a427-99cfa97139fd","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[21,638,639,379,640,641,642,643,644,645,47,48,646,647,648,649,650,651,652,155,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670],"tindex":"413f5549-2eb0-11e6-a427-298d9ce4b08e","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[671,672,673,674,420,675,676,677,678,679,680],"tindex":"413f554a-2eb0-11e6-a427-1d9c35a8e831","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"413f7c5b-2eb0-11e6-a427-55f194c98b65","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2065","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isInternalNode())"},"failures":[],"tindex":"413fa36c-2eb0-11e6-a427-1f2eb3f776c8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"413fa36d-2eb0-11e6-a427-5d672eb47f4c","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    if (index < 0) {\n                        throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n                    } \n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[681],"tindex":"413fca7e-2eb0-11e6-a427-f14270d373f4","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"413fca7f-2eb0-11e6-a427-07ca77ffa4fc","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"413fca80-2eb0-11e6-a427-695f290bdfe9","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"413fca81-2eb0-11e6-a427-e73c1f450b06","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"413ff092-2eb0-11e6-a427-cd78d24d2c8e","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[682,683,684,685],"tindex":"413ff093-2eb0-11e6-a427-1defaac2c72a","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[686,687],"tindex":"414017a4-2eb0-11e6-a427-1f070765fa4c","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[688,361,689,690,691,692,693,694,695,696,697,698,699,700,701,702,362,363,364,365,366,367,368,369,370,371,372,373,703,374,375,376,377,704,705,706,707,708,709,710,711,378,712,713,714,715,716,717,173,174,718,719,720,721,722,723,379,640,641,642,643,644,645,47,48,646,647,648,649,650,724,381,725,726,727,728,729,730,731,389,732,733,734,735,736],"tindex":"414017a5-2eb0-11e6-a427-054dfc4ea671","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"41403eb6-2eb0-11e6-a427-69d073f548a5","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"41403eb7-2eb0-11e6-a427-c776f0e9236a","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[737,738,739,740],"tindex":"41403eb8-2eb0-11e6-a427-8f958ffe6d3d","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[741,742,743,744,745,746,747,748,749],"tindex":"414065c9-2eb0-11e6-a427-bb94c7d13cc9","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}