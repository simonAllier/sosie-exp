{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":424,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":834,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":794,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":498,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":823,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":917,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":690,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":685,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":909,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":599,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":719,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":236,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":181,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":545,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":815,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":390,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":696,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":514,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":577,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":865,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":293,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":726,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":358,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":279,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":232,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":788,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":270,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":463,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":25,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":878,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":841,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":123,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":943,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":99,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":871,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":818,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":937,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":838,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":264,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":553,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":94,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":905,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":216,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":541,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":693,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":9,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":41,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":754,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":942,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":186,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":353,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":246,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":852,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":385,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":237,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":287,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":678,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":944,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":229,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":640,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":828,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":628,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":291,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":866,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":61,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":507,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":27,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":927,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":57,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":623,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":192,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":860,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":950,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":432,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":134,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":736,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":934,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":756,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":439,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":37,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":662,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":335,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":940,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":259,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":521,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":607,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":152,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":199,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":946,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":680,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":793,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":163,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":933,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":262,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":600,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":853,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":870,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":34,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":854,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":936,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":64,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":895,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":913,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":307,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":945,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":245,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":24,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":698,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":420,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":269,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":778,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":660,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":97,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":920,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":827,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":569,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":661,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":350,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":810,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":8,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":701,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":672,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":868,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":60,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":275,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":953,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":790,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":663,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":833,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":875,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":419,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":382,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":807,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":655,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":885,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":188,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":347,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":465,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":743,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":225,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":143,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":891,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":304,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":93,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":128,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":496,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":455,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":546,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":843,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":711,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":227,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":512,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":467,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":615,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":518,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":517,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":107,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":654,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":127,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":849,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":692,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":894,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":411,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":383,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":620,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":377,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":208,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":72,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":33,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":53,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":851,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":204,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":864,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":100,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":222,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":764,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":182,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":137,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":393,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":378,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":459,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":776,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":539,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":740,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":651,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":520,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":168,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":368,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":318,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":73,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":750,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":708,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":450,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":193,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":456,"org.apache.commons.collections4.ListUtilsTest.testPartition":2,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":22,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":777,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":638,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":363,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":438,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":175,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":688,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":187,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":922,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":397,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":647,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":812,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":772,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":203,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":729,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":481,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":70,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":52,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":491,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":804,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":331,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":428,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":605,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":947,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":213,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":664,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":862,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":219,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":292,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":289,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":707,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":538,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":769,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":425,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":826,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":510,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":497,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":417,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":590,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":758,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":581,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":659,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":231,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":528,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":76,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":321,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":282,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":54,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":665,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":558,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":91,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":537,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":739,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":370,"org.apache.commons.collections4.list.TreeListTest.testBug35258":164,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":930,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":290,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":313,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":671,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":883,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":784,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":362,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":928,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":929,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":477,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":915,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":384,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":855,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":108,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":210,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":742,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":212,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":908,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":515,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":26,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":306,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":682,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":903,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":596,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":364,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":611,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":593,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":612,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":918,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":836,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":579,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":720,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":919,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":171,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":652,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":755,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":896,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":297,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":490,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":300,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":299,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":298,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":770,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":126,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":207,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":649,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":46,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":925,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":408,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":910,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":115,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":760,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":814,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":154,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":392,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":492,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":768,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":618,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":715,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":889,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":418,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":941,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":839,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":201,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":68,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":470,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":844,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":625,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":795,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":440,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":530,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":391,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":677,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":575,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":697,"org.apache.commons.collections4.map.LRUMapTest.testLRU":505,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":587,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":617,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":583,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":90,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":466,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":856,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":857,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":858,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":560,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":705,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":848,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":923,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":21,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":884,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":444,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":646,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":112,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":741,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":78,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":751,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":218,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":11,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":285,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":95,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":916,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":730,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":904,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":366,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":516,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":832,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":938,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":395,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":544,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":850,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":846,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":240,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":824,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":316,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":911,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":551,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":23,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":847,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":829,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":667,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":462,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":49,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":250,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":669,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":932,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":184,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":473,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":635,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":243,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":494,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":893,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":488,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":588,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":369,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":592,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":196,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":676,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":825,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":952,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":12,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":771,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":486,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":206,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":372,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":380,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":951,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":830,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":806,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":280,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":388,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":209,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":926,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":641,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":723,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":349,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":721,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":589,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":254,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":252,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":113,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":475,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":738,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":949,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":522,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":619,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":88,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":471,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":706,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":555,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":394,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":502,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":375,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":226,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":550,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":643,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":102,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":886,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":819,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":797,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":954,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":556,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":811,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":149,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":650,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":897,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":876,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":460,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":0,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":568,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":267,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":792,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":632,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":51,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":55,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":683,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":586,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":602,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":627,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":119,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":547,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":446,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":773,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":859,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":673,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":722,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":319,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":469,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":527,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":817,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":410,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":616,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":241,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":765,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":404,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":30,"org.apache.commons.collections4.list.TreeListTest.testRemove":160,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":808,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":787,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":873,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":648,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":670,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":578,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":783,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":613,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":15,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":813,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":315,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":415,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":38,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":409,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":557,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":255,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":727,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":343,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":524,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":386,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":805,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":831,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":147,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":452,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":195,"org.apache.commons.collections4.ListUtilsTest.testSubtract":610,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":636,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":735,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":77,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":931,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":434,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":912,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":389,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":85,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":536,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":396,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":333,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":872,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":239,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":767,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":863,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":621,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":900,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":151,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":901,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":899,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":782,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":458,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":563,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":448,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":7,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":803,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":523,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":110,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":914,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":789,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":266,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":591,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":564,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":898,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":106,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":483,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":277,"org.apache.commons.collections4.map.SingletonMapTest.testClone":156,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":263,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":744,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":816,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":559,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":118,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":761,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":443,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":584,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":892,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":161,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":709,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":40,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":867,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":526,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":176,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":580,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":238,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":845,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":202,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":732,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":731,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":430,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":689,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":177,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":702,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":879,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":461,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":622,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":472,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":482,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":717,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":221,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":565,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":798,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":948,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":427,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":326,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":504,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":533,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":429,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":185,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":18,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":802,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":412,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":679,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":130,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":180,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":604,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":861,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":791,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":543,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":437,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":268,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":334,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":39,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":170,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":653,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":525,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":96,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":79,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":357,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":880,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":668,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":882,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":881,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":322,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":785,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":573,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":271,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":133,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":489,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":129,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":684,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":796,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":441,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":775,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":766,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":548,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":59,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":509,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":842,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":346,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":820,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":274,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":699,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":399,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":799,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":614,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":869,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":56,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":479,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":345,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":745,"org.apache.commons.collections4.CollectionUtilsTest.isFull":314,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":501,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":403,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":582,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":691,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":10,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":687,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":837,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":624,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":325,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":162,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":69,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":786,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":561,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":554,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":674,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":114,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":714,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":955,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":401,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":296,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":373,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":633,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":3,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":451,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":728,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":276,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":104,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":734,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":907,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":700,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":101,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":906,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":464,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":902,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":710,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":935,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":360,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":694,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":305,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":921,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":248,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":840,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":666,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":749,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":890,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":178,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":747,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":416,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":757,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":174,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":42,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":121,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":405,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":924,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":675,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":759,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":447,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":713,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":261,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":421,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":835,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":725,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":278,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":414,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":272,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":888,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":67,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":487,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":686,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":877,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":939,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":800,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":874,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":657,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":658,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":454,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":594,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":506,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":695,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":445,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":639,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":457,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":801,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":493,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":542,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":822,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":887,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":597,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":71,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":376,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":36},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1],"tindex":"752b8756-3e3e-11e6-98f6-cdce1cd6bebc","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl","sourcecode":"(size % 2) == 0"},"failures":[2],"tindex":"752bd577-3e3e-11e6-98f6-3fc0839c5918","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if ((size % 2) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"752bd578-3e3e-11e6-98f6-ff194cee8aca","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[3,4,5,6,7,8,9,10,11],"tindex":"752bd579-3e3e-11e6-98f6-ab729a46fe37","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"752bfc8a-3e3e-11e6-98f6-ddee619fc97c","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"752bfc8b-3e3e-11e6-98f6-33f8823fa0a0","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator != null) {\n                {\n                    if (object == null) {\n                        return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[12],"tindex":"752bfc8c-3e3e-11e6-98f6-17b037cee21a","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"752bfc8d-3e3e-11e6-98f6-397791257886","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[49],"tindex":"752c239e-3e3e-11e6-98f6-95b51778ac3c","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"752c239f-3e3e-11e6-98f6-79edc3792704","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"752c23a0-3e3e-11e6-98f6-c356fa42b5ed","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[81,82,83,84],"tindex":"752c23a1-3e3e-11e6-98f6-45daa02dfb75","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"752c70c2-3e3e-11e6-98f6-0d15228f14e2","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"752c97d3-3e3e-11e6-98f6-b9d7e5e26a08","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[85,86],"tindex":"752c97d4-3e3e-11e6-98f6-9b48d62945f1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (a == null)) {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[87,88],"tindex":"752c97d5-3e3e-11e6-98f6-33f6a179e09b","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1083","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"752c97d6-3e3e-11e6-98f6-4b695aa29b50","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(lengthInBits)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[89],"tindex":"752cbee7-3e3e-11e6-98f6-1f93709a7061","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[90,91,92,93],"tindex":"752cbee8-3e3e-11e6-98f6-73483f93b84a","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[94],"tindex":"752ce5f9-3e3e-11e6-98f6-71b32d47715f","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"752ce5fa-3e3e-11e6-98f6-09f7221d9478","method":{"position":"org.apache.commons.collections4.ListUtils:678","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<T> get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            if (listSize < 0) {\n                throw new java.lang.IllegalArgumentException((\"negative size: \" + listSize));\n            } \n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" must not be negative\"));\n            } \n            if (index >= listSize) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" must be less than size \") + listSize));\n            } \n            final int int = index * (int);\n            final int int = java.lang.Math.min((start + (int)), java.util.List<T>.size());\n            return java.util.List<T>.subList(start, end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"752d0d0b-3e3e-11e6-98f6-bdd90e6503d9","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"752d341c-3e3e-11e6-98f6-2d738d6e6cd7","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[95,95,96,96,97],"tindex":"752d341d-3e3e-11e6-98f6-0b1832a41264","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"752d5b2e-3e3e-11e6-98f6-23e0aa402942","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object instanceof java.lang.Object[]) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"752d5b2f-3e3e-11e6-98f6-bdf743c3f4c7","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,61,62,75,77,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"752d5b30-3e3e-11e6-98f6-87dba6119505","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"752d8241-3e3e-11e6-98f6-c5bba17912a8","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return java.util.Collections.synchronizedSortedSet(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[156,15,157,158,159],"tindex":"752d8242-3e3e-11e6-98f6-a3b242dbd702","method":{"position":"org.apache.commons.collections4.map.SingletonMap:221","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return isEqualKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[160,161,162,163,164,165,166,167,168,169],"tindex":"752d8243-3e3e-11e6-98f6-ad56b41750a8","method":{"position":"org.apache.commons.collections4.list.TreeList:493","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> insert(final int index, final E obj) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe <= 0) {\n                return insertOnLeft(indexRelativeToMe, obj);\n            } \n            return insertOnRight(indexRelativeToMe, obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[170],"tindex":"752da954-3e3e-11e6-98f6-cbf720a8d3b0","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (end < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"752da955-3e3e-11e6-98f6-43121a9a9ef2","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[49,171,172],"tindex":"752da956-3e3e-11e6-98f6-a3198ccb2e1e","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[173],"tindex":"752da957-3e3e-11e6-98f6-bfee84ac4be1","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[87,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"tindex":"752da958-3e3e-11e6-98f6-4f79094b25f1","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"752da959-3e3e-11e6-98f6-5195f41ba8dc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:791","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            return node == null ? null : node.getParent(dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[313],"tindex":"752dd06a-3e3e-11e6-98f6-819248cc48de","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[314,315],"tindex":"752dd06b-3e3e-11e6-98f6-21d7baf11828","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"752dd06c-3e3e-11e6-98f6-f348a9757109","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"752dd06d-3e3e-11e6-98f6-b380d6393096","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"752df77e-3e3e-11e6-98f6-ebe31338bff6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>"},"failures":[],"tindex":"752df77f-3e3e-11e6-98f6-4d870d4ba12b","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[12],"tindex":"752df780-3e3e-11e6-98f6-f30ca980b440","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[57],"tindex":"752e1e91-3e3e-11e6-98f6-4bcd3d79d747","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[316,154],"tindex":"752e1e92-3e3e-11e6-98f6-051668c2685e","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"752e1e93-3e3e-11e6-98f6-11c6d1f7afeb","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[317,318],"tindex":"752e1e94-3e3e-11e6-98f6-5db138245bef","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,20,21,23,24,25,27,28,29,30,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,31,32,33,34,369,35,37,370,371,372,373,38,39,41,42,43,45,46,47,48,374,375,376,377,378,379,380,381,382,383],"tindex":"752e1e95-3e3e-11e6-98f6-8ff42178ce73","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"752e45a6-3e3e-11e6-98f6-1d14e8621f99","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450],"tindex":"752e45a7-3e3e-11e6-98f6-87b06da0b34d","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"752e45a8-3e3e-11e6-98f6-6b5615e980b2","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[451],"tindex":"752e45a9-3e3e-11e6-98f6-2fa3811e3987","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[86],"tindex":"752e45aa-3e3e-11e6-98f6-d151f0676a2c","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[452],"tindex":"752e6cbb-3e3e-11e6-98f6-538c0a710299","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[453,454,455,456],"tindex":"752e6cbc-3e3e-11e6-98f6-0b6a50a899cb","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"752e6cbd-3e3e-11e6-98f6-7f759eb7ecd0","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.set(index, comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(index);\n                    } else {\n                        java.util.BitSet.clear(index);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[457,458],"tindex":"752e6cbe-3e3e-11e6-98f6-71ee1634314a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"tindex":"752e6cbf-3e3e-11e6-98f6-17415e1833b3","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"752e93d0-3e3e-11e6-98f6-85e459947b65","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"752e93d1-3e3e-11e6-98f6-b53b51972b0b","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[494],"tindex":"752e93d2-3e3e-11e6-98f6-db38fad18644","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"752e93d3-3e3e-11e6-98f6-3782b6b8fb30","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"752e93d4-3e3e-11e6-98f6-39a0c4420ffe","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[495],"tindex":"752ebae5-3e3e-11e6-98f6-093aba8f0fe0","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"752ebae6-3e3e-11e6-98f6-e3b4bc0b7787","method":{"position":"org.apache.commons.collections4.CollectionUtils:1527","type":"CtMethodImpl","sourcecode":"public static <O extends java.lang.Comparable<? super O>>java.util.List<O> collate(java.lang.Iterable<? extends O> a, java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (a == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (a == null)) {\n                {\n                    return org.apache.commons.collections4.CollectionUtils.collate(a, b, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), true);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[496,497],"tindex":"752ebae7-3e3e-11e6-98f6-8f54268526e2","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[498],"tindex":"752ebae8-3e3e-11e6-98f6-d1c43799bf2e","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:214","type":"CtBinaryOperatorImpl","sourcecode":"get instanceof java.util.Map"},"failures":[499],"tindex":"752ebae9-3e3e-11e6-98f6-69ed925430af","method":{"position":"org.apache.commons.collections4.SplitMapUtils:210","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>org.apache.commons.collections4.IterableMap<K, V> readableMap(final org.apache.commons.collections4.Get<K, V> get) {\n    if (get instanceof java.util.Map) {\n        {\n            if (get == null) {\n                throw new java.lang.IllegalArgumentException(\"Get must not be null\");\n            } \n            if (get instanceof java.util.Map) {\n                return get instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(get)) : org.apache.commons.collections4.MapUtils.iterableMap(((java.util.Map<K, V>)(get)));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(get);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"get":"get"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542],"tindex":"752ee1fa-3e3e-11e6-98f6-61420c41f4dd","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if ((previous.getValue()) == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"752ee1fb-3e3e-11e6-98f6-611791b0b1a2","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            if (object instanceof java.lang.Object[]) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[543,544],"tindex":"752ee1fc-3e3e-11e6-98f6-8d59feadc80f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[545,546,547,548,549,550,421,422,423,424,551,425,426,552,427,553,428,429,430,431,432,433,434,554,436,437,439,440,441,442,443,444,445,446,447,448,555,556,449,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599],"tindex":"752ee1fd-3e3e-11e6-98f6-6b0b6bfc4507","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"752f090e-3e3e-11e6-98f6-a76369129542","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator != null) {\n                {\n                    if (object == null) {\n                        return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[600,601,602,73,603],"tindex":"752f090f-3e3e-11e6-98f6-4ba0c05378ec","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"752f0910-3e3e-11e6-98f6-bfe81dbe1949","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[604,605,606,607,608,609,610,611,612,613,614,615,616,600,617,618,619,620,621,622,601,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,603,651,652,653,654,655,656],"tindex":"752f3021-3e3e-11e6-98f6-3b2bf524d80e","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[657,658,455],"tindex":"752f3022-3e3e-11e6-98f6-858f4fcfe1a9","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[659,660],"tindex":"752f3023-3e3e-11e6-98f6-99cd1c365813","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[661],"tindex":"752f3024-3e3e-11e6-98f6-e9123689770b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[662],"tindex":"752f3025-3e3e-11e6-98f6-a1d7f263cbbd","method":{"position":"org.apache.commons.collections4.list.PredicatedList:102","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"752f5736-3e3e-11e6-98f6-4d4d7178f288","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[663],"tindex":"752f5737-3e3e-11e6-98f6-a1f34cd78ea3","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[664],"tindex":"752f5738-3e3e-11e6-98f6-bf1813c0cfe8","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"752f5739-3e3e-11e6-98f6-5b00c1629afd","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[665],"tindex":"752f573a-3e3e-11e6-98f6-03a0f1256dc6","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[217,218,219,220,666,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"752f573b-3e3e-11e6-98f6-c93739d735a1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:582","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<K>lookup(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[667],"tindex":"752f7e4c-3e3e-11e6-98f6-c14a25d2b4af","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[668],"tindex":"752f7e4d-3e3e-11e6-98f6-117570e5490f","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"752f7e4e-3e3e-11e6-98f6-43e0a6a80de7","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[169,669,670,671,672,673,674],"tindex":"752f7e4f-3e3e-11e6-98f6-6deafdb3e20a","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[675],"tindex":"752f7e50-3e3e-11e6-98f6-b19f8b21af42","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"752fa561-3e3e-11e6-98f6-71394886c75f","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    checkLocked();\n                    java.util.List<java.util.Comparator<E>>.set(index, comparator);\n                    if (reverse == true) {\n                        java.util.BitSet.set(index);\n                    } else {\n                        java.util.BitSet.clear(index);\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[676,6,9,677,678],"tindex":"752fa562-3e3e-11e6-98f6-6f5df03aa520","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:246","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (int int = 0 ; i < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; i++) {\n                synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][i]) {\n                    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][i];\n                    while (n != null) {\n                        if (((n.V) == value) || (((n.V) != null) && (n.V.equals(value)))) {\n                            return true;\n                        } \n                        n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767],"tindex":"752fa563-3e3e-11e6-98f6-6396a431171f","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[768,769,319,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,457,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,458,843,844,845,846],"tindex":"752fa564-3e3e-11e6-98f6-49ac2e9a74d7","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"752fcc75-3e3e-11e6-98f6-53665d13c0fb","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"752fcc76-3e3e-11e6-98f6-2f719cdd4739","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return java.util.Collections.synchronizedSortedSet(set);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[847,848,768,769,849,319,770,771,772,850,773,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,320,321,868,869,272,273,274,275,282,281,284,285,286,287,288,289,290,291,292,870,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,871,872,873,874,13,14,15,16,17,18,875,19,157,876,877,878,879,880,881,882,883,884,313,885,886,368,887,888,889,31,890,32,891,892,33,34,369,35,893,894,895,36,896,897,37,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,381,936,937,938,382,939,940,941,942,943,944,383,945,946,947,948,949,950,951,952,953],"tindex":"752fcc77-3e3e-11e6-98f6-3196745b9dcd","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[954],"tindex":"752fcc78-3e3e-11e6-98f6-2948f5b55eb8","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[955],"tindex":"752fcc79-3e3e-11e6-98f6-e520afdfdad3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:851","type":"CtMethodImpl","sourcecode":"private java.util.SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231777406/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = offsetInBits + lengthInBits;\n            if (offsetLength > (lengthInBits(key))) {\n                throw new java.lang.IllegalArgumentException(((((offsetInBits + \" + \") + lengthInBits) + \" > \") + (lengthInBits(key))));\n            } \n            if (offsetLength == 0) {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this;\n            } \n            return new PrefixRangeMap(key , offsetInBits , lengthInBits);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}