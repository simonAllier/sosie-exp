{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":517,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":703,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":234,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":425,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":340,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":266,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":692,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":327,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":288,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":570,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":654,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":569,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":565,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":45,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":199,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":669,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":525,"org.apache.commons.collections4.CollectionUtilsTest.collect":673,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":539,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":688,"org.apache.commons.collections4.set.TransformedSetTest.testSimpleSerialization":698,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":242,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":169,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":435,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":662,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":479,"org.apache.commons.collections4.CollectionUtilsTest.get":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":617,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":531,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":272,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":532,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":407,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":217,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":177,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":235,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":621,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":132,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":388,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":521,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":471,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":465,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":297,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":226,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":638,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":130,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":628,"org.apache.commons.collections4.CollectionUtilsTest.transform2":57,"org.apache.commons.collections4.CollectionUtilsTest.transform1":56,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":376,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":724,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":415,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":430,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":145,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":336,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":361,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":344,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":24,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":436,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":710,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":542,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":541,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":685,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":691,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":180,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":269,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":731,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":120,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":564,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":584,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":351,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":689,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":221,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":133,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":526,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":671,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":483,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":194,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":164,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":672,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":265,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":373,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":406,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":518,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":720,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":450,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":15,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":515,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":487,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":574,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":346,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":508,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":533,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":71,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":678,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":668,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":325,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":102,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":441,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":80,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":389,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":119,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":602,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":655,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":343,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":440,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":227,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":87,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":321,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":323,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":417,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":625,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":8,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":556,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":457,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":701,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":19,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":229,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsSelfHashCode":700,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":191,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":192,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":190,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":304,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":377,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":454,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":218,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":649,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":666,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":729,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":548,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":635,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":390,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":592,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":302,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":660,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":135,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":378,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":530,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":588,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":243,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":259,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":551,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":188,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":187,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":522,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":663,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":618,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":317,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":239,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":412,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":275,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":616,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":534,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":591,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":646,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":396,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":357,"org.apache.commons.collections4.map.LRUMapTest.testClone":380,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":428,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":358,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":384,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":418,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":639,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":456,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":629,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":709,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":246,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":725,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":90,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":201,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":665,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":577,"org.apache.commons.collections4.CollectionUtilsTest.collateException2":659,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":429,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":482,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":528,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":653,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":459,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":161,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":500,"org.apache.commons.collections4.IteratorUtilsTest.testToList":561,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":562,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":65,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":730,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":651,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":595,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":228,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":268,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":555,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":319,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":4,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":721,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":7,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":52,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":144,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":643,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":176,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":2,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":427,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":356,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":699,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":398,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":437,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":455,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":580,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":369,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":732,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":728,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":136,"org.apache.commons.collections4.map.LinkedMapTest.testReset":392,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":620,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":434,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":527,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":696,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":220,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":683,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":332,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":67,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":313,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":95,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":718,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":576,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":597,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":93,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":694,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":424,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":99,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":108,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":416,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":423,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":134,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":661,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":245,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":126,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":581,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":329,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":312,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":559,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":375,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":309,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":444,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":139,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":271,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":153,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":60,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":674,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":442,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":717,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":367,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":727,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":600,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":644,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":150,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":254,"org.apache.commons.collections4.map.HashedMapTest.testClone":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":488,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":202,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":462,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":485,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":733,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":303,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":311,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":601,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":214,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":675,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":104,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":276,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":632,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":652,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":468,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":349,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":594,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":84,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":451,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":477,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":72,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":420,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":419,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":170,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":421,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":598,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":626,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":520,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":397,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":216,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":293,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":448,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":400,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":447,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":681,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":505,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":722,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":478,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":472,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":583,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":610,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":298,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":432,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":647,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":657,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":91,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":287,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":386,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":547,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":486,"org.apache.commons.collections4.map.LinkedMapTest.testClone":387,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":664,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":711,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":53,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":573,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":208,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":305,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":231,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":262,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":467,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":512,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":244,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":667,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":650,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":631,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalFullCollectionExists":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":502,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":716,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":277,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":679,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":713,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":714,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":499,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":622,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":492,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":619,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":9,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":684,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":506,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":704,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":474,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":225,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":38,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":339,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":372,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":461,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":410,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":181,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalEmptyCollectionExists":697,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":165,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":496,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":494,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":501,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":690,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":143,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":549,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":175,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":537,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":174,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":590,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":504,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":248,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":568,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":676,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":693,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":579,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":117,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":726,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":5,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":363,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":31,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":30,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":355,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":608,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":550,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":289,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":605,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":399,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":578,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":524,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":347,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":374,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":74,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":54,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":460,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":48,"org.apache.commons.collections4.map.LRUMapTest.testLRU":381,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":687,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":345,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":274,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":97,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":342,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":612,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":94,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":464,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":353,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":623,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":484,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":162,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":519,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":263,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":510,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":712,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":168,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":491,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":481,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":223,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":682,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":116,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":383,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":301,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":320,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":563,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":449,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":86},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[],"tindex":"926ce13b-2ea1-11e6-9ee0-b74fab43147d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:438","type":"CtMethodImpl","sourcecode":"protected int hashIndex(final int hashCode, final int dataSize) {\n    if (hashCode < hashCode) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return hashCode & (dataSize - 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"hashCode","end":"hashCode"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"926da48c-2ea1-11e6-9ee0-855b175a5f59","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:41","type":"CtMethodImpl","sourcecode":"private static int mask(final int bit) {\n    if (bit <= 0) {\n        {\n            return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> bit;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[46],"tindex":"926dcb9d-2ea1-11e6-9ee0-f36066f627de","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"926df2ae-2ea1-11e6-9ee0-6512792afc99","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"926df2af-2ea1-11e6-9ee0-e56603d5c476","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if ((key == null) || (key == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key","b":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"926e18c0-2ea1-11e6-9ee0-85fcee5da442","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"926e3fd1-2ea1-11e6-9ee0-a93606167d39","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl","sourcecode":"keys == null"},"failures":[47,48,49,50,51],"tindex":"926e66e2-2ea1-11e6-9ee0-4fd653db2452","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[52,53,54,55],"tindex":"926e66e3-2ea1-11e6-9ee0-af580ee43fea","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:332","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ComparatorChain.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n                return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[56,57],"tindex":"926e8df4-2ea1-11e6-9ee0-83945dd0d7d0","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"926eb505-2ea1-11e6-9ee0-19db7044728c","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Long) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtBinaryOperatorImpl","sourcecode":"retval != 0"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436],"tindex":"926edc16-2ea1-11e6-9ee0-c74148851eeb","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:625","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected void ensureCapacity(final int newCapacity) {\n    if ((newCapacity >= 0) && (bitIndex < newCapacity)) {\n        {\n            if (newCapacity != 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n                    if (newCapacity <= oldCapacity) {\n                        return ;\n                    } \n                    if ((int) == 0) {\n                        int = calculateThreshold(newCapacity, float);\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                    } else {\n                        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                        (int)++;\n                        for (int int = oldCapacity - 1 ; i >= 0 ; i--) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = oldEntries[i];\n                            if (entry != null) {\n                                oldEntries[i] = null;\n                                do {\n                                    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                                    final int int = hashIndex(entry.int, newCapacity);\n                                    entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n                                    newEntries[index] = entry;\n                                    entry = next;\n                                } while (entry != null );\n                            } \n                        }\n                        int = calculateThreshold(newCapacity, float);\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = newEntries;\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"newCapacity"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"926f5147-2ea1-11e6-9ee0-0bab2afe17cf","method":{"position":"org.apache.commons.collections4.SplitMapUtils:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.Put<K, V>.putAll(t);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtBinaryOperatorImpl","sourcecode":"(bitIndex >= 0) && (bitIndex < lengthInBits)"},"failures":[],"tindex":"926f7858-2ea1-11e6-9ee0-71ade5813020","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:625","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected void ensureCapacity(final int newCapacity) {\n    if ((newCapacity >= 0) && (bitIndex < newCapacity)) {\n        {\n            if (newCapacity != 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n                    if (newCapacity <= oldCapacity) {\n                        return ;\n                    } \n                    if ((int) == 0) {\n                        int = calculateThreshold(newCapacity, float);\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                    } else {\n                        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                        (int)++;\n                        for (int int = oldCapacity - 1 ; i >= 0 ; i--) {\n                            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = oldEntries[i];\n                            if (entry != null) {\n                                oldEntries[i] = null;\n                                do {\n                                    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                                    final int int = hashIndex(entry.int, newCapacity);\n                                    entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n                                    newEntries[index] = entry;\n                                    entry = next;\n                                } while (entry != null );\n                            } \n                        }\n                        int = calculateThreshold(newCapacity, float);\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = newEntries;\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"newCapacity","bitIndex":"newCapacity"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[437,438],"tindex":"9270d7e9-2ea1-11e6-9ee0-eb4c15f0cc13","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[92,110],"tindex":"9270fefa-2ea1-11e6-9ee0-e37d9e44d11a","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtBinaryOperatorImpl","sourcecode":"nCopies > 0"},"failures":[439,440,441,442,443],"tindex":"9270fefb-2ea1-11e6-9ee0-d11e627c1ab2","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"9271260c-2ea1-11e6-9ee0-515aefed5748","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[444,445,446,447,448,449,450,451],"tindex":"9271260d-2ea1-11e6-9ee0-df6ab62e0e83","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"tindex":"92714d1e-2ea1-11e6-9ee0-052c27e9a254","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"92714d1f-2ea1-11e6-9ee0-a9d34a2e9d36","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                return containsAll(((org.apache.commons.collections4.Bag<?>)(coll)));\n            } \n            return containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"92714d20-2ea1-11e6-9ee0-03be7af17532","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[468,469,470,471,472,473,474,47,48,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,49,50,514,51,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558],"tindex":"92717431-2ea1-11e6-9ee0-793681c57d41","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[559,560,561],"tindex":"92717432-2ea1-11e6-9ee0-8dfa22898d09","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtBinaryOperatorImpl","sourcecode":"(other.size()) != 1"},"failures":[562,563],"tindex":"92719b43-2ea1-11e6-9ee0-ef35be5ef435","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if ((map.size()) != 1) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"92719b44-2ea1-11e6-9ee0-2535f41a891d","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[564,565,566,567,568],"tindex":"9271c255-2ea1-11e6-9ee0-471d6c2e0b22","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"9271c256-2ea1-11e6-9ee0-7d24ad7bb472","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[205],"tindex":"9271c257-2ea1-11e6-9ee0-d3a543a1bdc6","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key4"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624],"tindex":"9271e968-2ea1-11e6-9ee0-474a7ea2377b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:508","type":"CtMethodImpl","sourcecode":"protected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == null) {\n        {\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            (int)--;\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[625,626,627,628,629,630,631,58,59,60,632,633,634,635,636,637,638,639,640,61,62,63,64,65,66,67,68,69,70,71,72,641,642,643,644,645,646,647,648,649,73,74,75,76,77,78,79,80,81,82,83,84,650,651,652,653,654,655,656,657],"tindex":"92721079-2ea1-11e6-9ee0-ebaeadda1d2b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:200","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"9272107a-2ea1-11e6-9ee0-ef51d8a7e7a6","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[658],"tindex":"9272378b-2ea1-11e6-9ee0-175bb56deb6e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[659,660],"tindex":"9272378c-2ea1-11e6-9ee0-a793de3bcd02","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (b instanceof java.util.Set<?>) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[661,662,663,664,665,666,667],"tindex":"92725e9d-2ea1-11e6-9ee0-4d464e5be2aa","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if ((object instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"92725e9e-2ea1-11e6-9ee0-4f2874010910","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n                    if (integerObject == null) {\n                        return 0;\n                    } \n                    return integerObject.intValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"927285af-2ea1-11e6-9ee0-1f6976c0066a","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"927285b0-2ea1-11e6-9ee0-2f06cbc16932","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[668],"tindex":"9272acc1-2ea1-11e6-9ee0-d1163746bcaa","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[669,670,671,672],"tindex":"9272acc2-2ea1-11e6-9ee0-4948c0149c25","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n                    if (coll == null) {\n                        return 0;\n                    } \n                    return coll.size();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:42","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[673],"tindex":"9272d3d3-2ea1-11e6-9ee0-5bc77c380f86","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (inputIterator == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"inputIterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"9272d3d4-2ea1-11e6-9ee0-51222b87d19d","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n                    if (coll == null) {\n                        return 0;\n                    } \n                    return coll.size();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[674],"tindex":"9272fae5-2ea1-11e6-9ee0-6f2523df2d10","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700],"tindex":"9272fae6-2ea1-11e6-9ee0-2d062d4d3653","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"927321f7-2ea1-11e6-9ee0-b54d486e9307","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtBinaryOperatorImpl","sourcecode":"(intersects.size()) > 0"},"failures":[701],"tindex":"927321f8-2ea1-11e6-9ee0-3f83877582f6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((collection.size()) > 0) {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"intersects":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"92734909-2ea1-11e6-9ee0-f7bd9f9cb00f","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9273490a-2ea1-11e6-9ee0-3b2e16e12ce6","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n                    if (integerObject == null) {\n                        return 0;\n                    } \n                    return integerObject.intValue();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9273701b-2ea1-11e6-9ee0-a5bafbe4bd97","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[702],"tindex":"9273701c-2ea1-11e6-9ee0-1760e6ff8499","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if (b == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"position == null"},"failures":[],"tindex":"9273972d-2ea1-11e6-9ee0-6df84d6c549d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Byte"},"failures":[703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721],"tindex":"9273be3e-2ea1-11e6-9ee0-5184c3b52757","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Byte) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[722,723,724],"tindex":"9273e54f-2ea1-11e6-9ee0-075a555aba3f","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[725,668,726,727,728,729,730,731,567,568,732],"tindex":"9273e550-2ea1-11e6-9ee0-9f9243458734","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl","sourcecode":"(callCounter) == 0"},"failures":[733],"tindex":"9273e551-2ea1-11e6-9ee0-1bf2ed13d041","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (start == 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"9273e552-2ea1-11e6-9ee0-7db8f30242b1","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"92740c63-2ea1-11e6-9ee0-e945c94e7cde","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:291","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"92740c64-2ea1-11e6-9ee0-114c682d2599","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[533,537,547,550,551,554,555,556,557,558],"tindex":"92740c65-2ea1-11e6-9ee0-711928590388","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":59,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}