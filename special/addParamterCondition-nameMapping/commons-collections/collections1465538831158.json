{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":8,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":103,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testSerializeDeserializeThenCompare":463,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":544,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":664,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":689,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":45,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":348,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":121,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":356,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":632,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":210,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":646,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":165,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":645,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":191,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":85,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":266,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":500,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":494,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":391,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":582,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":229,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":428,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":505,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":436,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":656,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":2,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":186,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":611,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":707,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":383,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":385,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":384,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":205,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":536,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":416,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":477,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":282,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":68,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":221,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":620,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":35,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":101,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":433,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":263,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":548,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":72,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":242,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":180,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":142,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":698,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":190,"org.apache.commons.collections4.CollectionUtilsTest.select":595,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":422,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":188,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":224,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":200,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":641,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":637,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":705,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":671,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":388,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":503,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":448,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":236,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":344,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":407,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":634,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":708,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":131,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":233,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":392,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":26,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":684,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":160,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":464,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":643,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":73,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":245,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":644,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":246,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":424,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":244,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":25,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":460,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":521,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":350,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":48,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":305,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":401,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":718,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":508,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":351,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":458,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":493,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":157,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":193,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":96,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":134,"org.apache.commons.collections4.map.CompositeMapTest.testPut":581,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":597,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":268,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":173,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":530,"org.apache.commons.collections4.map.CompositeMapTest.testGet":580,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":304,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":630,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":146,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":230,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":410,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":609,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":631,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":187,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":419,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":90,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":271,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":91,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":78,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":358,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":651,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":592,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":135,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":621,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":484,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":492,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":284,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":545,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":476,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":375,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":569,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":570,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":14,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":618,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":699,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":366,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":426,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":683,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":427,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":409,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":658,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":32,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":594,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":606,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":532,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":80,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":700,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":490,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":587,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":38,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":34,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":614,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":89,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":327,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":520,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":642,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":143,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":566,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":565,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":608,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":129,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":281,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":203,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":567,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":181,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":288,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":318,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":287,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":286,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":553,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":202,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":182,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":179,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":19,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":342,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":116,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":94,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":495,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":159,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":267,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":507,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":627,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":270,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":397,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":212,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":299,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":256,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":298,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":297,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":125,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":686,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":86,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":665,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":141,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":63,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":412,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":250,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":466,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":474,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":654,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":376,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":676,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":67,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":145,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":389,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":289,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":513,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":571,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":308,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":225,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":515,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":151,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":283,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":223,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":226,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":666,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":714,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":542,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":457,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":471,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":52,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":260,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":601,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":648,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":164,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":690,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":628,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":681,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":238,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":148,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":199,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":554,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":197,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":541,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":114,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":709,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":105,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":310,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":311,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":128,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":404,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":540,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":166,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":139,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":442,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":84,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":430,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":446,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":431,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":675,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":479,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectHashCodeEqualsContract":462,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":680,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":622,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":679,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":502,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":113,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":239,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":352,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":527,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":232,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":546,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":638,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":228,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":280,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":584,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":583,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":610,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":41,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":213,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":524,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":660,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":219,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":122,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":189,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":619,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":616,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":706,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":688,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":353,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":534,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":561,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":633,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":669,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":9,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":682,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":70,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":277,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":511,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":247,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":169,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":562,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":590,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":406,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":523,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":456,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":499,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":87,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":241,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":104,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":261,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":555,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":514,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":66,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":262,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":600,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":320,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":321,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":295,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":322,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":640,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":602,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":722,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":723,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":483,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":303,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":550,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":663,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":720,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":537,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":662,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":721,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":572,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":657,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":579,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":704,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":394,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":589,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":712,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":697,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":77,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":315,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":605,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":27,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testObjectEqualsSelf":461,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":650,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":50,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":396,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":167,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":692,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":140,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":585,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":693,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":214,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":300,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":362,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":636,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":21,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":552,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":593,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":24,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":563,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":577,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":578,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":97,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":237,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":309,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":132,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":363,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":365,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":264,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":314,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":434,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":343,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":624,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":74,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":326,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":374,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":13,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":687,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":259,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":522,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":124,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":519,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":668,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":17,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":482,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":61,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":234,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":512,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":596,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":222,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":653,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":673,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":296,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":599,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":415,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":604,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":0,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":373,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":372,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":216,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":371,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":539,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":420,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":423,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":485,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":557,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":3,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":586,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":136,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":603,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":235,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":659,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":672,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":655,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":475,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":382,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":307,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":359,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":360,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":615,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":509,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":588,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":278,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":529,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":437,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":258,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":439,"org.apache.commons.collections4.set.CompositeSetTest.testContains":591,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":240,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":317,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":538,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":717,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":55,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":184,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":531,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":558,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":149,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":211,"org.apache.commons.collections4.ListUtilsTest.testSelect":472,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":501,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":449,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":4,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":497,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":177,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":154,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":106,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":652,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":453,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":598,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":469,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":573,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":575,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":107,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":491,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":163,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":613,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":176,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":451,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":452,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":337,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":291,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":357,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":564,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":243,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":349,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":559,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":99,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":560,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":425,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":443,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":192,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":98,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":185,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":510,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":694,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":465,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":696,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":198,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":380,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":158,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":369,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":617,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":152,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":444,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":279,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":504,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":150,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":306,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":217,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":395,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":206,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":323,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":378,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":695,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":347,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":10,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":248,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":703,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":498,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":119,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":370,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":418,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":438,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":368,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":715,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":11,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":345,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":607,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":516,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":435,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":467,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":535,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":319,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":526,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":488,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":528,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":118,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":647,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":144,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":661,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":525,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":204,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":60,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":543,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":413,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":506,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":417,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":54,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":341,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":133,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":470,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":16,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":496,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":421,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":201,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":547,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":28,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":183,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":381,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":625,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":130,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":208,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":377,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":691,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":719,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":518,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":126,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":313,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":390,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":265,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":612,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":710,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":551,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":487,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":252,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":147,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":402,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":110,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":549,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":153,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":450,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":674,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":39,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":713,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":481,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":81,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":339,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":56,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":533,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":629,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":440,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":88,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":195,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":716},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"91e22c87-2ed1-11e6-8d45-b70cf2f663d6","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1],"tindex":"91e316e8-2ed1-11e6-8d45-2de5466ef368","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"91e316e9-2ed1-11e6-8d45-91fc331a2291","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"91e33dfa-2ed1-11e6-8d45-81ea584af143","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[80,81],"tindex":"91e38c1b-2ed1-11e6-8d45-41772f9e5176","method":{"position":"org.apache.commons.collections4.set.TransformedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[82],"tindex":"91e3b32c-2ed1-11e6-8d45-2d1e2cf9fedd","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"91e3b32d-2ed1-11e6-8d45-cf59f96b178f","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"91e3da3e-2ed1-11e6-8d45-d1f4e5eca6e1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"91e4014f-2ed1-11e6-8d45-63f56e01137f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"91e40150-2ed1-11e6-8d45-5ff6bfafc66e","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[83],"tindex":"91e42861-2ed1-11e6-8d45-eba64b0739e4","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"91e47682-2ed1-11e6-8d45-b31ebfbc8ca6","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"91e49d93-2ed1-11e6-8d45-95c0afceb9f9","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"91e4c4a4-2ed1-11e6-8d45-79f1b7514567","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[101],"tindex":"91e512c5-2ed1-11e6-8d45-8da8c6e224e6","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"91e512c6-2ed1-11e6-8d45-6506bc653b38","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"91e512c7-2ed1-11e6-8d45-df9320933700","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"91e539d8-2ed1-11e6-8d45-33994542f5b1","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[102,103,104,105,106,107,108,109,110,111],"tindex":"91e539d9-2ed1-11e6-8d45-53b59616a52c","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        {\n            return K[][index];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[112,113,114,115,116,117,118,119,120,121,122],"tindex":"91e539da-2ed1-11e6-8d45-0baecff8d5e0","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[123,123,124,124,125],"tindex":"91e560eb-2ed1-11e6-8d45-952ae9d9fc15","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[103,102],"tindex":"91e560ec-2ed1-11e6-8d45-ed46b18d7b82","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"91e587fd-2ed1-11e6-8d45-c5ca650288bc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[126,127,128],"tindex":"91e587fe-2ed1-11e6-8d45-73a1b5a45216","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"91e587ff-2ed1-11e6-8d45-03a30b1b09a1","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[149,150],"tindex":"91e5ae10-2ed1-11e6-8d45-257202dcf99b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"91e5ae11-2ed1-11e6-8d45-4727caf979cc","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl","sourcecode":"expirationTimeObject != null"},"failures":[151,152,153],"tindex":"91e5d522-2ed1-11e6-8d45-c3a3f2a1e1ea","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject != null) {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"expirationTimeObject"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[104,105,102,103],"tindex":"91e5d523-2ed1-11e6-8d45-bff7b7e50f51","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[154],"tindex":"91e5d524-2ed1-11e6-8d45-c1ff06ffbc2f","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[155,156,157,158],"tindex":"91e5fc35-2ed1-11e6-8d45-21ff87ad392a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[159,160],"tindex":"91e5fc36-2ed1-11e6-8d45-a1fdb4e21b93","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[161],"tindex":"91e5fc37-2ed1-11e6-8d45-bb5333eb958f","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"91e62348-2ed1-11e6-8d45-c3937f181781","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[162,163],"tindex":"91e62349-2ed1-11e6-8d45-7b410bc81379","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[164,165,166],"tindex":"91e6234a-2ed1-11e6-8d45-ab5208ec0cde","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[167],"tindex":"91e64a5b-2ed1-11e6-8d45-a3e515a0bf65","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[102,103],"tindex":"91e64a5c-2ed1-11e6-8d45-91a2248f0a0f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[168,169,170,171,172,173,174,175],"tindex":"91e64a5d-2ed1-11e6-8d45-b9c0c0aff518","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"91e6716e-2ed1-11e6-8d45-894548b438e5","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"91e6716f-2ed1-11e6-8d45-b324546c7894","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[176,177],"tindex":"91e69880-2ed1-11e6-8d45-a70212ab4e81","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[178],"tindex":"91e69881-2ed1-11e6-8d45-e920ce54527d","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"91e6bf92-2ed1-11e6-8d45-1b4432d239f4","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"91e6bf93-2ed1-11e6-8d45-2b14556094d9","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1051","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[179,180,181,182,183,184,185,186,187],"tindex":"91e6bf94-2ed1-11e6-8d45-29855dc0a116","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < startIndex) || (index > endIndex)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"91e6e6a5-2ed1-11e6-8d45-630b4b5d670b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"91e6e6a6-2ed1-11e6-8d45-7d3f429c2a05","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"91e70db7-2ed1-11e6-8d45-513599fca4a7","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[104,105,102,103],"tindex":"91e70db8-2ed1-11e6-8d45-6f32d2d8990f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"91e70db9-2ed1-11e6-8d45-5de93143f8bb","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"91e734ca-2ed1-11e6-8d45-613d346b2c54","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"91e734cb-2ed1-11e6-8d45-89105fccafa8","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[188,189],"tindex":"91e734cc-2ed1-11e6-8d45-3144a5b68662","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[190],"tindex":"91e75bdd-2ed1-11e6-8d45-995b75248a72","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"91e75bde-2ed1-11e6-8d45-0f016bcec86f","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"91e75bdf-2ed1-11e6-8d45-d5e4cc50de9a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[191],"tindex":"91e782f0-2ed1-11e6-8d45-612d3ce15863","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasNext()) == false"},"failures":[],"tindex":"91e782f1-2ed1-11e6-8d45-b5e67aff8e89","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"91e782f2-2ed1-11e6-8d45-cf83472eecbf","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[192,193],"tindex":"91e782f3-2ed1-11e6-8d45-33b0792ab564","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[194],"tindex":"91e7aa04-2ed1-11e6-8d45-d70a2c3a1470","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(list));\n                return tmpList;\n            } \n            return new org.apache.commons.collections4.list.UnmodifiableList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"tindex":"91e7aa05-2ed1-11e6-8d45-d58c1ae615c4","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[],"tindex":"91e7aa06-2ed1-11e6-8d45-a7898a22ba02","method":{"position":"org.apache.commons.collections4.CollectionUtils:1689","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        {\n            return org.apache.commons.collections4.ListUtils.removeAll(collection, remove);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[229],"tindex":"91e7d117-2ed1-11e6-8d45-6d8dcb1e1b8e","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:141","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.java.util.Iterator<? extends E> = iterator;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,84,259,260,261,262,263,264,265,266,267,268,269,270,89,90,91,271,272,273,92,274,275,276,277,278,279,280,281,282,283,284,285,104,33,36,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,152,331,332,333,334,335,336,337,338,339,340,93,341,342,343,344,345,346,347,348,97,98,99,349,350,351,100,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"tindex":"91e7d118-2ed1-11e6-8d45-b18eb3c87c19","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"tindex":"91e7f829-2ed1-11e6-8d45-2b74a0082d22","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[460,461,462,463],"tindex":"91e7f82a-2ed1-11e6-8d45-2bbb5f28c938","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[464,465,466,467,468,469,470],"tindex":"91e81f3b-2ed1-11e6-8d45-899b46643560","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"91e81f3c-2ed1-11e6-8d45-ad7e69e927ae","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtVariableReadImpl","sourcecode":"includeDuplicates"},"failures":[471],"tindex":"91e81f3d-2ed1-11e6-8d45-399045478cdc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1588","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c, final boolean includeDuplicates) {\n    if (includeDuplicates) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n            } \n            if (c == null) {\n                throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n            } \n            final int int = (a instanceof java.util.Collection<?>) && (b instanceof java.util.Collection<?>) ? java.lang.Math.max(1, ((((java.util.Collection<?>)(a)).size()) + (((java.util.Collection<?>)(b)).size()))) : 10;\n            final java.util.Iterator<O> java.util.Iterator<O> = new org.apache.commons.collections4.iterators.CollatingIterator<O>(c , a.iterator() , b.iterator());\n            if (includeDuplicates) {\n                return org.apache.commons.collections4.IteratorUtils.toList(iterator, totalSize);\n            } else {\n                final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(totalSize);\n                O O = null;\n                while (iterator.hasNext()) {\n                    final O O = iterator.next();\n                    if ((lastItem == null) || (!(lastItem.equals(item)))) {\n                        mergedList.add(item);\n                    } \n                    lastItem = item;\n                }\n                mergedList.trimToSize();\n                return mergedList;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"includeDuplicates":"includeDuplicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[330,152,331,332,333,334,335,336,337,338,339,340],"tindex":"91e8464e-2ed1-11e6-8d45-2f90318cd050","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            removeIfExpired(key, now());\n            return super.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"91e8464f-2ed1-11e6-8d45-fbb297e9c2de","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[472],"tindex":"91e84650-2ed1-11e6-8d45-a52048d7950b","method":{"position":"org.apache.commons.collections4.ListUtils:186","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> select(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.select(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"91e86d61-2ed1-11e6-8d45-ff50d9b71743","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[473],"tindex":"91e86d62-2ed1-11e6-8d45-e153696ff4db","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"tindex":"91e89473-2ed1-11e6-8d45-554133cfbbe8","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"91e89474-2ed1-11e6-8d45-195d1b66d661","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[490,155,156,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,163,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,158,525,526,527,528],"tindex":"91e8bb85-2ed1-11e6-8d45-8973dc2b23b9","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        {\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"91e8bb86-2ed1-11e6-8d45-a1a47bdea4f4","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557],"tindex":"91e8bb87-2ed1-11e6-8d45-9f483d0faf55","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[558],"tindex":"91e8bb88-2ed1-11e6-8d45-cb7a3fdbbd2f","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"91e8e299-2ed1-11e6-8d45-1d81de97980b","method":{"position":"org.apache.commons.collections4.IteratorUtils:1052","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> getIterator(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return org.apache.commons.collections4.IteratorUtils.emptyIterator();\n            } \n            if (obj instanceof java.util.Iterator) {\n                return ((java.util.Iterator<?>)(obj));\n            } \n            if (obj instanceof java.util.Collection) {\n                return ((java.util.Collection<?>)(obj)).iterator();\n            } \n            if (obj instanceof java.lang.Object[]) {\n                return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(obj)));\n            } \n            if (obj instanceof java.util.Enumeration) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n            } \n            if (obj instanceof java.util.Map) {\n                return ((java.util.Map<?, ?>)(obj)).values().iterator();\n            } \n            if (obj instanceof org.w3c.dom.NodeList) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(obj)));\n            } \n            if (obj instanceof org.w3c.dom.Node) {\n                return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(obj)));\n            } \n            if (obj instanceof java.util.Dictionary) {\n                return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(obj)).elements());\n            } else if (obj.getClass().isArray()) {\n                return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(obj);\n            } \n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = obj.getClass().getMethod(\"iterator\", ((java.lang.Class[])(null)));\n                if (java.util.Iterator.java.util.Iterator.java.lang.Class.isAssignableFrom(method.getReturnType())) {\n                    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))));\n                    if (it != null) {\n                        return it;\n                    } \n                } \n            } catch (final java.lang.RuntimeException e) {\n            } catch (final java.lang.NoSuchMethodException e) {\n            } catch (final java.lang.IllegalAccessException e) {\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n            }\n            return org.apache.commons.collections4.IteratorUtils.singletonIterator(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"91e8e29a-2ed1-11e6-8d45-87dcd9b5caed","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[559,560,561,123,123,562,124,124,125,563,564],"tindex":"91e909ab-2ed1-11e6-8d45-dbce26686f02","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"91e909ac-2ed1-11e6-8d45-a5f50c03c21b","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"91e909ad-2ed1-11e6-8d45-cbb174d80058","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"91e909ae-2ed1-11e6-8d45-676869eaf6eb","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[2,3,4,5,6,7,8,9,565,566,567,568,569,570,571,10,572,65,66,67,68,69,70,71,72,573,574,575,576,577,578,579,73],"tindex":"91e930bf-2ed1-11e6-8d45-cb516671ebca","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"91e930c0-2ed1-11e6-8d45-3556edd61241","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[580,581,582,583,584,585,586,587,472,588,589,590,591,592,593,594,595,596],"tindex":"91e957d1-2ed1-11e6-8d45-7f50953cdd3f","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"91e957d2-2ed1-11e6-8d45-498e96e83fda","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[597,598,599,600,601,602,603,604,605,606,607,608,609],"tindex":"91e957d3-2ed1-11e6-8d45-3377c817be87","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"91e97ee4-2ed1-11e6-8d45-81865b66779d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:350","type":"CtMethodImpl","sourcecode":"private boolean selectR(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>> reference) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((h.int) <= bitIndex) {\n                if (!(h.isEmpty())) {\n                    reference.set(h);\n                    return false;\n                } \n                return true;\n            } \n            if (!(isBitSet(key, h.int, lengthInBits))) {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            } else {\n                if (selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference)) {\n                    return selectR(h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, h.int, key, lengthInBits, reference);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[610],"tindex":"91e97ee5-2ed1-11e6-8d45-154f258f2c98","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"91e9a5f6-2ed1-11e6-8d45-f590c8c3fc6d","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[611,612,613,614,615,616],"tindex":"91e9a5f7-2ed1-11e6-8d45-7b4ee21d4f27","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[617,618,619,9,568,569,620,621,622,623,571,624,625,626,627,628,629,20,630,631,632,633,634,635,636,637,638,639,640,641,642,29,643,644,645,646,647,648,649,650,651,652,105,106,107,108,653,654,655,38,286,287,656,657,289,290,291,292,293,294,658,659,660,661,47,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,56,679,680,681,682,683,684,685,686,687,688,689,690,691,63,692,693,694,695,696,697,698,699,700,701,702,703,704,73,72,576,577,705,706,707,708,579,709,710,711,712,713,714,715,716,717,718,719,720],"tindex":"91e9a5f8-2ed1-11e6-8d45-e374a9946716","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous != null) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"previous"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[176],"tindex":"91e9cd09-2ed1-11e6-8d45-3db00095870b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[442,443,444,445,446,447,448,449,450,721,722,723,451,452,453,456],"tindex":"91e9cd0a-2ed1-11e6-8d45-b7e0bd0ce38c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}