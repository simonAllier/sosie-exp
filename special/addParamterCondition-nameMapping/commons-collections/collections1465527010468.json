{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":35,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":26,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":63,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":64,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":76,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":92,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":77,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":83,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":0,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":32,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":28,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":31,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":55,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":27,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":61,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":9,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":94,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":79,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":66,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":91,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":93,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":33,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":21,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":50,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":88,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":12,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":84,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":5,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":58,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":62,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":81,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":85,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":67,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":15,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":25,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":34,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":54,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":59,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":36,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":47,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":37,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":68,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":2,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":4,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":11,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":86,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":78,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":18,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":13,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":14,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":22,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":8,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":38,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":49,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":43,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":29,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":7,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":6,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":23,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":1,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":19,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":52,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":89,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":90,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":65,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":70,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":24,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":95},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[0],"tindex":"0c33dd9d-2eb6-11e6-8ee4-c1f76571b776","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[1,2],"tindex":"0c34c7fe-2eb6-11e6-8ee4-ad6c18ee4ac4","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"0c34ef0f-2eb6-11e6-8ee4-b9a28bd3633e","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return decorated().retainAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"0c34ef10-2eb6-11e6-8ee4-6381134f4ab3","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[23],"tindex":"0c351621-2eb6-11e6-8ee4-c9fe428bd7e0","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[24],"tindex":"0c353d32-2eb6-11e6-8ee4-cd1a62cc4c66","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtBinaryOperatorImpl","sourcecode":"(start.predecessor) == null"},"failures":[],"tindex":"0c353d33-2eb6-11e6-8ee4-9d6bae4f4fdf","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"h","predecessor":"h"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"0c35b264-2eb6-11e6-8ee4-af9d30e35d17","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[25],"tindex":"0c35b265-2eb6-11e6-8ee4-c99b05fb03e3","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[26,27,28,29,30,31],"tindex":"0c35d976-2eb6-11e6-8ee4-e3bb33bf1213","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"0c360087-2eb6-11e6-8ee4-f9ea3521533f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[32],"tindex":"0c360088-2eb6-11e6-8ee4-ed73f97966ea","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"0c362799-2eb6-11e6-8ee4-f72ce6e63ffc","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1015","type":"CtMethodImpl","sourcecode":"private void doRedBlackDeleteFixup(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> replacementNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (replacementNode == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(replacementNode, dataElement)) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = replacementNode;\n                    while ((currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getParent(currentNode, dataElement), dataElement);\n                            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                                rotateLeft(getParent(currentNode, dataElement), dataElement);\n                                siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                            } \n                            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                                currentNode = getParent(currentNode, dataElement);\n                            } else {\n                                if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                                    rotateRight(siblingNode, dataElement);\n                                    siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                                } \n                                copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                                rotateLeft(getParent(currentNode, dataElement), dataElement);\n                                currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                            }\n                        } else {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                                rotateRight(getParent(currentNode, dataElement), dataElement);\n                                siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                            } \n                            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                                currentNode = getParent(currentNode, dataElement);\n                            } else {\n                                if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                                    rotateLeft(siblingNode, dataElement);\n                                    siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                                } \n                                copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                                rotateRight(getParent(currentNode, dataElement), dataElement);\n                                currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                            }\n                        }\n                    }\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(currentNode, dataElement);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"replacementNode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[],"tindex":"0c3711fa-2eb6-11e6-8ee4-7503426bb845","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.lang.String) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:113","type":"CtBinaryOperatorImpl","sourcecode":"keyTransformer == null"},"failures":[],"tindex":"0c37601b-2eb6-11e6-8ee4-e9f626040134","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"0c37601c-2eb6-11e6-8ee4-f36cb61f2321","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1015","type":"CtMethodImpl","sourcecode":"private void doRedBlackDeleteFixup(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> replacementNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (replacementNode == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(replacementNode, dataElement)) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = replacementNode;\n                    while ((currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getParent(currentNode, dataElement), dataElement);\n                            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                                rotateLeft(getParent(currentNode, dataElement), dataElement);\n                                siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                            } \n                            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                                currentNode = getParent(currentNode, dataElement);\n                            } else {\n                                if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                                    rotateRight(siblingNode, dataElement);\n                                    siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                                } \n                                copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                                rotateLeft(getParent(currentNode, dataElement), dataElement);\n                                currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                            }\n                        } else {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                                rotateRight(getParent(currentNode, dataElement), dataElement);\n                                siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                            } \n                            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                                currentNode = getParent(currentNode, dataElement);\n                            } else {\n                                if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                                    rotateLeft(siblingNode, dataElement);\n                                    siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                                } \n                                copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                                rotateRight(getParent(currentNode, dataElement), dataElement);\n                                currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                            }\n                        }\n                    }\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(currentNode, dataElement);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"replacementNode"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[46],"tindex":"0c37d54d-2eb6-11e6-8ee4-671e26710134","method":{"position":"org.apache.commons.collections4.ListUtils:531","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b) {\n    if (a == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ListUtils.longestCommonSubsequence(a, b, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"0c37fc5e-2eb6-11e6-8ee4-cf9346a6db6c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            node.setValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[],"tindex":"0c38236f-2eb6-11e6-8ee4-55152a009ce7","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"0c382370-2eb6-11e6-8ee4-fbe09912ced3","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"0c384a81-2eb6-11e6-8ee4-5731b5c35d80","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[71],"tindex":"0c387192-2eb6-11e6-8ee4-e5ae5b36623a","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[72],"tindex":"0c387193-2eb6-11e6-8ee4-c5e7213c2492","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[73,74],"tindex":"0c3898a4-2eb6-11e6-8ee4-b331d65bfc93","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[75,76,77,78,79,80,81,82,83],"tindex":"0c3898a5-2eb6-11e6-8ee4-1f5ca635a8f7","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                if (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) {\n                    return true;\n                } \n                return (object == (org.apache.commons.collections4.collection.SynchronizedCollection.this)) || (decorated().equals(object));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[84],"tindex":"0c38bfb6-2eb6-11e6-8ee4-23648c3cf094","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"0c38bfb7-2eb6-11e6-8ee4-81e89c1ab259","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[85],"tindex":"0c38bfb8-2eb6-11e6-8ee4-6f19c9d00540","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[86],"tindex":"0c38e6c9-2eb6-11e6-8ee4-331b4dfa58c5","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[87],"tindex":"0c38e6ca-2eb6-11e6-8ee4-cdd0158d4d13","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0c38e6cb-2eb6-11e6-8ee4-3b39746f4627","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[88],"tindex":"0c390ddc-2eb6-11e6-8ee4-8b24435d7012","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"0c390ddd-2eb6-11e6-8ee4-53f08ea9cd70","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[89,90,91,92,93],"tindex":"0c390dde-2eb6-11e6-8ee4-c737c3a0f8ac","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[94,95],"tindex":"0c3934ef-2eb6-11e6-8ee4-db91af92cd5d","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"0c3934f0-2eb6-11e6-8ee4-1baab93869d9","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0c395c01-2eb6-11e6-8ee4-1f0797b513f6","method":{"position":"org.apache.commons.collections4.IteratorUtils:744","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> loopingIterator(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingIterator<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":37,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}