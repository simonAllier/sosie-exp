{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":446,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalEmptyCollectionExists":648,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":103,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":601,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":264,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":397,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":681,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":231,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":832,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":503,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":745,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":657,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":454,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":347,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":704,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":126,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":412,"org.apache.commons.collections4.CollectionUtilsTest.get":385,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":817,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalFullCollectionExists":646,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":415,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":616,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":823,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":450,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":627,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":786,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":402,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsContract":580,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":399,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":287,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":759,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":172,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":240,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":729,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":97,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":717,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectEqualsSelf":645,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":481,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":845,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":390,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":741,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":110,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":313,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":194,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":118,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":181,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":242,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":721,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":820,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":96,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":254,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":58,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":169,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":850,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":464,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":689,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":516,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":539,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":205,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":332,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":113,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":173,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":818,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":223,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":75,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":414,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":702,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":267,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":795,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":289,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":756,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":535,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":830,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":696,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":726,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":371,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":386,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":256,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":713,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":311,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":302,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":804,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":564,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":565,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":432,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":171,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":307,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":345,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":379,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":142,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":723,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":272,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":712,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":479,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":28,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":617,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":811,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":299,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":691,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":716,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":4,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":813,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":779,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":229,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":428,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":463,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":286,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":606,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":486,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":615,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":751,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":816,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":623,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":215,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":317,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":354,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":247,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":88,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":201,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":380,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":381,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":382,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":509,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":566,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":589,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSimpleSerialization":852,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":706,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":860,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":274,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":839,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":305,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":520,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":819,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":626,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":413,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":404,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":728,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":531,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":574,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":632,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":733,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":170,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":443,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":774,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":785,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":803,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":373,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":679,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":445,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":686,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":778,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":620,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":43,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":722,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmpty":568,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":659,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":298,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":688,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":22,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":700,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsSelfHashCode":651,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":440,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":368,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":226,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":734,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":604,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":559,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":270,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":769,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":519,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":497,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":213,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":350,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":536,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":610,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":361,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":360,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":284,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":359,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":310,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":534,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":585,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":550,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":753,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":108,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":828,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":17,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":612,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":84,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":101,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":94,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":665,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":841,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":724,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":547,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":809,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":548,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":698,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":436,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":222,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":715,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":67,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEqualsNull":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":65,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":187,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":80,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":309,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":791,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":834,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":342,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":73,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":159,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":370,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":199,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":210,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyIterator":642,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.SetUtilsTest.testHashCode":838,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":835,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":357,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":660,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":348,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":449,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":318,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":154,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":705,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":411,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":266,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":257,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":605,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":709,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":66,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":588,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":766,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":764,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":78,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":844,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":707,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":708,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":239,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":277,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":692,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSerializeDeserializeThenCompare":582,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":179,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":792,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":544,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":545,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":546,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":744,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":427,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":739,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":294,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":38,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":750,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":251,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":431,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":245,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":56,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":419,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":836,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":421,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":420,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":133,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":837,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":123,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":755,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":5,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":746,"org.apache.commons.collections4.list.GrowthListTest.testSimpleSerialization":810,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":603,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":672,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":11,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":185,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":8,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":42,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":654,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":772,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":720,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":625,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":163,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":557,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":0,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":840,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":824,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectEqualsSelf":575,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":183,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":203,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":808,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":246,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":303,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsContract":650,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":693,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":694,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":295,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":695,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":129,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSimpleSerialization":579,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":684,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":192,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":233,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":283,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":833,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":765,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":448,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":50,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEqualsNull":647,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":798,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":435,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":330,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEmptyMapCompatibility":847,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":62,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":250,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":230,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":673,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":667,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":740,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":188,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":308,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":801,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":718,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":634,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":558,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":349,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":687,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":458,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":228,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyListIteratorIsIndeedEmpty":638,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":306,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testObjectHashCodeEqualsSelfHashCode":581,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":670,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":138,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":622,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":285,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":216,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":685,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":204,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":238,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":468,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":551,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":586,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":711,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":461,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":389,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":807,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":777,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":641,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":556,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":678,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenSet":639,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":320,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":776,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":538,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":176,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":27,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":507,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":95,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":543,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":3,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":409,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":802,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":218,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":788,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":619,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":234,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":494,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":356,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":658,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":666,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":471,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":470,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":21,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":175,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":600,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":499,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":680,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":2,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":106,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":491,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":675,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":518,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":554,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":794,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":573,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":444,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":281,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":826,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":768,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":831,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":442,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":316,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":790,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":433,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":383,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":781,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":59,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":211,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":100,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":387,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":757,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":1,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":339,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":128,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":378,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":441,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":484,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":668,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":367,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":572,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":319,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":18,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":112,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":569,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":102,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":85,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":36,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":268,"org.apache.commons.collections4.CollectionUtilsTest.union":344,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":590,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":510,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":81,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":31,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":114,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":806,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":269,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":469,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":609,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":656,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":459,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":90,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":465,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":292,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenRemove":635,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":236,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":263,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":561,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":560,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":731,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":848,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":451,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":587,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":562,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":206,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":533,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":511,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":115,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":829,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":530,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":130,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":500,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":525,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":291,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":504,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":475,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":473,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":851,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":182,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":663,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":10,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":258,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":571,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":537,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":131,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":217,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":49,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":710,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":6,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":747,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":300,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":787,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":165,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":514,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":730,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testSerializeDeserializeThenCompare":849,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":457,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":98,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":676,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":363,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":624,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":512,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":699,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":513,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":517,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":736,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":737,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":16,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":735,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":351,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":611,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":842,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":276,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":483,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":846,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":132,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":655,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":618,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":782,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":805,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":77,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalEmptyCollectionExists":853,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":406,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":529,"org.apache.commons.collections4.map.SingletonMapTest.testClone":855,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":146,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":480,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":775,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalEmptyCollectionExists":578,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":583,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":117,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":570,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":703,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":671,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":456,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":541,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":374,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":135,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":375,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":198,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":376,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":328,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":614,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":493,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":329,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":628,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":760,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":24,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":592,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemoveThenSet":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":439,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":725,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":156,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":122,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":249,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":416,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testCanonicalFullCollectionExists":854,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":209,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":498,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":177,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":68,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":388,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":630,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":542,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":784,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":143,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":485,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":282,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":505,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":116,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":191,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":325,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":527,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":326,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":358,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":259,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":398,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":761,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":763,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":762,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":789,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":400,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":19,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":515,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":372,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":312,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":584,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":352,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":552,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":364,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":796,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":261,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":220,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":524,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":501,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":55,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":403,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":296,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":683,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":488,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":859,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":109,"org.apache.commons.collections4.CollectionUtilsTest.isFull":532,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":25,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":392,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":153,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":158,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":489,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":553,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":46,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":797,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":346,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":127,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":121,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":591,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":333,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":508,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":424,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":598,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSerializeDeserializeThenCompare":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":418,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":597,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":186,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":843,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":208,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":200,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":405,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":227,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":14,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":743,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":742,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":738,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testCanonicalFullCollectionExists":576,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":91,"org.apache.commons.collections4.list.SetUniqueListTest.testSimpleSerialization":822,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":137,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":714,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":241,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":280,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":752,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":164,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":193,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":857,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":856,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":466,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":377,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":438,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":677,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":773,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":815,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":825,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":248,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemove":644,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":395,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":119,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":800,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":467,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":111,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":754,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":821,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":315,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":478,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":197,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":89,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":858,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":621,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":661,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":407,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":120,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":401,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":771,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":224,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":758,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":719,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":178,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":732,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":495,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":594,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":593,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":160,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":64,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testFullIterator":643,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":487,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":783,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":528,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":244,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":521,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":596,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":273,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":674,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":770,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":324,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":812,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSimpleSerialization":649,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":613,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":827,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":814,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":301},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[0,1],"tindex":"dbe1ad26-3e4e-11e6-9fd5-e5623a7118bd","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"dbe22257-3e4e-11e6-9fd5-01e67639ca7f","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[26],"tindex":"dbe24968-3e4e-11e6-9fd5-13bcdae3efd0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index > 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[27],"tindex":"dbe24969-3e4e-11e6-9fd5-f52b22852ee5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"dbe2496a-3e4e-11e6-9fd5-6110b2ef1437","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[28,29,30,31],"tindex":"dbe2707b-3e4e-11e6-9fd5-3b14eaae5b00","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[32,33,34,35,36,37],"tindex":"dbe2707c-3e4e-11e6-9fd5-17fbdd8b0f16","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"dbe2978d-3e4e-11e6-9fd5-7104b84452bd","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[58],"tindex":"dbe2978e-3e4e-11e6-9fd5-639449337693","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[59],"tindex":"dbe2978f-3e4e-11e6-9fd5-bffd920ec3bb","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[60],"tindex":"dbe2bda0-3e4e-11e6-9fd5-a1a808d67fbf","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dbe2bda1-3e4e-11e6-9fd5-29c31fd94a53","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n                    if (longObject == null) {\n                        return 0L;\n                    } \n                    return longObject.longValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"dbe2bda2-3e4e-11e6-9fd5-a3f73a20f5b1","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"dbe2e4b3-3e4e-11e6-9fd5-7d69dc2e809f","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"tindex":"dbe30bc4-3e4e-11e6-9fd5-a13b7a2cdc2c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[325],"tindex":"dbe30bc5-3e4e-11e6-9fd5-254f19d7f7f2","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[326,327,328,329],"tindex":"dbe30bc6-3e4e-11e6-9fd5-9b363fa533fa","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[330,331,332,333,334,335,336,337,338],"tindex":"dbe332d7-3e4e-11e6-9fd5-23b7c77cdf51","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"dbe359e8-3e4e-11e6-9fd5-6f1da8cb8bc1","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"dbe359e9-3e4e-11e6-9fd5-39e4c80ba4c5","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[339,340,341,342,343,344,345,346,347,348],"tindex":"dbe380fa-3e4e-11e6-9fd5-3b6e744626fa","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[349,350,351],"tindex":"dbe380fb-3e4e-11e6-9fd5-4b6e185d3683","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"dbe380fc-3e4e-11e6-9fd5-dd558d845115","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:199","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[352,353],"tindex":"dbe3a80d-3e4e-11e6-9fd5-af7517dccbdf","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dbe3a80e-3e4e-11e6-9fd5-39033f58c505","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"dbe3a80f-3e4e-11e6-9fd5-1d038f55f806","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"dbe3a810-3e4e-11e6-9fd5-2d950f0f81c3","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"dbe3a811-3e4e-11e6-9fd5-31f746550697","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[354],"tindex":"dbe3a812-3e4e-11e6-9fd5-d15969f5b962","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"dbe3cf23-3e4e-11e6-9fd5-1555f35eaca5","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[385,386,387,388,389],"tindex":"dbe3cf24-3e4e-11e6-9fd5-47f08489da86","method":{"position":"org.apache.commons.collections4.CollectionUtils:1194","type":"CtMethodImpl","sourcecode":"private static void checkIndexBounds(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[390],"tindex":"dbe3cf25-3e4e-11e6-9fd5-4972a60c11da","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[391,392],"tindex":"dbe3cf26-3e4e-11e6-9fd5-9356e7e1781f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"dbe3f637-3e4e-11e6-9fd5-2f66acc52122","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[393,394,395,396],"tindex":"dbe3f638-3e4e-11e6-9fd5-a7d70f0639db","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                        return false;\n                    } \n                    if (coll.isEmpty()) {\n                        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                        return true;\n                    } \n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if ((coll.contains(it.next())) == false) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[397,398],"tindex":"dbe3f639-3e4e-11e6-9fd5-c519f68ffaf2","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dbe3f63a-3e4e-11e6-9fd5-13916f9c07f1","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[399,400,401,402,403,404,405,406,407,408,409,410,411,412,61,62,413,63,64,65,66,414,67,415,416,417,418,419,420,421,422,391,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,392,476,477,478,479,480,481,482,483,484,485,486],"tindex":"dbe41d4b-3e4e-11e6-9fd5-2f5ef31c32e0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[487,488],"tindex":"dbe41d4c-3e4e-11e6-9fd5-bbb11977b669","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if ((collection.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[489,490,263,264,491],"tindex":"dbe41d4d-3e4e-11e6-9fd5-d1dcf1a24c72","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:210","type":"CtMethodImpl","sourcecode":"public boolean removeMapping(final java.lang.Object key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (valuesForKey == null) {\n                return false;\n            } \n            final boolean boolean = valuesForKey.remove(value);\n            if (removed == false) {\n                return false;\n            } \n            if (valuesForKey.isEmpty()) {\n                remove(key);\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[492,493,494],"tindex":"dbe41d4e-3e4e-11e6-9fd5-678814d0b00b","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"dbe41d4f-3e4e-11e6-9fd5-dba9dbbfc604","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dbe44460-3e4e-11e6-9fd5-cbb7e3ec2499","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[495],"tindex":"dbe44461-3e4e-11e6-9fd5-ad6e546cd00b","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((b == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[496],"tindex":"dbe44462-3e4e-11e6-9fd5-e7e9c3cfdd10","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:67","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[497,498,499,500,501,502,503,504,505,506,507,508,509,510],"tindex":"dbe44463-3e4e-11e6-9fd5-a1a83dce260b","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[511],"tindex":"dbe44464-3e4e-11e6-9fd5-3552e85ee56d","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"dbe46b75-3e4e-11e6-9fd5-65a7b8b0b2dd","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[512,513,514,515,516,517,518,519,520,521,354,522],"tindex":"dbe46b76-3e4e-11e6-9fd5-a524e37aedfb","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"dbe46b77-3e4e-11e6-9fd5-d5cf0348c373","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"dbe46b78-3e4e-11e6-9fd5-dfeb84e6cb93","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[523],"tindex":"dbe46b79-3e4e-11e6-9fd5-011bba9d27b0","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[524],"tindex":"dbe4928a-3e4e-11e6-9fd5-e15a4ceb439e","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"dbe4928b-3e4e-11e6-9fd5-eb01e6a4d6d3","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"dbe4928c-3e4e-11e6-9fd5-49092985369d","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[525,526,56,527,528,529,530,531],"tindex":"dbe4928d-3e4e-11e6-9fd5-e166a59b3d91","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (null == object) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"dbe4928e-3e4e-11e6-9fd5-95edc3b20216","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[532,533],"tindex":"dbe4b99f-3e4e-11e6-9fd5-d7daf47b72b6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:80","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            if (coll == null) {\n                throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n            } \n            for (int int = 0 ; i < 1000 ; i++) {\n                if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                    break;\n                } \n                if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n                    coll = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(coll)).decorated();\n                } else if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n                    coll = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(coll)).decorated();\n                } \n            }\n            if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n                throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(((org.apache.commons.collections4.BoundedCollection<E>)(coll)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566],"tindex":"dbe4b9a0-3e4e-11e6-9fd5-b7cec2799d1b","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582],"tindex":"dbe4b9a1-3e4e-11e6-9fd5-99faede79307","method":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PeekingIterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PeekingIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[583,584,585,586,587,588,589,590,591],"tindex":"dbe4b9a2-3e4e-11e6-9fd5-0533e3050ed8","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"dbe4e0b3-3e4e-11e6-9fd5-6b7105fc3d78","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"dbe4e0b4-3e4e-11e6-9fd5-012c5b5e6877","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[592],"tindex":"dbe4e0b5-3e4e-11e6-9fd5-a765284b7c82","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dbe4e0b6-3e4e-11e6-9fd5-35650e2041fd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"dbe507c7-3e4e-11e6-9fd5-59b35c1d69c1","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if (object instanceof java.util.Enumeration<?>) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"dbe507c8-3e4e-11e6-9fd5-137a1d5a5ed9","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:63","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[593,594,595,596,597,598,599,600,601,602,603,604,605,605,606,607,607,608,609,610],"tindex":"dbe507c9-3e4e-11e6-9fd5-0960ca94f3a8","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[611,612,613,614],"tindex":"dbe507ca-3e4e-11e6-9fd5-1f106721d991","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[615],"tindex":"dbe507cb-3e4e-11e6-9fd5-e11f6d4ebc6d","method":{"position":"org.apache.commons.collections4.map.Flat3Map:374","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final int int = map.size();\n            if (size == 0) {\n                return ;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n                return ;\n            } \n            if (size < 4) {\n                for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            } else {\n                convertToMap();\n                org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(map);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[399,400,401,402,403,404,407,408,409,410,411,405,406,412,61,62,413,63,64,65,66,414,67,616,415,617,416,417,418,419,420,421,422,391,423,424,425,426,427,428,429,430,431,432,433,618,619,68,69,620,621,622,623],"tindex":"dbe52edc-3e4e-11e6-9fd5-9b9ebdbd62e5","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[624,625,626,627,628,629,248],"tindex":"dbe52edd-3e4e-11e6-9fd5-0d1d3d14aa78","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[630,350],"tindex":"dbe52ede-3e4e-11e6-9fd5-4b04b6f4eabc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[631,632],"tindex":"dbe52edf-3e4e-11e6-9fd5-af3be6a46686","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,592,657,658,510,494,659,660,661,662,663,664,665,666,667,668,669,670],"tindex":"dbe555f0-3e4e-11e6-9fd5-556a408f5207","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"dbe555f1-3e4e-11e6-9fd5-b793f7b95ca1","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"dbe555f2-3e4e-11e6-9fd5-db693bcafc5f","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[671],"tindex":"dbe555f3-3e4e-11e6-9fd5-3b690875cbde","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[162,223],"tindex":"dbe555f4-3e4e-11e6-9fd5-55e36da60750","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dbe57d05-3e4e-11e6-9fd5-3de52a451cfa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"dbe57d06-3e4e-11e6-9fd5-155fe4a41123","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(lengthInBits)) {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[672],"tindex":"dbe57d07-3e4e-11e6-9fd5-29f1457558ee","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"dbe57d08-3e4e-11e6-9fd5-7f7f4004d47d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"dbe5a419-3e4e-11e6-9fd5-81f3d65ab31b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"dbe5a41a-3e4e-11e6-9fd5-6b2c28e5178e","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[673],"tindex":"dbe5a41b-3e4e-11e6-9fd5-99248da2b11b","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"dbe5a41c-3e4e-11e6-9fd5-cd82c360beaf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Bag) {\n                {\n                    if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                        return false;\n                    } \n                    if (coll.isEmpty()) {\n                        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                        return true;\n                    } \n                    boolean boolean = false;\n                    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                    while (it.hasNext()) {\n                        if ((coll.contains(it.next())) == false) {\n                            it.remove();\n                            modified = true;\n                        } \n                    }\n                    return modified;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"dbe5a41d-3e4e-11e6-9fd5-85279873798a","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"dbe5cb2e-3e4e-11e6-9fd5-2f3d1624d462","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"dbe5cb2f-3e4e-11e6-9fd5-33823bdc5c5c","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n                    if (longObject == null) {\n                        return 0L;\n                    } \n                    return longObject.longValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[674,675],"tindex":"dbe5cb30-3e4e-11e6-9fd5-1586b063deda","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[676,677,678,679,680,681],"tindex":"dbe5cb31-3e4e-11e6-9fd5-319b1189ad26","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<K>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[682,520],"tindex":"dbe5cb32-3e4e-11e6-9fd5-df7fefe4bd3e","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[401,402,403,404,410,411,61,62,413,63,64,65,66,414,67,617,416,417,418,419,420,421,422,391,423,424,425,426,427,428,429,430,431,432,433,683,684,685,79,80,686,81,82,83,84,687,85,688,689,690,691,692,693,694,695,36,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,170,719,171,720,721,172,173,722,174,723,724,725,175,726,727,176,728,729,730,731,732,204,205,206,207,208,209,733,210,734,735,736,737,738,739,740,741,742,743,744,745,746,228,747,229,748,749,230,231,750,232,751,752,753,233,754,755,234,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,296,773,297,774,775,298,299,776,300,777,778,779,301,780,781,302,782],"tindex":"dbe5f243-3e4e-11e6-9fd5-a1b8cdc24a01","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:96","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"dbe5f244-3e4e-11e6-9fd5-55e0027decac","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:95","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.MultiKeyMap<K, V> multiKeyMap(final org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            if ((map.size()) > 0) {\n                throw new java.lang.IllegalArgumentException(\"Map must be empty\");\n            } \n            return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,7,21,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,655,823,659,824,666,825,826,827,828,829,830,831,832,833],"tindex":"dbe5f245-3e4e-11e6-9fd5-dbfdb259ee81","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[834,835,836,837],"tindex":"dbe5f246-3e4e-11e6-9fd5-d9fd574612dc","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n            } \n            if (value == null) {\n                switch (int) {\n                    case 3 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((V) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                switch (int) {\n                    case 3 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 2 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                    case 1 :\n                        if (value.equals(V)) {\n                            return true;\n                        } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[838],"tindex":"dbe5f247-3e4e-11e6-9fd5-9f7f4c4bda55","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[839,840,841,842,843,844,845,684,685,846,79,80,686,81,82,83,84,687,85,847,848,688,689,690,691,692,693,694,695,36,696,697,698,699,700,701,702,703,704,705,706,849,850,86,851,87,852,853,854],"tindex":"dbe61958-3e4e-11e6-9fd5-01b36fdc043b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[855,204,205,206,207,208,209,210,734,856,857,858,859,860],"tindex":"dbe61959-3e4e-11e6-9fd5-d9cf82662dd9","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467237736708/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}