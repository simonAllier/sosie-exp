{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":636,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":56,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":325,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":270,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":590,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":842,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":791,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsSelfHashCode":772,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":644,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":397,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":809,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":223,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":485,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":683,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":748,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":613,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":34,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":353,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":301,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":474,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":679,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":845,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":699,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":416,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":676,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":188,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":776,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":673,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":410,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":359,"org.apache.commons.collections4.CollectionUtilsTest.select":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":669,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":442,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":457,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":585,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":226,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":344,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":463,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":832,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":850,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.CollectionUtilsTest.intersection":821,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":652,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":597,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":289,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":255,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":645,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":687,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":240,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":414,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":637,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":734,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":802,"org.apache.commons.collections4.map.CompositeMapTest.testPut":808,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":690,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":473,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":130,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":650,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":731,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":373,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":415,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":796,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":328,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":162,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":797,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":213,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":178,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":69,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":773,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":173,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":174,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":172,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":196,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":709,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":665,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":822,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":417,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":324,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":343,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":757,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":379,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":80,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":777,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":290,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":309,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":667,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":475,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":2,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":752,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":207,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":487,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":82,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":439,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":705,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":304,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":340,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":770,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":792,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":736,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":472,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":843,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":29,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":142,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":490,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":604,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":831,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":150,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":291,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":686,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":492,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":678,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":326,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":510,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":626,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":620,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":702,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":700,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":642,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":434,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":635,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":478,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":509,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":508,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":179,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":121,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":612,"org.apache.commons.collections4.map.LRUMapTest.testReset":479,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":387,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":766,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":131,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":431,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":383,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":313,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":618,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":715,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":427,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":116,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":160,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":398,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":725,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":352,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":480,"org.apache.commons.collections4.map.LinkedMapTest.testReset":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":220,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":786,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":461,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":494,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":788,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":13,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":513,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":288,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":222,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":601,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":567,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":280,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":374,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":512,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":539,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":849,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":368,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":851,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":453,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":530,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":719,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":382,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":244,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":97,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":840,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":61,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":239,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":392,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":532,"org.apache.commons.collections4.map.HashedMapTest.testClone":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":394,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":575,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":691,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":201,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":711,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":758,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":115,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":59,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":412,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":333,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":476,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":525,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":20,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":820,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":117,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":801,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":717,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":337,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":447,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":446,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":448,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":813,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":235,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":639,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":426,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":284,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":429,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":614,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":740,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":682,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":778,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":155,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":458,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":420,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":689,"org.apache.commons.collections4.map.LinkedMapTest.testClone":419,"org.apache.commons.collections4.ListUtilsTest.testSelect":745,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":149,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":841,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":275,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":632,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":276,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":704,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":250,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":481,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":468,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":36,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":246,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":805,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":292,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":804,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":695,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":464,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":698,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":696,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":852,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":783,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":706,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":482,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":753,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":738,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":538,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":136,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":765,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":733,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":720,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":737,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":11,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":262,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":526,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":428,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":332,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":357,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":32,"org.apache.commons.collections4.map.LRUMapTest.testLRU":467,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":784,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":602,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":570,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":247,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":761,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":555,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":837,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":503,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":552,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":742,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":405,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":771,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":638,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":99,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":238,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":630,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":477,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":834,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":685,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":823,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":210,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":615,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":582,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":794,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":317,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":542,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":544,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":12,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":273,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":511,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":647,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":523,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":741,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":58,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":261,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":836,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":258,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":598,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":181,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":608,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":86,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":308,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":5,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":400,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":568,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":727,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":848,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":649,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":672,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":435,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":45,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":780,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":377,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":554,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":154,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":533,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":293,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":732,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":375,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":562,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":680,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":739,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":388,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":659,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":844,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":658,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":164,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":516,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":243,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":541,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":517,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":335,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":176,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":157,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":356,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":465,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":550,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":713,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":600,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":634,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":724,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":798,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":628,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":236,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":101,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":156,"org.apache.commons.collections4.map.CompositeMapTest.testGet":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":839,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":214,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":565,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":710,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":853,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":735,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":560,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":606,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":321,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":268,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":545,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":98,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":817,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":444,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":483,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":591,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":129,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":40,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":624,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":286,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":566,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":572,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":17,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":657,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":818,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":194,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":648,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":561,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":653,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":795,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":170,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":169,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":581,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":35,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":171,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":721,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":781,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":306,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":305,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":569,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":191,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":830,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":661,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":519,"org.apache.commons.collections4.map.LRUMapTest.testClone":466,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":455,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":271,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":341,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":445,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":484,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":759,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":376,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":312,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":67,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":84,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":456,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":536,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":671,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":192,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":564,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":114,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":274,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":723,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":824,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":518,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":670,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":829,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":622,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":668,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":573,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":811,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":810,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":72,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":57,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":144,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":774,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":521,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":747,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":365,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":380,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":491,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":646,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":381,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":528,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":203,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":730,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":553,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":793,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":369,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":751,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":87,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":580,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":547,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":103,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":451,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":443,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":450,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":529,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":557,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":441,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":785,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalFullCollectionExists":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":371,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":692,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":219,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":401,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":814,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":543,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":577,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":396,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":819,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":489,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":348,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":812,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":225,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":78,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":279,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":411,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":546,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":384,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":592,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":79,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":497,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":520,"org.apache.commons.collections4.list.FixedSizeListTest.testCanonicalEmptyCollectionExists":769,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":282,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":249,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":430,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":674,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":363,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":89,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":90,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":91,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":595,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":779,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":744,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":835,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":145,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":579,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":718,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":6,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":18,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":471,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":296,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":677,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":527,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":756,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":128,"org.apache.commons.collections4.set.CompositeSetTest.testContains":816,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":549,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":260,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":499,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":30,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":38,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":833,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":789,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":7,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":764,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":197,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":237,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":596,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":152,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":760,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":94,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":684,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":768,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":701,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":694,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":827,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":847,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":825,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":621,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":762,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":488,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":83,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":88,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":323,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":355,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":322,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":775,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":165,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":726,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":826,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":0,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":755,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":666,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":654,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":140,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":763,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":799,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":314,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":119,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":346,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":347,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":345,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":367,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":134,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":655,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":338,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":571,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":138,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":252,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":281,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":623,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":846,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":675,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":199,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":330,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":327,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":364,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":584,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":535,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":469,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":611,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":688,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":74,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":506,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":749,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":728,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":187,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":729,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":102,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":578,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":505,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":603,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":625,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":254,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":320,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":531,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":537,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":838,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":470,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":372,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":722,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":406,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":563,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":558,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":806,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":495,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":754},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cbb79efa-2ed1-11e6-946e-c31000e052a1","method":{"position":"org.apache.commons.collections4.ListUtils:400","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> unmodifiableList(final java.util.List<? extends E> list) {\n    if (list instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"cbb8624b-2ed1-11e6-946e-69cdb6814b3b","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    final int int = coll.size();\n                    if (cSize == 0) {\n                        return false;\n                    } \n                    checkModCount();\n                    org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n                    int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n                    int += cSize;\n                    (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[0,1],"tindex":"cbb8895c-2ed1-11e6-946e-f993ace7b01b","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"cbb8b06d-2ed1-11e6-946e-d3488f5f1a9a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[2,3,4],"tindex":"cbb8b06e-2ed1-11e6-946e-0f8e3306d8d4","method":{"position":"org.apache.commons.collections4.list.TransformedList:131","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index > 0) {\n        {\n            return getList().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"cbb8b06f-2ed1-11e6-946e-b19d71308570","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:351","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.list.AbstractLinkedList.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.List) == false) {\n                return false;\n            } \n            final java.util.List<?> java.util.List<?> = ((java.util.List<?>)(obj));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            final java.util.ListIterator<?> java.util.ListIterator<?> = listIterator();\n            final java.util.ListIterator<?> java.util.ListIterator<?> = other.listIterator();\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                final java.lang.Object java.lang.Object = it1.next();\n                final java.lang.Object java.lang.Object = it2.next();\n                if (!(o1 == null ? o2 == null : o1.equals(o2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cbb8d780-2ed1-11e6-946e-dfed278fd264","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"cbb8fe91-2ed1-11e6-946e-517d4a1ba8b8","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"cbb925a2-2ed1-11e6-946e-8d3a17fa374d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"cbb925a3-2ed1-11e6-946e-9f600d064e97","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[17,18],"tindex":"cbb94cb4-2ed1-11e6-946e-8955942e1e7d","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"cbb94cb5-2ed1-11e6-946e-97ef9e8ab163","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[19],"tindex":"cbb973c6-2ed1-11e6-946e-95eb7a75a4c1","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"cbb99ad7-2ed1-11e6-946e-4b19ba23b0a7","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (offsetInBits == 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"cbb9c1e8-2ed1-11e6-946e-ebdab9854d0c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[79],"tindex":"cbb9c1e9-2ed1-11e6-946e-19bb4da894cd","method":{"position":"org.apache.commons.collections4.IteratorUtils:412","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) {\n    if (end < end) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[],"tindex":"cbb9e8fa-2ed1-11e6-946e-67ff89d941cd","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:726","type":"CtMethodImpl","sourcecode":"protected K entryKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[80,81],"tindex":"cbb9e8fb-2ed1-11e6-946e-c5c52eda1a01","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"cbba100c-2ed1-11e6-946e-3f96aa799876","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((K)(key));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[144,145,146,147,148,149,150,151,152],"tindex":"cbba100d-2ed1-11e6-946e-d199109d754a","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[153],"tindex":"cbba371e-2ed1-11e6-946e-2df22b134cbe","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n                    if ((predicates.int) != (closures.int)) {\n                        throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n                    } \n                    if ((predicates.int) == 0) {\n                        return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n                    } \n                    return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[154],"tindex":"cbba371f-2ed1-11e6-946e-0b49bb95162f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cbba5e30-2ed1-11e6-946e-374a1c7f2ac6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                {\n                    rangeCheck(index, ((int) + 1));\n                    final int int = coll.size();\n                    if (cSize == 0) {\n                        return false;\n                    } \n                    checkModCount();\n                    org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n                    int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n                    int += cSize;\n                    (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[155],"tindex":"cbba5e31-2ed1-11e6-946e-258dac54588f","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[156,157,158,159,160,161,5,6,162,7,8,163,9,10,11,164,165,12,13,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,14,15,184,16,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"cbba5e32-2ed1-11e6-946e-2987e1823453","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:548","type":"CtMethodImpl","sourcecode":"protected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[410],"tindex":"cbba8543-2ed1-11e6-946e-2ddfe4edf86c","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"cbbaac54-2ed1-11e6-946e-ad2fe15f2cf1","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"cbbaac55-2ed1-11e6-946e-43da377352da","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[157,156,158,159,160,161,5,6,162,7,8,163,9,10,11,164,165,12,13,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,14,15,184,185,16,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,270,272,279,273,280,274,275,276,277,278,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,320,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,363,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,409],"tindex":"cbbad366-2ed1-11e6-946e-09975b60ff73","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[562,563,564,565,566,567,568,569,570,571],"tindex":"cbbafa77-2ed1-11e6-946e-918e9b82ec9d","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"cbbafa78-2ed1-11e6-946e-cbf33d0f26ce","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"cbbb2189-2ed1-11e6-946e-3f5157faa99f","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[572,573],"tindex":"cbbb218a-2ed1-11e6-946e-530181575991","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[574,575],"tindex":"cbbb218b-2ed1-11e6-946e-bd337b8e124e","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[576,577],"tindex":"cbbb218c-2ed1-11e6-946e-11edca902207","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:206","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.remove(object);\n            if (removed) {\n                removeFromIndex(((C)(object)));\n            } \n            return removed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[273,280,274,578],"tindex":"cbbb489d-2ed1-11e6-946e-51550edf02e9","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cbbb6fae-2ed1-11e6-946e-a5144ab2fc97","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[579,580,581,582],"tindex":"cbbb6faf-2ed1-11e6-946e-c9892588b142","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[583,584],"tindex":"cbbb6fb0-2ed1-11e6-946e-dfa19c7ca682","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n            } \n            final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n            final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n            final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n            script.visit(visitor);\n            return visitor.getSubSequence();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[585,586],"tindex":"cbbb96c1-2ed1-11e6-946e-2177dbac8d61","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[587,588],"tindex":"cbbb96c2-2ed1-11e6-946e-bf92e16bbd9a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[589,590,591,592,593],"tindex":"cbbb96c3-2ed1-11e6-946e-b104d51801c2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[594],"tindex":"cbbbbdd4-2ed1-11e6-946e-9142be36a35f","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (transformers == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[595,596,597,598,599,600,601,81,602,603,604,605,606,607,608,609,610,611,612,613,614,615],"tindex":"cbbbbdd5-2ed1-11e6-946e-c15b2a7884c3","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map.Entry) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"cbbbe4e6-2ed1-11e6-946e-cfb185c0d4c8","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n                    if ((predicates.int) != (closures.int)) {\n                        throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n                    } \n                    if ((predicates.int) == 0) {\n                        return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n                    } \n                    return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"cbbbe4e7-2ed1-11e6-946e-5b1898f07476","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[616,617,618,619,620,621,622,623],"tindex":"cbbbe4e8-2ed1-11e6-946e-5ba3a6b76b27","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cbbc0bf9-2ed1-11e6-946e-d7a3eaf722ba","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cbbc0bfa-2ed1-11e6-946e-cb91a5f8901c","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"cbbc0bfb-2ed1-11e6-946e-15798fb9701d","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[624,625,626,627,571,628],"tindex":"cbbc330c-2ed1-11e6-946e-9197c7b8e6c6","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"cbbc330d-2ed1-11e6-946e-09262ee26a0c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj instanceof java.util.Map) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n                    if ((node != null) && (node.getValue().equals(value))) {\n                        doRedBlackDelete(node);\n                        return true;\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"cbbc330e-2ed1-11e6-946e-b3e2329cd49b","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[629,630,631,632,616,617,618,619,633,620,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,589,667,668,669,590,670,591,592,593,671,672,673,674,675,676,677,678,621,622,623,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712],"tindex":"cbbc5a1f-2ed1-11e6-946e-23b5d617d518","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[424,425,465,430,431,433,434,437,438,441,442,460,482,483,523,488,489,491,492,493,495,496,499,500,518,519,520],"tindex":"cbbc5a20-2ed1-11e6-946e-7face5422c4d","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"cbbc8131-2ed1-11e6-946e-65773a8cc3d6","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"cbbc8132-2ed1-11e6-946e-a34ab1f4f046","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[713,714,715,716,717,718],"tindex":"cbbc8133-2ed1-11e6-946e-5314ff8bd4af","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return java.util.List<E>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cbbc8134-2ed1-11e6-946e-1fcf5d486a2e","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744],"tindex":"cbbc8135-2ed1-11e6-946e-9368db5dac15","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[650,654,664,589,667,590,670,591,592,593],"tindex":"cbbca846-2ed1-11e6-946e-5fb238cef7a8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from == null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"cbbca847-2ed1-11e6-946e-19cf98b6b092","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"cbbccf58-2ed1-11e6-946e-979b34429240","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[745,746],"tindex":"cbbccf59-2ed1-11e6-946e-3fac267be1b3","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[747],"tindex":"cbbccf5a-2ed1-11e6-946e-932d9033083c","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[748],"tindex":"cbbcf66b-2ed1-11e6-946e-917229d1b10e","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[157,186,188,229,195,196,198,199,202,203,206,207,270,236,237,239,240,243,244,247,248,272,465,430,431,433,434,437,438,441,442,523,488,489,491,492,495,496,499,500,363,329,330,332,333,336,341,366,524,526,539,543,545,558],"tindex":"cbbcf66c-2ed1-11e6-946e-f77c5b002d4a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"cbbcf66d-2ed1-11e6-946e-3b73573cd6ad","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cbbcf66e-2ed1-11e6-946e-13d79f198d3b","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[636],"tindex":"cbbd1d7f-2ed1-11e6-946e-f367b58b383d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[337,340],"tindex":"cbbd1d80-2ed1-11e6-946e-d70bb2f39132","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[749],"tindex":"cbbd1d81-2ed1-11e6-946e-c7a3bc7d758f","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"cbbd4492-2ed1-11e6-946e-01b4abfa9f51","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (transformers == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[750,751,752,753,574,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789],"tindex":"cbbd4493-2ed1-11e6-946e-1bde4eabe9b0","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[629,630,631,632,617,618,619,633,620,634,635,636,637,638,639,640,661,662,663,664,665,666,589,667,668,669,590,670,591,592,593,672,671,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,674,673,675,676,677,678,621,622,623,679,680,681,682,699,700,701,702,703,704,705,706,707,708,709,710,712,711,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698],"tindex":"cbbd4494-2ed1-11e6-946e-2165a659d479","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cbbd6ba5-2ed1-11e6-946e-2363582180c6","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806],"tindex":"cbbd6ba6-2ed1-11e6-946e-21bcab0893cb","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"cbbd6ba7-2ed1-11e6-946e-03226a9c6e8c","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[186,188,191,192,193,230,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"tindex":"cbbd92b8-2ed1-11e6-946e-f97656e0953b","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"cbbd92b9-2ed1-11e6-946e-83f9978f19e7","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[807,808,809,810,811,812,813,80,814,815,816,817,610,818,819,820,821,822],"tindex":"cbbd92ba-2ed1-11e6-946e-0bfc39123f70","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"cbbdb9cb-2ed1-11e6-946e-31d5c5c371e1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj instanceof java.util.Map) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = entry.getValue();\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n                    if ((node != null) && (node.getValue().equals(value))) {\n                        doRedBlackDelete(node);\n                        return true;\n                    } \n                    return false;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cbbdb9cc-2ed1-11e6-946e-8b082ef9f3f6","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map != null) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[823],"tindex":"cbbde0dd-2ed1-11e6-946e-3545cd799bc4","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[824,825,826,827,828,829,830,831,832,833,834,835,836,837],"tindex":"cbbde0de-2ed1-11e6-946e-032ef897a894","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[39,40,41,42,44,47,838,68,69,70,71,73,76,839],"tindex":"cbbe07ef-2ed1-11e6-946e-a793e1014590","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[840],"tindex":"cbbe07f0-2ed1-11e6-946e-9f5e27cd27a4","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[630,629,631,632,616,617,618,619,633,620,634,635,636,637,638,639,640,672,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,589,667,668,669,590,670,591,592,593,671,674,673,676,675,677,678,621,622,623,679,680,681,682,712,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711],"tindex":"cbbe07f1-2ed1-11e6-946e-c984c93e29fb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[841],"tindex":"cbbe2f02-2ed1-11e6-946e-9f417d95234e","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end == start) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[842],"tindex":"cbbe2f03-2ed1-11e6-946e-5f5a2ae5d8a1","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"cbbe2f04-2ed1-11e6-946e-17a84b6e45c3","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"cbbe2f05-2ed1-11e6-946e-4969f16cff31","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"cbbe5616-2ed1-11e6-946e-83cebdda9374","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[595,597,598,599,600,601,81,602,603,604,605,607,608,609],"tindex":"cbbe5617-2ed1-11e6-946e-a79aa189ef73","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[843,844],"tindex":"cbbe5618-2ed1-11e6-946e-7fbd4ef85dbd","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cbbe5619-2ed1-11e6-946e-eff221d2ebdb","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"cbbe7d2a-2ed1-11e6-946e-c92ba5b9614e","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[425,483],"tindex":"cbbe7d2b-2ed1-11e6-946e-b97dc7d21540","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[845,846],"tindex":"cbbe7d2c-2ed1-11e6-946e-691f13b35d5a","method":{"position":"org.apache.commons.collections4.list.TransformedList:155","type":"CtMethodImpl","sourcecode":"public E set(final int index, E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            object = transform(object);\n            return getList().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[847,848,627,849,850,851,852,853],"tindex":"cbbe7d2d-2ed1-11e6-946e-cf5fbd89539d","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}