{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":70,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":534,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":431,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalEmptyCollectionExists":288,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":337,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":492,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":592,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":322,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":614,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsSelfHashCode":375,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":584,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":229,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":319,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":78,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":505,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":605,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":516,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":504,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalFullCollectionExists":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":92,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":125,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":234,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":53,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":371,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":85,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":340,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":444,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":135,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":512,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":559,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetByIndex":353,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":498,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":121,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":143,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":208,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":115,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":289,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":619,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":21,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalFullCollectionExists":546,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":166,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":204,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":112,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":161,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":243,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":196,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":251,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":459,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":171,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":172,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":232,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":296,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":238,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":344,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":122,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":483,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":587,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":106,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":342,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":464,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":588,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalEmptyCollectionExists":377,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":574,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":173,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":456,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":465,"org.apache.commons.collections4.CollectionUtilsTest.intersection":596,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":222,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":363,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":429,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testUnmodifiable":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":88,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":380,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":491,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":17,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMakeMap":267,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":580,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalFullCollectionExists":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":237,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":186,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":440,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":623,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":155,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":489,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":401,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":502,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":346,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":389,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":450,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":182,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":231,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":68,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":310,"org.apache.commons.collections4.map.CompositeMapTest.testPut":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":133,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":33,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":260,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":388,"org.apache.commons.collections4.map.CompositeMapTest.testGet":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":66,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":616,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":585,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":190,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":566,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":86,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":282,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":477,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":626,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":308,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":411,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":527,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":367,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":428,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":249,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":396,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":600,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":244,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":526,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":365,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":52,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":539,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":435,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":565,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":335,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":176,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":49,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":167,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":201,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":191,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":153,"org.apache.commons.collections4.CollectionUtilsTest.union":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":101,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":6,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":617,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":93,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":602,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":83,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":205,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":610,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":89,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":317,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":227,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":75,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testCanonicalFullCollectionExists":286,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":274,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":454,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":10,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":209,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":557,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":586,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":515,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":541,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":422,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":480,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":99,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":309,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":621,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":245,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":169,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":543,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":368,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":453,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalEmptyCollectionExists":314,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":341,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":577,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":290,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":329,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":496,"org.apache.commons.collections4.ListUtilsTest.testSubtract":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":399,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":54,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":28,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":292,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":180,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":225,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":128,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":533,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":468,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetByIndex":355,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":43,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":259,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":493,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":67,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":241,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":269,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":146,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":351,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":159,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":144,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":374,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":386,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":193,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":558,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":325,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":551,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":284,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":555,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":174,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":481,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":119,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":18,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":195,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":273,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":607,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":567,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":0,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":606,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":482,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":64,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":304,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":615,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":538,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":513,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":202,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":622,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":299,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":439,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":542,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":471,"org.apache.commons.collections4.ListUtilsTest.testHashCode":625,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":214,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":5,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":188,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":170,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":39,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":336,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":261,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":416,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":433,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":479,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":404,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":311,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":445,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":240,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":514,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":252,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":398,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":427,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":372,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":591,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":408,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":590,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":583,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":136,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":441,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":554,"org.apache.commons.collections4.bag.TransformedBagTest.testCanonicalEmptyCollectionExists":545,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":597,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":418,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":306,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":219,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":394,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":287,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":500,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":432,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":521,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":3,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":529,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":446,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":589,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":608,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":349,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":601,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":4,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":523,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":508,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":420,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":397,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":324,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMakeMap":360,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":563,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":163,"org.apache.commons.collections4.map.SingletonMapTest.testMakeMap":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":134,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":442,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":447,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":41,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":326,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":184,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":472,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":242,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":549,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":253,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":474,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":255,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":413,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":254,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":272,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":593,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":218,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":524,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":297,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":467,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":185,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":207,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":430,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":476,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":381,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":531,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":609,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":73,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":582,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":236,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":410,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":151,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":343,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":124,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":206,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":116,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":415,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":328,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":265,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":220,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":199,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":564,"org.apache.commons.collections4.set.CompositeSetTest.testContains":599,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":511,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":400,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":369,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalEmptyCollectionExists":197,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":258,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":256,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":462,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":217,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":473,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":246,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":177,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":61,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":528,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":7,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":624,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":503,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":466,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":518,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":148,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":330,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":358,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":348,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":126,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":145,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":138,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":152,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":535,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":51,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":194,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":332,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":40,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":281,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":203,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":486,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":488,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":392,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":268,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":141,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":226,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":506,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":26,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":162,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":102,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":90,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":179,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":223,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":266,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":354,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":560,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":164,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":318,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":573,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":572,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":16,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":571,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":568,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":569,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":487,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":570,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":347,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":364,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":91,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":47,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":323,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":414,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":77,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":120,"org.apache.commons.collections4.map.LRUMapTest.testLRU":547,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSimpleSerialization":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":114,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":263,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":457,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":212,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":285,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":495,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":250,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":331,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":455,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":390,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":294,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":406,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":230,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":403,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":312,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":157,"org.apache.commons.collections4.map.SingletonMapTest.testCanonicalFullCollectionExists":315,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":339,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":478,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":611,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":158,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":423,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":200,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":517,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":537,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":168,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":130,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":215,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":470,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":247,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":257,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":525,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":361,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":59,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":235,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":612,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":550,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":36,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":594,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":127,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":262,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":419,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":239,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":425,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":463,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":181,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":485,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":224,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":409,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":536,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":280,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":393,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":395},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"cadc6fb6-3f4b-11e6-bc72-7f16277e8f91","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cadd5a17-3f4b-11e6-bc72-39203cc67326","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1043","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cadd8128-3f4b-11e6-bc72-83fd1c28dbcd","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Collection) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cadda839-3f4b-11e6-bc72-6bf909bb80b3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"caddcf4a-3f4b-11e6-bc72-7d894f054e50","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"caddcf4b-3f4b-11e6-bc72-b7af718c8e98","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object instanceof java.lang.Object[]) {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    if (nCopies <= 0) {\n                        return false;\n                    } \n                    (int)++;\n                    if (nCopies < (mut.int)) {\n                        mut.int -= nCopies;\n                        int -= nCopies;\n                    } else {\n                        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                        int -= mut.int;\n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[57],"tindex":"cadf2edc-3f4b-11e6-bc72-b1160a1ec824","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"cadf55ed-3f4b-11e6-bc72-d9360dd16e8c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl"},"failures":[155,156],"tindex":"cadf7cfe-3f4b-11e6-bc72-115c36111796","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cadfa40f-3f4b-11e6-bc72-1b4d426c3138","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cadfa410-3f4b-11e6-bc72-ab218a285761","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[157,158,159],"tindex":"cadfcb21-3f4b-11e6-bc72-e3a99ad87f12","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[160],"tindex":"cadfcb22-3f4b-11e6-bc72-f1a85e5e5b29","method":{"position":"org.apache.commons.collections4.map.LinkedMap:183","type":"CtMethodImpl","sourcecode":"public V remove(final int index) {\n    if (index > 0) {\n        {\n            return remove(get(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cadff233-3f4b-11e6-bc72-59aad6be5bfc","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cadff234-3f4b-11e6-bc72-b7e9ebdb5590","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Collection) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[161,162,163,164,15,16,165,166,17,18,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,19,20,21,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"cae01945-3f4b-11e6-bc72-ed3fdc89acf2","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"tindex":"cae01946-3f4b-11e6-bc72-cb07e6999171","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                        return tmpColl;\n                    } \n                    return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl"},"failures":[218],"tindex":"cae178d7-3f4b-11e6-bc72-d1c66cc0e3ed","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[219,220,221,222,223,224,225,226,35,227,228,229,230,231,232,36,233,234,235,236,237,238,239,240,241,242],"tindex":"cae178d8-3f4b-11e6-bc72-4bfc648f7d00","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl"},"failures":[243],"tindex":"cae178d9-3f4b-11e6-bc72-b12c96e4789c","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[244,245],"tindex":"cae19fea-3f4b-11e6-bc72-7ff947e9becb","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl"},"failures":[246],"tindex":"cae19feb-3f4b-11e6-bc72-6359aea53b00","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[70,97,98,99,108],"tindex":"cae1c6fc-3f4b-11e6-bc72-5dcd248405f1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae1c6fd-3f4b-11e6-bc72-893f509fc140","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"cae1ee0e-3f4b-11e6-bc72-337a23326c1e","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae2151f-3f4b-11e6-bc72-c7ef94c9c526","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae21520-3f4b-11e6-bc72-91d7393291bc","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"cae21521-3f4b-11e6-bc72-1d612744c902","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    return decorated().get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae23c32-3f4b-11e6-bc72-61ed126f7dd6","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl"},"failures":[334,335,336,337,338,339],"tindex":"cae23c33-3f4b-11e6-bc72-4147caf7c781","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start1 - start1) > (start1 - start2)) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"start1","end1":"start1","start2":"start2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtBinaryOperatorImpl"},"failures":[340],"tindex":"cae26344-3f4b-11e6-bc72-159ebf46d927","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if ((values == null) || ((values.size()) == 0)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[341],"tindex":"cae28a55-3f4b-11e6-bc72-67b93d849fd9","method":{"position":"org.apache.commons.collections4.PredicateUtils:211","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[342,343,344],"tindex":"cae28a56-3f4b-11e6-bc72-7bb62bc394dc","method":{"position":"org.apache.commons.collections4.TransformerUtils:178","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> asTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            return org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[345],"tindex":"cae28a57-3f4b-11e6-bc72-8fd9f5caadc1","method":{"position":"org.apache.commons.collections4.MapUtils:1144","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> putAll(final java.util.Map<K, V> map, final java.lang.Object[] array) {\n    if (map == null) {\n        {\n            map.size();\n            if ((array == null) || ((array.int) == 0)) {\n                return map;\n            } \n            final java.lang.Object java.lang.Object = array[0];\n            if (obj instanceof java.util.Map.Entry) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n                    map.put(entry.getKey(), entry.getValue());\n                }\n            } else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n                for (final java.lang.Object java.lang.Object : array) {\n                    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n                    map.put(keyval.getKey(), keyval.getValue());\n                }\n            } else if (obj instanceof java.lang.Object[]) {\n                for (int int = 0 ; i < (array.int) ; i++) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n                    if ((sub == null) || ((sub.int) < 2)) {\n                        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n                    } \n                    map.put(((K)(sub[0])), ((V)(sub[1])));\n                }\n            } else {\n                for (int int = 0 ; i < ((array.int) - 1) ; ) {\n                    map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n                }\n            }\n            return map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae2b168-3f4b-11e6-bc72-711aeda4873c","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[346,347],"tindex":"cae2b169-3f4b-11e6-bc72-3fa013c9d67b","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl"},"failures":[348],"tindex":"cae2d87a-3f4b-11e6-bc72-23e411f545d6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[349],"tindex":"cae2d87b-3f4b-11e6-bc72-69316b9118d1","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl"},"failures":[350,351],"tindex":"cae2d87c-3f4b-11e6-bc72-d5ca427f7824","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae2ff8d-3f4b-11e6-bc72-f303a457f2db","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl"},"failures":[352,353,354,355],"tindex":"cae2ff8e-3f4b-11e6-bc72-5f0c7f8febb5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[151,356,357,257,358,359],"tindex":"cae2ff8f-3f4b-11e6-bc72-41380ecb5a8a","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl"},"failures":[360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378],"tindex":"cae326a0-3f4b-11e6-bc72-ed3f67ef789d","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl"},"failures":[379,380,381,382,383,384],"tindex":"cae326a1-3f4b-11e6-bc72-17dbbdfeb6bc","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[385],"tindex":"cae326a2-3f4b-11e6-bc72-79bfaf4e7254","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae326a3-3f4b-11e6-bc72-d7824ad7dfb2","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            return java.util.Collections.synchronizedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl"},"failures":[386,387],"tindex":"cae34db4-3f4b-11e6-bc72-41a18c9063b2","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae34db5-3f4b-11e6-bc72-472f5d8da2a8","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                        return tmpColl;\n                    } \n                    return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl"},"failures":[388,389,260,390,391,392],"tindex":"cae34db6-3f4b-11e6-bc72-b15c883ba186","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl"},"failures":[393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433],"tindex":"cae374c7-3f4b-11e6-bc72-151bd5485621","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:476","type":"CtMethodImpl","sourcecode":"protected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.setValue(newValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[434],"tindex":"cae374c8-3f4b-11e6-bc72-f9912c690b79","method":{"position":"org.apache.commons.collections4.TransformerUtils:163","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> asTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[435],"tindex":"cae374c9-3f4b-11e6-bc72-7fea3eca65cc","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae39bda-3f4b-11e6-bc72-45fcc73ed7eb","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae39bdb-3f4b-11e6-bc72-a568b0973870","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl"},"failures":[436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468],"tindex":"cae39bdc-3f4b-11e6-bc72-176041ab61e9","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae3c2ed-3f4b-11e6-bc72-73df364785bd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            if (index < 0) {\n                {\n                    return decorated().get(index);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtInvocationImpl"},"failures":[469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,346,494,495,496,497,498,499,500,501],"tindex":"cae3c2ee-3f4b-11e6-bc72-81928358a72e","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae3c2ef-3f4b-11e6-bc72-1b8aa1af10bc","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae3ea00-3f4b-11e6-bc72-cbc34d8daa90","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[502],"tindex":"cae3ea01-3f4b-11e6-bc72-73dbbf304c67","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae3ea02-3f4b-11e6-bc72-afa0f6d6cc4e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:758","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, V>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[503,504],"tindex":"cae41113-3f4b-11e6-bc72-17dc76459edf","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                {\n                    for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                        final V V = it.next();\n                        if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                            it.remove();\n                            return true;\n                        } \n                    }\n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtInvocationImpl"},"failures":[],"tindex":"cae41114-3f4b-11e6-bc72-35e0d7efc6e9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:499","type":"CtMethodImpl","sourcecode":"private void removeExternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h.isInternalNode()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isExternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an external Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            } else {\n                parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n            }\n            if ((child.int) > (parent.int)) {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            } else {\n                child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae43825-3f4b-11e6-bc72-f3279b10a9e4","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object instanceof java.lang.Object[]) {\n                {\n                    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                    if (mut == null) {\n                        return false;\n                    } \n                    if (nCopies <= 0) {\n                        return false;\n                    } \n                    (int)++;\n                    if (nCopies < (mut.int)) {\n                        mut.int -= nCopies;\n                        int -= nCopies;\n                    } else {\n                        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                        int -= mut.int;\n                    }\n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[505,506,507],"tindex":"cae45f36-3f4b-11e6-bc72-ab7f0350cded","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[508],"tindex":"cae48647-3f4b-11e6-bc72-abc002803714","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae48648-3f4b-11e6-bc72-1f6016f5aa66","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[509],"tindex":"cae48649-3f4b-11e6-bc72-95d0695a9ba7","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl"},"failures":[510],"tindex":"cae4864a-3f4b-11e6-bc72-f73be6053a41","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[511,512,513,51,52,514,515,53,54,516,517,518,519,520,521,522,523,524,525,526,527,241,242,528,529,530,531,532,533,55,56,534,535,536,537,538,539,540,541,542,543,544,545,546,0],"tindex":"cae4ad5b-3f4b-11e6-bc72-a34283e39d5f","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[547,548,549,550,551,552],"tindex":"cae4ad5c-3f4b-11e6-bc72-67d767bfc288","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae4ad5d-3f4b-11e6-bc72-4306f9864b7a","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if ((iterator.hasNext()) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae4d46e-3f4b-11e6-bc72-23a754a9b250","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,503,574,575,576,577,578,579,580,581,582,583,584],"tindex":"cae4d46f-3f4b-11e6-bc72-b7adbbea3c3b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (node == null) {\n                        return firstEntry();\n                    } else {\n                        return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae4fb80-3f4b-11e6-bc72-fd542d78c1e3","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl"},"failures":[585,586,587,588,589,590,591],"tindex":"cae4fb81-3f4b-11e6-bc72-87500b7f4afc","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:290","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E value) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            updateNode(node, value);\n            return oldValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae4fb82-3f4b-11e6-bc72-c90c4afc69e6","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if ((map.size()) > 0) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl"},"failures":[12,13,19,20,26,27,33,34,35,36,37,38,43,44,49,50,55,56],"tindex":"cae52293-3f4b-11e6-bc72-8d58eab51f94","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[592],"tindex":"cae52294-3f4b-11e6-bc72-37fc8056dcd5","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl"},"failures":[3,593,594,595,596,6,7,597,598,599,600,601,602,603,604,605,606,607,608,609,610],"tindex":"cae52295-3f4b-11e6-bc72-a9b641cd4d5b","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 3) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae549a6-3f4b-11e6-bc72-e7f604e65498","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[611,612,613,614,615],"tindex":"cae549a7-3f4b-11e6-bc72-15118391ecbf","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl"},"failures":[616],"tindex":"cae549a8-3f4b-11e6-bc72-99ca78ebdf5e","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae570b9-3f4b-11e6-bc72-ef56dbc373df","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:739","type":"CtMethodImpl","sourcecode":"protected V entryValue(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtBinaryOperatorImpl"},"failures":[76,77,79,80,81,84,86,89,90,126,127,129,130,131,134],"tindex":"cae570ba-3f4b-11e6-bc72-2b997dded9f2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl"},"failures":[617],"tindex":"cae570bb-3f4b-11e6-bc72-c76310f983a2","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[618],"tindex":"cae597cc-3f4b-11e6-bc72-7765b00d9e03","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl"},"failures":[619],"tindex":"cae597cd-3f4b-11e6-bc72-bb868973491e","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"cae597ce-3f4b-11e6-bc72-69565268c77b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                {\n                    for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                        final V V = it.next();\n                        if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                            it.remove();\n                            return true;\n                        } \n                    }\n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl"},"failures":[620],"tindex":"cae5bedf-3f4b-11e6-bc72-7d7f863be976","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl"},"failures":[621],"tindex":"cae5bee0-3f4b-11e6-bc72-751d90a86a25","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl"},"failures":[62,63,64,65,67,118,119,120],"tindex":"cae5bee1-3f4b-11e6-bc72-4b0037177f3a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[622,623],"tindex":"cae5e5f2-3f4b-11e6-bc72-4deaa89c0b1d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae5e5f3-3f4b-11e6-bc72-35a6c974b29a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry != null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae5e5f4-3f4b-11e6-bc72-a5fc400fe2f3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (node == null) {\n                        return firstEntry();\n                    } else {\n                        return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl"},"failures":[624],"tindex":"cae60d05-3f4b-11e6-bc72-37ab1a4d0979","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[625],"tindex":"cae60d06-3f4b-11e6-bc72-8507561ef361","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae60d07-3f4b-11e6-bc72-093f960a0da2","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[626],"tindex":"cae63418-3f4b-11e6-bc72-2baab4d90d96","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cae63419-3f4b-11e6-bc72-dd99729bf7d2","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344755179/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}