{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":355,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":52,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":45,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":125,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":211,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":241,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":225,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":2,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":151,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":458,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":80,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":79,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":171,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":397,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":473,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":121,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":297,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":142,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":141,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":143,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":365,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":452,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":326,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":50,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":127,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":70,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":380,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":472,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":359,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":319,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":401,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":317,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":258,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":156,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":385,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":173,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":204,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":159,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":324,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":426,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":376,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":213,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":383,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":313,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":192,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":92,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.CollectionUtilsTest.intersection":306,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":163,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":363,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":456,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":393,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":388,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":428,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":255,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":122,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":250,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":251,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":179,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":435,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":209,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":443,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":460,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":356,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":118,"org.apache.commons.collections4.map.CompositeMapTest.testPut":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":113,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":36,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":461,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":237,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":58,"org.apache.commons.collections4.map.CompositeMapTest.testGet":295,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":75,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":128,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":185,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":284,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":470,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":281,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":282,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":292,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":312,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":197,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":149,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":253,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":373,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":254,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":126,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":51,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":302,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":420,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":129,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":35,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":1,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":132,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":267,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":279,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":265,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":342,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":175,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":362,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":264,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":394,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":423,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":310,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":453,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":391,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":314,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":48,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":482,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":468,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":19,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":403,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":464,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":63,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":327,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":439,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":29,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":124,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":0,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":46,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":437,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":438,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":459,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":337,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":18,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":236,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":133,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":354,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":235,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":234,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":233,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":83,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":375,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":299,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":76,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":298,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":476,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":206,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":425,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":350,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":136,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":411,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":223,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":123,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":150,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":431,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":386,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":449,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":290,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":277,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":404,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":421,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":478,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":349,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":135,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":219,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":218,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":217,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":400,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":53,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":212,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":82,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":182,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":10,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":392,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":474,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":243,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":54,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":303,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":222,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":190,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":201,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":202,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":300,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":203,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":450,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":275,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":293,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":239,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":477,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":189,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":469,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":114,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":315,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":276,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":195,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":412,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":161,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":415,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":304,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":316,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":196,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":145,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":146,"org.apache.commons.collections4.SetUtilsTest.testHashCode":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":454,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":106,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":417,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":40,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":215,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":214,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":216,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":358,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":178,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":287,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":378,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":429,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":395,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":105,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":73,"org.apache.commons.collections4.set.CompositeSetTest.testContains":291,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":228,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":38,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":112,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":414,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":260,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":25,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":98,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":308,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":447,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":455,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":341,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":402,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":138,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":338,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":320,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":444,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":446,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":332,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":62,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":67,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":433,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":15,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":340,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":167,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":186,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":348,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":457,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":164,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":343,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":311,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":81,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":199,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":198,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":87,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":475,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":99,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":381,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":246,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":120,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":194,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":318,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":274,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":466,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":193,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":244,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":47,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":9,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":406,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":152,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":384,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":419,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":407,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":440,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":110,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":410,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":153,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":357,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":56,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":59,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":480,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":231,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":347,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":177,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":377,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":467,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":174,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":305,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":108,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":257,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":180,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":5,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":432,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":165,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":33,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":269},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"e4da6f12-2ece-11e6-bbe6-eb739ca679ad","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<K, V>.get(key);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl","sourcecode":"to != null"},"failures":[],"tindex":"e4dba793-2ece-11e6-bbe6-553ad4b617bd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (to != null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"to"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"e4dbf5b4-2ece-11e6-bbe6-e5c3e61cc958","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"e4dc43d5-2ece-11e6-bbe6-d30efd4ba744","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[32,33,34,35,36],"tindex":"e4dc6ae6-2ece-11e6-bbe6-a16615286c66","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[37],"tindex":"e4dc91f7-2ece-11e6-bbe6-0da4bdc982a7","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[38,39,40,41,42,43],"tindex":"e4dce018-2ece-11e6-bbe6-f71d22700d4f","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[44,45,46,47,48],"tindex":"e4dd0729-2ece-11e6-bbe6-9718605849bb","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[49],"tindex":"e4ddca7a-2ece-11e6-bbe6-6deb57aa8455","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"e4ddca7b-2ece-11e6-bbe6-81a6771d5b6e","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e4ddf18c-2ece-11e6-bbe6-3b96d8e25ef6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[50],"tindex":"e4ddf18d-2ece-11e6-bbe6-9396ae1caecf","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"e4ddf18e-2ece-11e6-bbe6-456c7225aac1","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().contains(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e4de189f-2ece-11e6-bbe6-77ae0d211f19","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"e4de18a0-2ece-11e6-bbe6-07b53291baf8","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[51],"tindex":"e4de18a1-2ece-11e6-bbe6-a30f3e0374a5","method":{"position":"org.apache.commons.collections4.SplitMapUtils:158","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[52],"tindex":"e4de18a2-2ece-11e6-bbe6-df2c0acfa7a2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"e4de3fb3-2ece-11e6-bbe6-eb1f27f3cc67","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"e4de3fb4-2ece-11e6-bbe6-675b8fa154f4","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"e4de66c5-2ece-11e6-bbe6-e1a0eaf60074","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[77],"tindex":"e4de8dd6-2ece-11e6-bbe6-758b2545b789","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4de8dd7-2ece-11e6-bbe6-713834d270d9","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return defaultValue;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[78,79,80,81,82,83,68,69,70,71,72,84,73,74,75,76,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"e4deb4e8-2ece-11e6-bbe6-2982c7fa2e59","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[97,98,99,100,101,102,103],"tindex":"e4deb4e9-2ece-11e6-bbe6-19baac08284b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[104],"tindex":"e4dedbfa-2ece-11e6-bbe6-df5a643637a6","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtBinaryOperatorImpl","sourcecode":"(node.getRight(dataElement)) != null"},"failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,99,132,100,133,101,102,103,134,135],"tindex":"e4dedbfb-2ece-11e6-bbe6-7dd1046e8971","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:681","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> leastNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getRight(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getLeft(dataElement)) != null) {\n                    rval = rval.getLeft(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"e4df030c-2ece-11e6-bbe6-7197b4221bb2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:169","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[136,137],"tindex":"e4df030d-2ece-11e6-bbe6-fb9b3f9a0fa7","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"e4df030e-2ece-11e6-bbe6-7fac845b795f","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"e4df2a1f-2ece-11e6-bbe6-093427a14b75","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"e4df2a20-2ece-11e6-bbe6-31940130a32a","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"e4df2a21-2ece-11e6-bbe6-f9c676be3288","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[138],"tindex":"e4df2a22-2ece-11e6-bbe6-6739ad7aa4d1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"e4df5133-2ece-11e6-bbe6-1b4920c2e70a","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (defaultList == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"defaultList"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"e4df5134-2ece-11e6-bbe6-8df581c35f1a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<K, V>.get(key);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"e4df5135-2ece-11e6-bbe6-397fcaa83540","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"e4df7846-2ece-11e6-bbe6-5947b226eb87","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[53,54,55,56,57,58,59,60,61,139,140,141,142,143,144,62,63,64,65,66,67,145,146,68,69,70,71,72,73,74,75,76,86,87,89,90,91,147],"tindex":"e4df7847-2ece-11e6-bbe6-ad20505b0d31","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:140","type":"CtMethodImpl","sourcecode":"static boolean compare(final java.lang.Object a, final java.lang.Object b) {\n    if ((a == null) || (b == null)) {\n        {\n            return a == null ? b == null : a.equals(b);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[148,149,150,151,152,153],"tindex":"e4df7848-2ece-11e6-bbe6-41d0942666b5","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((start1 - end1) > (start2 - end1)) {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end1","end2":"start2","end1":"start1","start2":"end1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[154,155,156,157,158],"tindex":"e4df9f59-2ece-11e6-bbe6-c99ae403682a","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,155,173,174,175,176,177,178,179,180,181,182,183],"tindex":"e4dfc66a-2ece-11e6-bbe6-3f51fc877cbd","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4dfc66b-2ece-11e6-bbe6-6555d2cdf07f","method":{"position":"org.apache.commons.collections4.MapUtils:722","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key, final boolean defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (booleanObject == null) {\n                return defaultValue;\n            } \n            return booleanObject.booleanValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[184,185,186],"tindex":"e4dfc66c-2ece-11e6-bbe6-d51efccf70d3","method":{"position":"org.apache.commons.collections4.functors.NotPredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NotPredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"e4dfed7d-2ece-11e6-bbe6-1fd4bd920e73","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[187],"tindex":"e4dfed7e-2ece-11e6-bbe6-2ddc25a70ca8","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[188,189],"tindex":"e4dfed7f-2ece-11e6-bbe6-5d70b3224d67","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[190],"tindex":"e4e01490-2ece-11e6-bbe6-bfaebed84288","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"e4e01491-2ece-11e6-bbe6-d72ed3e5f547","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4e01492-2ece-11e6-bbe6-d11f912e02e9","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[191],"tindex":"e4e03ba3-2ece-11e6-bbe6-6b3234d5ac7e","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[192,193,194,195,196,197,48,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"e4e03ba4-2ece-11e6-bbe6-c710bdc98f0a","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[287,288],"tindex":"e4e062b5-2ece-11e6-bbe6-9987677dfc20","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list == null) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e4e062b6-2ece-11e6-bbe6-c7a977284faf","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:86","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"e4e062b7-2ece-11e6-bbe6-2bfa77fffcc8","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"e4e089c8-2ece-11e6-bbe6-7fb95671c632","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"e4e089c9-2ece-11e6-bbe6-596f31f99ec8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.DefaultedMap:105","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"e4e0b0da-2ece-11e6-bbe6-9b635bbe0e6d","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[192,193,194,195,196,197,48,204,309,310,205,206,207,208,209,210,211,212,213,220,311,312,221,222,223,224,225,313,226,227,228,229,236,314,315,237,238,239,240,241,242,243,244,245,252,271,272,273,274,275,276,277,278,279,286],"tindex":"e4e0b0db-2ece-11e6-bbe6-f5bc1647253c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e4e0d7ec-2ece-11e6-bbe6-1f3aced69b72","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e4e0d7ed-2ece-11e6-bbe6-e3601fce4832","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[316,317,318,319,105,97,320,321,322,323,324,106,325,326,107,108,327,109,110,111,112,113,114,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,115,116,345,346,347,117,98,348,349,350,351,352,353,118,354,355,356,357,358,359,360,119,120,121,122,123,124,125,126,127,361,128,362,363,129,130,364,365,366,367,368,369,370,371,372,131,373,374,99,132,375,376,100,133,101,102,103],"tindex":"e4e0d7ee-2ece-11e6-bbe6-7d180c6fedff","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[377],"tindex":"e4e0feff-2ece-11e6-bbe6-0fff80fac296","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"e4e0ff00-2ece-11e6-bbe6-1fea82f6ebfb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getParent(getParent(node, dataElement), dataElement);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"e4e0ff01-2ece-11e6-bbe6-b3366bf2d279","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4e12612-2ece-11e6-bbe6-b3299fa24b39","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[378],"tindex":"e4e12613-2ece-11e6-bbe6-bf1b7061d883","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[379,380],"tindex":"e4e12614-2ece-11e6-bbe6-a7c4d8c3e551","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[381],"tindex":"e4e14d25-2ece-11e6-bbe6-616cea442e4f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[382],"tindex":"e4e14d26-2ece-11e6-bbe6-695d276fb5ed","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:543","type":"CtBinaryOperatorImpl","sourcecode":"equator == null"},"failures":[383],"tindex":"e4e14d27-2ece-11e6-bbe6-f9f6eb84e57b","method":{"position":"org.apache.commons.collections4.CollectionUtils:542","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic static boolean isEqualCollection(final java.util.Collection<?> a, final java.util.Collection<?> b, final org.apache.commons.collections4.Equator<?> equator) {\n    if (equator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (equator == null) {\n                throw new java.lang.IllegalArgumentException(\"equator may not be null\");\n            } \n            if ((a.size()) != (b.size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.Transformer org.apache.commons.collections4.Transformer = new org.apache.commons.collections4.Transformer() {\n                public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n                    return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n                }\n            };\n            return org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.collect(a, transformer), org.apache.commons.collections4.CollectionUtils.collect(b, transformer));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[51],"tindex":"e4e17438-2ece-11e6-bbe6-5166f86fb791","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[384],"tindex":"e4e17439-2ece-11e6-bbe6-15b68448d7e5","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"e4e19b4a-2ece-11e6-bbe6-ebb4a6dd2ded","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[385],"tindex":"e4e19b4b-2ece-11e6-bbe6-63320e718183","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"e4e19b4c-2ece-11e6-bbe6-0d7f1504d0e9","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[386,387,388,389],"tindex":"e4e19b4d-2ece-11e6-bbe6-fb86a8994142","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index > 0) {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"e4e1c25e-2ece-11e6-bbe6-73dbbe3f37e7","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[316,317,318,319,105,97,320,321,322,323,324,106,325,326,107,108,327,109,110,111,112,113,114,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,115,116,345,346,347,117,98,348,349,350,351,352,353,118,354,355,356,357,358,359,360,119,120,121,122,123,124,125,126,127,361,128,362,363,129,130,364,365,366,367,368,369,370,371,372,131,373,374,99,132,375,376,100,133,101,102,103],"tindex":"e4e1c25f-2ece-11e6-bbe6-798b6720dd5b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"e4e1e970-2ece-11e6-bbe6-6574386c959f","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"e4e1e971-2ece-11e6-bbe6-5b6b8f02cfd6","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:146","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[390,391],"tindex":"e4e1e972-2ece-11e6-bbe6-ff39abc73564","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"e4e21083-2ece-11e6-bbe6-17e9e083a007","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[143,91],"tindex":"e4e21084-2ece-11e6-bbe6-0b0d89d77169","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[406,407,408],"tindex":"e4e21085-2ece-11e6-bbe6-8d42fe4f18bd","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e4e21086-2ece-11e6-bbe6-2f14bb432e0f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"e4e23797-2ece-11e6-bbe6-4be212f440d1","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[187],"tindex":"e4e23798-2ece-11e6-bbe6-2f0604bd7a54","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[289,290,291,292,293,294,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"tindex":"e4e23799-2ece-11e6-bbe6-aba20d8ecafb","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[321,322,350,351,353],"tindex":"e4e25eaa-2ece-11e6-bbe6-d3020d294bc3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[476],"tindex":"e4e25eab-2ece-11e6-bbe6-b37fc37bd2e8","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"e4e285bc-2ece-11e6-bbe6-978cfad7c0fb","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:767","type":"CtMethodImpl","sourcecode":"private static void makeBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setBlack(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"e4e285bd-2ece-11e6-bbe6-4b800030fd9d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return getParent(getParent(node, dataElement), dataElement);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"e4e285be-2ece-11e6-bbe6-45da4843243d","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[477,52,478,479,480],"tindex":"e4e285bf-2ece-11e6-bbe6-15831842cc1c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[184,185,186],"tindex":"e4e2acd0-2ece-11e6-bbe6-051e35cba55f","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[],"tindex":"e4e2acd1-2ece-11e6-bbe6-d7d7c3cc32f4","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == 1) {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"e4e2acd2-2ece-11e6-bbe6-1127276a6f4c","method":{"position":"org.apache.commons.collections4.SetUtils:230","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> transformedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.set.TransformedSet.transformingSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"e4e2acd3-2ece-11e6-bbe6-897c98ea58f3","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[481,482],"tindex":"e4e2d3e4-2ece-11e6-bbe6-e1752a71a6a9","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[128,130,131,99,132,100,133,101,102,103],"tindex":"e4e2d3e5-2ece-11e6-bbe6-3373c1dbe634","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getLeft(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}