{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":319,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":317,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":149,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":315,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":327,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":300,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":275,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":120,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":170,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":38,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":255,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":2,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":253,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":0,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":75,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":226,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":111,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":338,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":141,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":297,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":22,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":329,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":190,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":173,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":230,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":242,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":105,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":269,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":85,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":247,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":238,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":308,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":134,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":305,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":310,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":273,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":100,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":164,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":237,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":5,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":14,"org.apache.commons.collections4.list.TreeListTest.testBug35258":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":220,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":106,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":176,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":158,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":34,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":90,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":131,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":203,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":236,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":137,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":328,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":43,"org.apache.commons.collections4.list.TreeListTest.testRemove":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":208,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":156,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":312,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":119,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":61,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":115,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":279,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":30,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":323,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":180,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":282,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":96,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":97,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":179,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":168,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":4,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":73,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":318,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":240,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":244,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":147,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":260,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":135,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":254,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":36,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":286,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":231,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":227,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":80,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":192,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":89,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":309,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":133,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":229,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":235,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":296,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":267,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":28,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":200,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":11,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":116,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":112,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":301},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[0],"tindex":"1962b826-2e9a-11e6-8dc2-857d44c81912","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"196417b7-2e9a-11e6-8dc2-a1eeb0b66604","method":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                final char[] char[] = key.toString().toCharArray();\n                for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n                    chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n                }\n                return new java.lang.String(chars);\n            } \n            return org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Integer"},"failures":[46],"tindex":"1964db08-2e9a-11e6-8dc2-0d4d90cf009a","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key instanceof java.lang.Integer) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[47],"tindex":"19650219-2e9a-11e6-8dc2-2f38ff3e0b2a","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtInvocationImpl","sourcecode":"currentNode.isLeftChild(dataElement)"},"failures":[48,49,50,51,52,53,54,55,56,57],"tindex":"1965ec7a-2e9a-11e6-8dc2-87b22099e8ee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1959","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node.isLeftChild(dataElement)) {\n        {\n            boolean[][dataElement.ordinal()] = node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"1965ec7b-2e9a-11e6-8dc2-1d479c04eee5","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"1966138c-2e9a-11e6-8dc2-5b924391656a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if ((object instanceof java.util.Map<?, ?>) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"19663a9d-2e9a-11e6-8dc2-25361d0470e8","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl","sourcecode":"((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[],"tindex":"19663a9e-2e9a-11e6-8dc2-9dbdb634edbe","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"19663a9f-2e9a-11e6-8dc2-4b5f78429de8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (!(obj == null ? obj == null : o1.equals(o2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"obj","o2":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[73,150,85,151,152,153,101,154,155,156,148,131,157],"tindex":"196661b0-2e9a-11e6-8dc2-7f427f861788","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"196661b1-2e9a-11e6-8dc2-05af3d0dfca9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:508","type":"CtMethodImpl","sourcecode":"protected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            (int)--;\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[214,215,216,217],"tindex":"196688c2-2e9a-11e6-8dc2-47c52642ec79","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Long) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"196688c3-2e9a-11e6-8dc2-c1ac8c512f3f","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[],"tindex":"1966afd4-2e9a-11e6-8dc2-eb388778f51c","method":{"position":"org.apache.commons.collections4.CollectionUtils:968","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if (inputCollection instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (!(predicate.evaluate(item))) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl","sourcecode":"m < 0"},"failures":[218,219,220,221,222,223],"tindex":"1966afd5-2e9a-11e6-8dc2-5940ea112b8a","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies < 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[],"tindex":"1966afd6-2e9a-11e6-8dc2-45f0d153bc8d","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:393","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = key.hashCode();\n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"1966d6e7-2e9a-11e6-8dc2-8b4dad1c3399","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[251],"tindex":"1966d6e8-2e9a-11e6-8dc2-ff376e55e2f1","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"1966d6e9-2e9a-11e6-8dc2-2dde0f844779","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((b == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE)) != null"},"failures":[252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,57,323,324,325,48,326,327,328,329,330,331,332,333,334,49,335,336,50,51,337,338,52,53,54,55,56],"tindex":"1966fdfa-2e9a-11e6-8dc2-b3c6d43d9d18","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:879","type":"CtMethodImpl","sourcecode":"private void doRedBlackInsert(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> insertedNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((insertedNode.getLeft(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = insertedNode;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(currentNode, dataElement);\n            while (((currentNode != null) && (currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]))) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(currentNode.getParent(dataElement), dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isRightChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateLeft(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                } else {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateRight(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateLeft(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()], dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"insertedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"1969bd1b-2e9a-11e6-8dc2-09fe2b9f55f3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1711","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[339],"tindex":"1969bd1c-2e9a-11e6-8dc2-5754e8589169","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[],"tindex":"1969bd1d-2e9a-11e6-8dc2-05adabe88f23","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"1969e42e-2e9a-11e6-8dc2-79fb0d35d5e5","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1969e42f-2e9a-11e6-8dc2-b7315596e370","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":26,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}