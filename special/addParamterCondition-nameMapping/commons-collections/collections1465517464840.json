{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":69,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":719,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":666,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":710,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":333,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":550,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":776,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":393,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":694,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":79,"org.apache.commons.collections4.CollectionUtilsTest.collect":410,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":19,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":470,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":20,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":488,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalFullCollectionExists":616,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":320,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":193,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":356,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":456,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":31,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":295,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":809,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":73,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":114,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":457,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":568,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":112,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":728,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":588,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":436,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":677,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":832,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":343,"org.apache.commons.collections4.CollectionUtilsTest.select":815,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":223,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":304,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":689,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":775,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":678,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":621,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":716,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":771,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":354,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":788,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":794,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":590,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":535,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.CollectionUtilsTest.intersection":485,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":687,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":87,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":175,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":4,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":80,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":350,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":130,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":602,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":686,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":712,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":424,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":70,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":422,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":784,"org.apache.commons.collections4.map.CompositeMapTest.testPut":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":133,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":723,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":198,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":35,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":756,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":85,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":397,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":215,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":450,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":407,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":806,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":838,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":782,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":769,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":516,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":584,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":244,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":243,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":596,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":240,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":608,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":100,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":327,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":298,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":675,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":289,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":821,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":518,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":49,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":842,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":835,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":269,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":623,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":853,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":448,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":418,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":256,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":86,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":511,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":220,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":799,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":824,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":732,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":759,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":185,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":386,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":599,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":249,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":849,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":380,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":181,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":201,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":671,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":129,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":653,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":699,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":116,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":713,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":334,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":567,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":325,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":755,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":359,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":793,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":664,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":491,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":203,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":783,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":318,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":202,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":324,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":247,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":323,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":375,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":221,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":530,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":583,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":420,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":715,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":36,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":814,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":453,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":454,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":779,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":428,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":377,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":63,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":517,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":302,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":27,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":404,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":233,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":674,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":570,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":403,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":260,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":312,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":242,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":851,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":828,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":172,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":218,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":388,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":634,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":496,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":647,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":520,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":768,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":385,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":844,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":358,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":382,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":676,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":51,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":560,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":830,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":374,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":362,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":625,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":156,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":12,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":562,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":555,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":402,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":641,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":352,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":703,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":353,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":785,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":527,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":576,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":134,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":124,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":506,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":26,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":767,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":52,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":316,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":657,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":441,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":212,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":531,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":482,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":780,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":833,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":214,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":848,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":474,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":836,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":72,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":301,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":816,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":760,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":787,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":811,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":854,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":801,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":417,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":721,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":837,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":310,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":204,"org.apache.commons.collections4.list.TreeListTest.testBug35258":822,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":132,"org.apache.commons.collections4.ListUtilsTest.testSelect":810,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCanonicalEmptyCollectionExists":615,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":847,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":819,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":855,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":282,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":690,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":234,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":594,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":682,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":283,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":321,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":791,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":147,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":445,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":646,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":151,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testDecorateFactory":798,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":415,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":138,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":795,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":199,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":226,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":196,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":239,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":565,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":797,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":575,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":340,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":416,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":540,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":149,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":741,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":37,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":579,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":693,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":409,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":230,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":734,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":238,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":611,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":54,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":572,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":275,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":394,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":669,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":303,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":722,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":840,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":578,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":536,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":183,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":400,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":800,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":251,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":554,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":411,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":627,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":444,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":194,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":369,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":216,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":462,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":585,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":772,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":71,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":14,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":235,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":58,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":317,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":483,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":128,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":322,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":637,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":618,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":297,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":366,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":808,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":498,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":513,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":524,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":259,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":274,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":778,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":188,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":228,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":429,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":5,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":545,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":91,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":737,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":292,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":818,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":645,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":845,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":75,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":812,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":762,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":659,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":492,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":503,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":219,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":581,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":514,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":574,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":720,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":749,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":614,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":635,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":747,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":438,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":748,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":805,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":351,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":633,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":589,"org.apache.commons.collections4.CollectionUtilsTest.transform2":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":121,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":825,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":526,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":544,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":546,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":268,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":508,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":261,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":763,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":95,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":419,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":709,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":93,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":628,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":702,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":620,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":22,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":465,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":792,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":582,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":191,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":644,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":706,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":672,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":714,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":168,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":423,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":368,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":178,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":504,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":67,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":392,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":630,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":231,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":379,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":758,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":179,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":515,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":15,"org.apache.commons.collections4.map.CompositeMapTest.testGet":468,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":774,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":257,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":153,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":163,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":372,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":50,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":698,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":495,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":258,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":13,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":479,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":236,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":399,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":108,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":541,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":790,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":34,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":761,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":753,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":681,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":695,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":663,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":556,"org.apache.commons.collections4.CollectionUtilsTest.union":484,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":566,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":852,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":300,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":92,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":480,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":580,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":796,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":83,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":217,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":437,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":414,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":237,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":88,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":649,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":650,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":551,"org.apache.commons.collections4.list.TreeListTest.testRemove":827,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":704,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":76,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":846,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":701,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":30,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":729,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":290,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":270,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":395,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":383,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":850,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":96,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":586,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":673,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":330,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":711,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":336,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":656,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":655,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":654,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":319,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":405,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":28,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":294,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":435,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":740,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":665,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":47,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":668,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":631,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":3,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":155,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":309,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":364,"org.apache.commons.collections4.list.TreeListTest.testListEquals":831,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":786,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":74,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":558,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":254,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":730,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":164,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":603,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":177,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":564,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":829,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":281,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":507,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":662,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":642,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":329,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":519,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":610,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":107,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":725,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":764,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":781,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":455,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":104,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":613,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":472,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":471,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":427,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":413,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":826,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":209,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":1,"org.apache.commons.collections4.ListUtilsTest.testHashCode":802,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":823,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":440,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":81,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":587,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":626,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":347,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":532,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":571,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":604,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":735,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":459,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":622,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":62,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":697,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":17,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":306,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":370,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":305,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":443,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":293,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":777,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":135,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":461,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":476,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":624,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":843,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":189,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":739,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":278,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":813,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":481,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":553,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":197,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":371,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":337,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":338,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":473,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":263,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":497,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":109,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":250,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":442,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":467,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":500,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":817,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":286,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":426,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":195,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":490,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":660,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":111,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":744,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":745,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":601,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":746,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":174,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":841,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":770,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":834,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":401,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":48,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":315,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":434,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":150,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":726,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":115,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":157,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":738,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":33,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":509,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":742,"org.apache.commons.collections4.set.CompositeSetTest.testContains":478,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":99,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":696,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":211,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":661,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":632,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":820,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":487,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":619,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":717,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":144,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":46,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":137,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":807,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":505,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":643,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":731,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":439,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":533,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":117,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":612,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":803,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":169,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":171,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":170,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":684,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":2,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":6,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":543,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":718,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":341,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":376,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":552,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":227,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":430,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":502,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":146,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":667,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":789,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":523,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":561,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":534,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":89,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":348,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":577,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":421,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":373,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":539,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":750,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":751,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":752,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":389,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":499,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":90,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":387,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":458,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":510,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":229,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":707,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":119,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":113,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":464,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":0,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":501,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":335,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":384,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":431,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":451,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":528,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":765,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":167,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":131,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":208,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":658,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":804,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":412,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":184,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":754,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":363,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":839,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":766,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":597,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":542,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":727,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":361,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":381},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[0,1],"tindex":"d2905219-2e9f-11e6-9f02-2bb96824d4ba","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (null == object) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"d290ee5a-2e9f-11e6-9f02-b323edf12ae7","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"d291156b-2e9f-11e6-9f02-5b7e3fa32166","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:378","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return false;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[47,48,49,50,51,52,53,54],"tindex":"d2913c7c-2e9f-11e6-9f02-d9b2fffeb4f4","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"d291638d-2e9f-11e6-9f02-4f965b9da2eb","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d291638e-2e9f-11e6-9f02-f1f0a22242c5","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"d2918a9f-2e9f-11e6-9f02-1d98ec121d50","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:80","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[55],"tindex":"d2918aa0-2e9f-11e6-9f02-91652b3e2524","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[56],"tindex":"d291b1b1-2e9f-11e6-9f02-cb707dbf83c2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"d291d8c2-2e9f-11e6-9f02-fd1a0b235810","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:161","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d29226e3-2e9f-11e6-9f02-1941fd28c31d","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"d29226e4-2e9f-11e6-9f02-55cd5a36282e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[154,155,156,157],"tindex":"d2924df5-2e9f-11e6-9f02-7da578050434","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"d2927506-2e9f-11e6-9f02-7591ff9cafe4","method":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"d2927507-2e9f-11e6-9f02-83318f741442","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:132","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj.getClass().isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"tindex":"d2929c18-2e9f-11e6-9f02-65cc83ece4fc","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[238],"tindex":"d292c329-2e9f-11e6-9f02-7fe3fad05a98","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"tindex":"d292c32a-2e9f-11e6-9f02-c3f9df91213f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[371,372],"tindex":"d292ea3b-2e9f-11e6-9f02-7343ee64ab65","method":{"position":"org.apache.commons.collections4.TransformerUtils:379","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[10,18,19,20,22,24,373,374,375,36,37,38,40,42],"tindex":"d293114c-2e9f-11e6-9f02-03c38ede3db3","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[376,377,378,379,380,381,382,383,384,385,386,387,0,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,1],"tindex":"d293114d-2e9f-11e6-9f02-139d9d78276f","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d293385e-2e9f-11e6-9f02-07cac6310161","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:66","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"d293385f-2e9f-11e6-9f02-19045b0c7c89","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:89","type":"CtMethodImpl","sourcecode":"protected void setCollection(final java.util.Collection<E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.collection.AbstractCollectionDecorator.this.java.util.Collection<E> = coll;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d2933860-2e9f-11e6-9f02-fba79d6b49c9","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"d2935f71-2e9f-11e6-9f02-0d237febf394","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[404],"tindex":"d2935f72-2e9f-11e6-9f02-19be6b7d4699","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"d2938683-2e9f-11e6-9f02-d5b0cea09288","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[405,406],"tindex":"d2938684-2e9f-11e6-9f02-e5f85f5daeb9","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[407],"tindex":"d2938685-2e9f-11e6-9f02-53284cff79d8","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:56","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((predicates.int) != (closures.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(predicates , closures , defaultClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[66],"tindex":"d293ad96-2e9f-11e6-9f02-f3e4c9203bdf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[408,409,410],"tindex":"d293ad97-2e9f-11e6-9f02-cf6fb9555ca8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"d293ad98-2e9f-11e6-9f02-0dd1ade59b19","method":{"position":"org.apache.commons.collections4.iterators.TransformIterator:109","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends I> iterator) {\n    if (iterator == null) {\n        {\n            org.apache.commons.collections4.iterators.TransformIterator.this.java.util.Iterator<? extends I> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"tindex":"d293d4a9-2e9f-11e6-9f02-81d6c4654ee0","method":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:112","type":"CtMethodImpl","sourcecode":"protected void checkBound(final int bound, final int len, final java.lang.String type) {\n    if (bound > bound) {\n        {\n            if (bound > len) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"));\n            } \n            if (bound < 0) {\n                throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s before the start of the array. \"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"bound","bound":"bound"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"d293d4aa-2e9f-11e6-9f02-bb52f53ece8a","method":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:134","type":"CtMethodImpl","sourcecode":"public void setEnumeration(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            org.apache.commons.collections4.iterators.EnumerationIterator.this.java.util.Enumeration<? extends E> = enumeration;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d293d4ab-2e9f-11e6-9f02-e5f8b8a8e07f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return doRemoveValue(value);\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[468,469,470,471,472,473,474,475,476,477,478,479,206,480,481,482,483,484,485,486,487],"tindex":"d293fbbc-2e9f-11e6-9f02-65ee0dfc384a","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 3) {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"d293fbbd-2e9f-11e6-9f02-2161174e3cd4","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.getValue()) == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[488],"tindex":"d293fbbe-2e9f-11e6-9f02-bd4a20eef174","method":{"position":"org.apache.commons.collections4.CollectionUtils:409","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll1.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll1.size()) < (coll2.size())) {\n                for (final java.lang.Object java.lang.Object : coll1) {\n                    if (coll2.contains(aColl1)) {\n                        return true;\n                    } \n                }\n            } else {\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (coll1.contains(aColl2)) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[489,490,491,492],"tindex":"d293fbbf-2e9f-11e6-9f02-bff2199348fa","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[493,228,494],"tindex":"d29422d0-2e9f-11e6-9f02-1d231cc31553","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[484,486,487],"tindex":"d29422d1-2e9f-11e6-9f02-6d623274ff1f","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"d29449e2-2e9f-11e6-9f02-45d578e7d243","method":{"position":"org.apache.commons.collections4.SplitMapUtils:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.SplitMapUtils.WrappedPut.this)) {\n                return true;\n            } \n            return (obj instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(obj)).org.apache.commons.collections4.Put<?, ?>.equals(org.apache.commons.collections4.SplitMapUtils.WrappedPut.this.org.apache.commons.collections4.Put<K, V>));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[495],"tindex":"d29449e3-2e9f-11e6-9f02-378b0e457675","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[496,281,497,498],"tindex":"d29470f4-2e9f-11e6-9f02-49abe3a63a07","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"d29470f5-2e9f-11e6-9f02-ddd7624ae7e4","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,292,293,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,131,142,565,566],"tindex":"d29470f6-2e9f-11e6-9f02-0d05f9ad4b41","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[567],"tindex":"d2949807-2e9f-11e6-9f02-0be2c59da7a0","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[568],"tindex":"d2949808-2e9f-11e6-9f02-1b277d3de0a5","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = super.retainAll(coll);\n            if (changed) {\n                reindex();\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d2949809-2e9f-11e6-9f02-e95cf0cbe9d3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d294980a-2e9f-11e6-9f02-dd44887d70a9","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d294bf1b-2e9f-11e6-9f02-954ee9b2aeb7","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        final java.lang.Object java.lang.Object = map.get(key);\n                        if (answer != null) {\n                            if (answer instanceof java.lang.Number) {\n                                return ((java.lang.Number)(answer));\n                            } \n                            if (answer instanceof java.lang.String) {\n                                try {\n                                    final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                                    return java.text.NumberFormat.getInstance().parse(text);\n                                } catch (final java.text.ParseException e) {\n                                }\n                            } \n                        } \n                    } \n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d294bf1c-2e9f-11e6-9f02-511dcaac089b","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        final V V = map.get(key);\n                        if (answer != null) {\n                            return answer;\n                        } \n                    } \n                    return defaultValue;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d294bf1d-2e9f-11e6-9f02-67eea47cefb0","method":{"position":"org.apache.commons.collections4.MapUtils:183","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        final java.lang.Object java.lang.Object = map.get(key);\n                        if (answer != null) {\n                            if (answer instanceof java.lang.Number) {\n                                return ((java.lang.Number)(answer));\n                            } \n                            if (answer instanceof java.lang.String) {\n                                try {\n                                    final java.lang.String java.lang.String = ((java.lang.String)(answer));\n                                    return java.text.NumberFormat.getInstance().parse(text);\n                                } catch (final java.text.ParseException e) {\n                                }\n                            } \n                        } \n                    } \n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[569,570],"tindex":"d294e62e-2e9f-11e6-9f02-8d3ce93ac518","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Dictionary) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[571,572,573],"tindex":"d294e62f-2e9f-11e6-9f02-8f4c62abea7d","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"d2950d40-2e9f-11e6-9f02-3543c4d579ed","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"d2950d41-2e9f-11e6-9f02-d70ab77b9b61","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,154,155,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617],"tindex":"d2950d42-2e9f-11e6-9f02-67eca0b66038","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d2953453-2e9f-11e6-9f02-8b21716667e9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return doRemoveValue(value);\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643],"tindex":"d2953454-2e9f-11e6-9f02-55298b5d5918","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[644,645,646,647,648,649,650,507,651,652,653,654,655,656,657,508,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,509,678,510,679,680,681,682,683,684,685,686,687,688],"tindex":"d2953455-2e9f-11e6-9f02-c1d6c081e554","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:104","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(factory));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[689,690],"tindex":"d2955b66-2e9f-11e6-9f02-99c7abddfbfd","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"d2955b67-2e9f-11e6-9f02-df809290a3f6","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[691,692],"tindex":"d2955b68-2e9f-11e6-9f02-63f541629cd1","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"d2955b69-2e9f-11e6-9f02-2f8e5da72662","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:139","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return decorated().removeAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d2955b6a-2e9f-11e6-9f02-6bda495ffc15","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return doRemoveValue(value);\n                        }\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"d295827b-2e9f-11e6-9f02-372001b90d67","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[693],"tindex":"d295827c-2e9f-11e6-9f02-99b36b13afde","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map == null) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"d295827d-2e9f-11e6-9f02-27264ec8d37c","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.getValue()) == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"d295a98e-2e9f-11e6-9f02-83afa81815be","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[694,695,696,697,158,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,159,160,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,568,738,739,740,741,742,743],"tindex":"d295a98f-2e9f-11e6-9f02-d32a5d7e509f","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"d295a990-2e9f-11e6-9f02-55c86f5f460f","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[9,2,3,4,5,6,744,745,746,28,11,12,13,14,15,16,17,18,747,748,749,19,20,21,24,46,29,30,31,32,33,34,35,36,750,751,752,37,38,39,42],"tindex":"d295d0a1-2e9f-11e6-9f02-ed4ca7fafa3d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n                    return (candidate != null) && (candidate.equals(o));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"d295d0a2-2e9f-11e6-9f02-2543828ec577","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[753,754,755,756,757,758],"tindex":"d295d0a3-2e9f-11e6-9f02-5b814fe288fa","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return remove(object, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d295f7b4-2e9f-11e6-9f02-1bd49b12e273","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:163","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            return (lookupKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"d295f7b5-2e9f-11e6-9f02-cf615e6c74a4","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[],"tindex":"d295f7b6-2e9f-11e6-9f02-6109e948eb18","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774],"tindex":"d295f7b7-2e9f-11e6-9f02-91b774ce1b93","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:132","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"d2961ec8-2e9f-11e6-9f02-a98b9ae50b44","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        final V V = map.get(key);\n                        if (answer != null) {\n                            return answer;\n                        } \n                    } \n                    return defaultValue;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"d2961ec9-2e9f-11e6-9f02-0355878323d9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"d2961eca-2e9f-11e6-9f02-af343ca4977c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n                    return (candidate != null) && (candidate.equals(o));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[775],"tindex":"d29645db-2e9f-11e6-9f02-3199a2f9943a","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtBinaryOperatorImpl","sourcecode":"entry != null"},"failures":[776,777,778,779,780,781,373,374,375,46,782,29,30,783,31,32,784,785,33,34,786,787,35,36,788,789,790,750,751,752,37,38,39,791,792,793,794,40,795,796,41,42,43,44,45,797],"tindex":"d29645dc-2e9f-11e6-9f02-5d54233b76f0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[798,799],"tindex":"d29693fd-2e9f-11e6-9f02-8929b8968c5b","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"d29693fe-2e9f-11e6-9f02-73a2e31d7b43","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"d29693ff-2e9f-11e6-9f02-d9567f531c68","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[800,801,691,692],"tindex":"d296bb10-2e9f-11e6-9f02-cbd2257e06f9","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[802],"tindex":"d296bb11-2e9f-11e6-9f02-05ef6d47ee1c","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[85,89,99,102,103,106,107,108,109,110],"tindex":"d296bb12-2e9f-11e6-9f02-051f46489219","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"d296bb13-2e9f-11e6-9f02-17dd44579d24","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[803],"tindex":"d296e224-2e9f-11e6-9f02-e9516415da83","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[497,498,496,281,804],"tindex":"d296e225-2e9f-11e6-9f02-f35123c7dfff","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"d296e226-2e9f-11e6-9f02-853ca2d2abdc","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:939","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[805,806,807,808,809,55],"tindex":"d296e227-2e9f-11e6-9f02-f3e8c05b0db5","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[468,469,470,471,472,473,474,475,810,811,476,477,478,479,206,480,812,813,814,481,482,815,483,816,409,484,485,817,818,486,487,819],"tindex":"d2970938-2e9f-11e6-9f02-5fe931f6d0ae","method":{"position":"org.apache.commons.collections4.CollectionUtils:107","type":"CtMethodImpl","sourcecode":"public int freqB(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"d2970939-2e9f-11e6-9f02-b3167b630ccb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:629","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"d297304a-2e9f-11e6-9f02-ab401082158c","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"d297304b-2e9f-11e6-9f02-31bba656a127","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855],"tindex":"d297304c-2e9f-11e6-9f02-85e3483dd2d0","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}