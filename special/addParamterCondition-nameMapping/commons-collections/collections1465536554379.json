{"failureDictionary":{"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":183,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":339,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":230,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":445,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":252,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":158,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":216,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":501,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":318,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":180,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":177,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":412,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":27,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":488,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":144,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":21,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":354,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":406,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":453,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":473,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":32,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":310,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":400,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":240,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":478,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":279,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":436,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":164,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":207,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":211,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":388,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":360,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":431,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":356,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":297,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":73,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":134,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":191,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":113,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":490,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":250,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":87,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":242,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":142,"org.apache.commons.collections4.CollectionUtilsTest.select":393,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":66,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":145,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":479,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":477,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":214,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":220,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":235,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":364,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":150,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":319,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":270,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":256,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":241,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":30,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":496,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":82,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":378,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":93,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":344,"org.apache.commons.collections4.CollectionUtilsTest.intersection":398,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":161,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":121,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":262,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":372,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":72,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":5,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":174,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":175,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":176,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":74,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":322,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":157,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":282,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":130,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":35,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":290,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":330,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":468,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":363,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":20,"org.apache.commons.collections4.map.CompositeMapTest.testPut":405,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":296,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":414,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":258,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.map.CompositeMapTest.testGet":404,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":423,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":70,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":84,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":212,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":140,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":444,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":190,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":120,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":255,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":358,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":125,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":187,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":383,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":222,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":263,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":19,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":446,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":485,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":373,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":375,"org.apache.commons.collections4.CollectionUtilsTest.union":397,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":141,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":342,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":401,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":194,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":195,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":418,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalFullCollectionExists":467,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":385,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":269,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":427,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":361,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":15,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":146,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":411,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":365,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":462,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":475,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":413,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":48,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":151,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":366,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":483,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":218,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":312,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":217,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":459,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":14,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":447,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":98,"org.apache.commons.collections4.list.PredicatedListTest.testCanonicalEmptyCollectionExists":469,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":494,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":11,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":114,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":22,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":34,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":489,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":2,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":493,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":198,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":103,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":200,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":245,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":59,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":247,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":347,"org.apache.commons.collections4.map.LRUMapTest.testClone":291,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":162,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":223,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":267,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":295,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":0,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":197,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":315,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":309,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":68,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":128,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":178,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":43,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":484,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":234,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":426,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":116,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":440,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":7,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":317,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":102,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":253,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":338,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":460,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":437,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":88,"org.apache.commons.collections4.list.PredicatedListTest.testSimpleSerialization":470,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":435,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":71,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":323,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":346,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":209,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":303,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":9,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":337,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":336,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":335,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":374,"org.apache.commons.collections4.map.LRUMapTest.testReset":304,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":350,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":29,"org.apache.commons.collections4.CollectionUtilsTest.exists":69,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":56,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":449,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":408,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":482,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":390,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":407,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":206,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":232,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":266,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":202,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":466,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":349,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":278,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":429,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":305,"org.apache.commons.collections4.map.LinkedMapTest.testReset":196,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":316,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":239,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":320,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":341,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":159,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":39,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":355,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":108,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":381,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":133,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":51,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":425,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":26,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":77,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":461,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":42,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":127,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":340,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":376,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":119,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList":61,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":149,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":89,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":464,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":83,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":131,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":458,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":229,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":137,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":221,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":228,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":455,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":227,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":432,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":219,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":499,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":231,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":380,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":110,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":123,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":352,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":441,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":163,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":389,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":391,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":314,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":359,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":274,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":275,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":409,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":276,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":463,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":457,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":384,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":156,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":126,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":147,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":367,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":415,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":369,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":486,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":75,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":495,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":104,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":243,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":97,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":325,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":348,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":50,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":47,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":238,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":45,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":148,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":260,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":399,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":300,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":105,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":168,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":392,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":343,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":10,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":96,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":439,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":434,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":58,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":64,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":225,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":465,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":224,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":474,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":226,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":410,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":421,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":152,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":201,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":299,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":395,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":185,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":204,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":379,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":139,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":100,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":246,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":136,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":36,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":387,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":107,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":261,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":422,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":480,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":237,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":236,"org.apache.commons.collections4.set.CompositeSetTest.testContains":382,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":129,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":433,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":179,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":189,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":327,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":76,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":424,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":62,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":199,"org.apache.commons.collections4.map.LinkedMapTest.testClone":192,"org.apache.commons.collections4.ListUtilsTest.testSelect":386,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":28,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":244,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":90,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":24,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":403,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":357,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":471,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":476,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":154,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":377,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":3,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":99,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":402,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":311,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":18,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":37,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":169,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":306,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":95,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":289,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":292,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":165,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":443,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":419,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":16,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":38,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":281,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":215,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":53,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsSelfHashCode":472,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":31,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":481,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":492,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":500,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":12,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":351,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":268,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":25,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":417,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":326,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":307,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":118,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":272,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":273,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":420,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":249,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":271,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":67,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":371,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":448,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":497,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":396,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":44,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":1,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":430,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":265,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":57,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":438,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":353,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":106,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":203,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":54,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":171,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":172,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":259,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":283,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":442,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":33,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":324,"org.apache.commons.collections4.map.LRUMapTest.testLRU":302,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":13,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":370,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":4,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":85,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":257,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":450,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":81,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":166,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":452,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":135,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":254,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":46,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":132,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":331,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":264,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":115,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":293,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":487,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":248,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":334,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":456,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":193,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":362,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":251,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":332,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":333,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":454,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":329,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":301,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":394,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":173,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":208,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":117,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":101,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":91,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":294,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":79,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":328,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":428,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":17,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":138,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":416,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":321,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":122,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":124},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[0,1,2,3,4,5],"tindex":"44d0a86a-2ecc-11e6-a911-5f6f59006f15","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"44d16bbb-2ecc-11e6-a911-b35e15b0d8de","method":{"position":"org.apache.commons.collections4.IteratorUtils:364","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array) {\n    if (!(array == null ? array == null : o1.equals(o2))) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"array","o2":"array"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"44d16bbc-2ecc-11e6-a911-4b281d084e60","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Set"},"failures":[],"tindex":"44d192cd-2ecc-11e6-a911-a5a70f261f1b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Set) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[],"tindex":"44d192ce-2ecc-11e6-a911-23f3b01d7bfb","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:105","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"44d1b9df-2ecc-11e6-a911-eff6e65d4779","method":{"position":"org.apache.commons.collections4.list.TreeList:173","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(object)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"44d1b9e0-2ecc-11e6-a911-f3f4b3917541","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"44d1e0f1-2ecc-11e6-a911-2d7fc9ff632f","method":{"position":"org.apache.commons.collections4.SplitMapUtils:100","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[6,7,8,9],"tindex":"44d1e0f2-2ecc-11e6-a911-730f220541ac","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.collections4.Bag) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"44d20803-2ecc-11e6-a911-79dc96a49737","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"44d22f14-2ecc-11e6-a911-eb7f52dd88cd","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null ? obj == null : nextElement.equals(p)) {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"obj","nextElement":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[10,11],"tindex":"44d22f15-2ecc-11e6-a911-c1fdd785b14b","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtInvocationImpl","sourcecode":"set.get(i)"},"failures":[],"tindex":"44d27d36-2ecc-11e6-a911-bd1ad71f4e3d","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if (array.get(start)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"array","i":"start"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"44d27d37-2ecc-11e6-a911-7f101d6cb482","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[12],"tindex":"44d2cb58-2ecc-11e6-a911-c7288ad2dd06","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[13,14],"tindex":"44d2f269-2ecc-11e6-a911-b37c9e40ef63","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtBinaryOperatorImpl","sourcecode":"(end) >= (maxElements)"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"44d3197a-2ecc-11e6-a911-fbf7ca18f850","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"index","end":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[58,59],"tindex":"44d3197b-2ecc-11e6-a911-8ba3a29fa653","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"44d3408c-2ecc-11e6-a911-0f16de8fa893","method":{"position":"org.apache.commons.collections4.map.LinkedMap:293","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<K> listIterator(final int fromIndex) {\n    if (fromIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(super.listIterator(fromIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[],"tindex":"44d3408d-2ecc-11e6-a911-8d369db8fa9c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:700","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entryNext(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[60,61],"tindex":"44d3679e-2ecc-11e6-a911-17b308fb93c8","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[62,63,64,65,66,67],"tindex":"44d3679f-2ecc-11e6-a911-57d95aeea9d9","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[68],"tindex":"44d38eb0-2ecc-11e6-a911-c99f4440a4fd","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:446","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[69],"tindex":"44d3b5c1-2ecc-11e6-a911-fd195ee01999","method":{"position":"org.apache.commons.collections4.CollectionUtils:846","type":"CtMethodImpl","sourcecode":"public static <C>boolean exists(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[70],"tindex":"44d3b5c2-2ecc-11e6-a911-a96d21fcc129","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"44d3b5c3-2ecc-11e6-a911-7d43a0045749","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,10,261,262,263,264,58,265,266,59,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"44d3dcd4-2ecc-11e6-a911-a5d9758e0f76","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[358,359,360],"tindex":"44d403e5-2ecc-11e6-a911-47738ad77e65","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"44d403e6-2ecc-11e6-a911-c56936ae9744","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Float) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"44d42af7-2ecc-11e6-a911-b3eb8713b737","method":{"position":"org.apache.commons.collections4.MapUtils:695","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return 0.0;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"44d42af8-2ecc-11e6-a911-0b068c46a649","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof org.apache.commons.collections4.ResettableIterator"},"failures":[377,378],"tindex":"44d45209-2ecc-11e6-a911-8f2b80d3b4e2","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.ResettableIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[379],"tindex":"44d4520a-2ecc-11e6-a911-a1cdc58ede1d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"44d4520b-2ecc-11e6-a911-49912b30e082","method":{"position":"org.apache.commons.collections4.MapUtils:213","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Byte getByte(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Byte) {\n                return ((java.lang.Byte)(answer));\n            } \n            return java.lang.Byte.valueOf(answer.byteValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"44d4791c-2ecc-11e6-a911-454376196fab","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if ((mapToCopy.size()) != 1) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],"tindex":"44d4791d-2ecc-11e6-a911-69743aeb93a5","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj == null) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[],"tindex":"44d4a02e-2ecc-11e6-a911-4988f885ce12","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:389","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex > fromIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E> = new org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>(subList , fromIndex);\n            registerCursor(cursor);\n            return cursor;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex","index":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[412,413,414,415,416],"tindex":"44d4a02f-2ecc-11e6-a911-8385c8f77518","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (decorated().containsKey(key)) {\n                result = decorated().remove(key);\n                java.util.List<K>.remove(key);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"tindex":"44d4a030-2ecc-11e6-a911-334e5b23286f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[380,381,382,383,384,385,391,392,394,473,397,398,401,402,404,405,406,407,408,409,410,411],"tindex":"44d4c741-2ecc-11e6-a911-1dbc1a4b72ed","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[474,475],"tindex":"44d4c742-2ecc-11e6-a911-3f989cb5f08b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object.getClass().isArray()) {\n        {\n            if (object != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.List<E>.indexOf(object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"44d4c743-2ecc-11e6-a911-a71c9a6c17e7","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[476],"tindex":"44d4ee54-2ecc-11e6-a911-f16f5cfd62d8","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (array instanceof java.util.Map<?, ?>) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[396],"tindex":"44d4ee55-2ecc-11e6-a911-6953153da489","method":{"position":"org.apache.commons.collections4.CollectionUtils:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n                return false;\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(obj));\n            return org.apache.commons.collections4.Equator<O>.equate(O, otherObj.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"44d4ee56-2ecc-11e6-a911-7130b0fac1df","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl","sourcecode":"((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[477,478],"tindex":"44d51567-2ecc-11e6-a911-4593a65bfd85","method":{"position":"org.apache.commons.collections4.list.TreeList:810","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E> otherTree, final int currentSize) {\n    if (((currentSize % currentSize) != 0) || ((currentSize % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = max();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree.min();\n            if ((otherTree.int) > (int)) {\n                final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = removeMax();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree;\n                int int = (s.int) + currentSize;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(leftSubTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                maxNode.setLeft(leftSubTree, null);\n                maxNode.setRight(s, otherTreeMin);\n                if (leftSubTree != null) {\n                    leftSubTree.max().setRight(null, maxNode);\n                    leftSubTree.int -= currentSize - 1;\n                } \n                if (s != null) {\n                    s.min().setLeft(null, maxNode);\n                    s.int = (sAbsolutePosition - currentSize) + 1;\n                } \n                maxNode.int = (currentSize - 1) - sParentAbsolutePosition;\n                otherTree.int += currentSize;\n                s = maxNode;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setLeft(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            } else {\n                otherTree = otherTree.removeMin();\n                final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>();\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode.this;\n                int int = s.int;\n                int int = 0;\n                while ((s != null) && ((s.int) > (getHeight(otherTree)))) {\n                    sParentAbsolutePosition = sAbsolutePosition;\n                    sAncestors.push(s);\n                    s = s.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n                    if (s != null) {\n                        sAbsolutePosition += s.int;\n                    } \n                }\n                otherTreeMin.setRight(otherTree, null);\n                otherTreeMin.setLeft(s, maxNode);\n                if (otherTree != null) {\n                    otherTree.min().setLeft(null, otherTreeMin);\n                    (otherTree.int)++;\n                } \n                if (s != null) {\n                    s.max().setRight(null, otherTreeMin);\n                    s.int = sAbsolutePosition - currentSize;\n                } \n                otherTreeMin.int = currentSize - sParentAbsolutePosition;\n                s = otherTreeMin;\n                while (!(sAncestors.isEmpty())) {\n                    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = sAncestors.pop();\n                    sAncestor.setRight(s, null);\n                    s = sAncestor.balance();\n                }\n                return s;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"currentSize","lengthInBits":"currentSize","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"currentSize"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"44d56388-2ecc-11e6-a911-2bfeef7a31ea","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[],"tindex":"44d56389-2ecc-11e6-a911-457472f97b8f","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object.getClass().isArray()) {\n        {\n            if (object != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.List<E>.indexOf(object);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[479],"tindex":"44d5638a-2ecc-11e6-a911-31fe65af4621","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[480,481,482,483,484,485,486,487,488,489,490,491,492,493,413,494,495,496,497,498,499,500,501,415],"tindex":"44d5638b-2ecc-11e6-a911-077faf9fbc00","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}