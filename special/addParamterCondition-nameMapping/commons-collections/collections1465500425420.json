{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":73,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":214,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":203,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":642,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":281,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":386,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":580,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":721,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":186,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":668,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":555,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":161,"org.apache.commons.collections4.CollectionUtilsTest.collect":857,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":512,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":444,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":514,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":513,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":455,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":858,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":775,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":346,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":598,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":379,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":859,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":607,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":521,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":634,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":855,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":79,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":794,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":588,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":677,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":585,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":223,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":291,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":579,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":258,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":814,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":211,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":825,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":306,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":783,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":699,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":246,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":266,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":304,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":563,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":408,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":168,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":471,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":728,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":313,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":242,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":556,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":41,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":725,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":602,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":720,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":205,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":816,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":436,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":831,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":524,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":605,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":218,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":738,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":29,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":628,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":417,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":527,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":129,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":75,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":182,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":370,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":683,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":851,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":793,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":58,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":10,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":67,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":781,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":53,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":643,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":272,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":271,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":268,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":709,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":624,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":575,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":339,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":795,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":698,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":673,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":729,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":311,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":365,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":577,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":662,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":163,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":465,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":50,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":460,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":11,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":298,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":823,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":491,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":804,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":562,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":26,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":468,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":584,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":799,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":706,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":66,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":227,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":771,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":737,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":466,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":328,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":537,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":824,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":420,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":844,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":661,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":111,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":416,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":601,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":18,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":590,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":117,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":318,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":206,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":282,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":20,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":116,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":167,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":652,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":639,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":71,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":553,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":827,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":14,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":481,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":72,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":344,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":665,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":150,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":122,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":745,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":350,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":275,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":349,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":115,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.map.LRUMapTest.testReset":818,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":91,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":307,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":528,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":691,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":669,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":377,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":544,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":256,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":656,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":819,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":177,"org.apache.commons.collections4.map.LinkedMapTest.testReset":792,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":302,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":264,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":664,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":826,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":270,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":112,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":383,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":414,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":486,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":684,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":449,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":837,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":24,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":752,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":780,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":648,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":635,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":107,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":812,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":678,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":723,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":500,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":164,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":174,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":650,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":134,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":719,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":749,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":245,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":421,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":540,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":606,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":228,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":603,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":708,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":517,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":480,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":263,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":817,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":702,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":364,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":342,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":518,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":46,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":180,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":369,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":705,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":655,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":810,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":809,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":811,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":550,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":255,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":329,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":800,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":786,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":681,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":597,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":216,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":262,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":815,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":769,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":604,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":441,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":323,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":733,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":324,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":619,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":820,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":118,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":337,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":623,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":860,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":113,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":611,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":173,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":385,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":803,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":267,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":612,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":109,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":183,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":767,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":288,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":766,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":415,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":774,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":522,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":442,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":462,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":821,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":237,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":765,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":533,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":532,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":626,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":142,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":443,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":229,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":467,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":633,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":153,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":863,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":97,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":317,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":747,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":257,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":504,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":217,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":701,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":88,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":438,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":470,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":418,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":149,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":724,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":279,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":433,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":772,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":848,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":832,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":846,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":371,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":784,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":549,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":539,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":830,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":600,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":778,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":297,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":384,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":473,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":840,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":841,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":854,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":485,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":836,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":558,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":742,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":301,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":779,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":315,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":410,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":25,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":463,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":670,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":446,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":425,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":145,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":490,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":567,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":333,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":404,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":127,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":561,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":801,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":674,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":171,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":694,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":788,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":686,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":759,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":667,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":374,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":448,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":138,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":215,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":731,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":169,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":509,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":510,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":646,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":850,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":680,"org.apache.commons.collections4.CollectionUtilsTest.transform2":856,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":595,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":84,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":310,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":357,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":8,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":570,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":789,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":571,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":569,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":158,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":839,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":722,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":195,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":754,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":90,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":380,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":199,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":423,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":764,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":154,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":207,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":479,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":693,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":395,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":757,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":412,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":862,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":547,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":86,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":413,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":717,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":505,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":770,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":299,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":625,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":802,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":716,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":300,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":763,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":422,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":753,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":777,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":65,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":382,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":143,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":321,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":756,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":501,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":431,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":807,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":822,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":126,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":582,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":526,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":787,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":99,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":726,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":152,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":254,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":727,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":630,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":559,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":372,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":564,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":30,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":197,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":552,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":472,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":120,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":42,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":69,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":194,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":734,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":805,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":651,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":715,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":574,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":797,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":572,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":405,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":354,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":204,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":284,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":808,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":9,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":345,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":864,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":685,"org.apache.commons.collections4.ListUtilsTest.testSubtract":131,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":776,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":236,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":128,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":488,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":261,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":391,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":296,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":225,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":389,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":390,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":516,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":411,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":141,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":638,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":403,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":353,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":581,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":220,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":452,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":790,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":60,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":671,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":592,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":578,"org.apache.commons.collections4.CollectionUtilsTest.filter":181,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":644,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":813,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":394,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":33,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":632,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":687,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":741,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":74,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":679,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":688,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":714,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":847,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":239,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":653,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":139,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":492,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":843,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":144,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":230,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":454,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":155,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":165,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":543,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":157,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":189,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":507,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":696,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":260,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":806,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":849,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":259,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":695,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":608,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":428,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":45,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":755,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":426,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":235,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":320,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":133,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":434,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":740,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":285,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":286,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":707,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":712,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":432,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":484,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":842,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":689,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":583,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":32,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":278,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":114,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":828,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":327,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":437,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":690,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":838,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":586,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":703,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":172,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":494,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":495,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":496,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":637,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":406,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":782,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":341,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":475,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":762,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":208,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":622,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":760,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":589,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":64,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":47,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":627,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":675,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":121,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":234,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":660,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":162,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":238,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":525,"org.apache.commons.collections4.set.CompositeSetTest.testContains":430,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":636,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":845,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":744,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":629,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":798,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":76,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":188,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":96,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":366,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":57,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":718,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":137,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":399,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":407,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":63,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":212,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":56,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":599,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":616,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":610,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":852,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":226,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":125,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":44,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":853,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":591,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":396,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":474,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":398,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":397,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":739,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":213,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":487,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":493,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":147,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":697,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":618,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":658,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":542,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":535,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":240,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":829,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":861,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":530,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":531,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":566,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":178,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":659,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":554,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":641,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":593,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":587,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":711,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":170,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":477,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":461,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":700,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":645,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":151,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":283,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":453,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":80,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":750,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":392,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":735,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":768,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":362,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":835,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":649,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":82,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":176,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":506,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":833,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":647,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":834,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":419,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":730,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":748,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":751,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":791,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":736,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":773,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":631,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":761,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":743,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":52},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[0,1,2,3,4,5],"tindex":"264bbdd7-2e78-11e6-be93-ab86a662abfb","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if ((end1 - end2) > (start1 - start2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"end2","end2":"start1","end1":"end1","start2":"start2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[6],"tindex":"264db9a8-2e78-11e6-be93-cdf25f63cd11","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[7,8],"tindex":"264de0b9-2e78-11e6-be93-2be04a3df479","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[9],"tindex":"264e07ca-2e78-11e6-be93-65b4f6d98ef9","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"264ef22b-2e78-11e6-be93-75c743c594d7","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[10,11,12],"tindex":"264f193c-2e78-11e6-be93-ef82cb36452d","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[13],"tindex":"264f404d-2e78-11e6-be93-ffd8ba6b5bd4","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[14,15,16,17,18,19,20,21],"tindex":"264f404e-2e78-11e6-be93-55bc7ba06ef2","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"264f675f-2e78-11e6-be93-ff3763600cef","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"264f6760-2e78-11e6-be93-3f4ab8b65a70","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"264f8e71-2e78-11e6-be93-77b2b43b4201","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            return (node != null) && (node.getKey().equals(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[54],"tindex":"264f8e72-2e78-11e6-be93-773561a19ed8","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"264fb583-2e78-11e6-be93-e14ab3d1646a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[55,56,57,58,59,60],"tindex":"264fb584-2e78-11e6-be93-6f7023a2c1bc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[61,62,63,64,65,66,67,68],"tindex":"264fdc95-2e78-11e6-be93-d175e3d36ebc","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.remove(key);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<java.lang.Object, K>.remove(value);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[69],"tindex":"264fdc96-2e78-11e6-be93-b9879a8cf9f7","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:136","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"264fdc97-2e78-11e6-be93-5bbec2238822","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"265003a8-2e78-11e6-be93-33ee18285184","method":{"position":"org.apache.commons.collections4.set.CompositeSet:227","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                if (set.contains(obj)) {\n                    return set.remove(obj);\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[70],"tindex":"265003a9-2e78-11e6-be93-47dd61b9cd46","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[71,72,73,74,75,76,77,78,79],"tindex":"265003aa-2e78-11e6-be93-21a7153d7b5d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"26502abb-2e78-11e6-be93-ef0c5e248b5a","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[80,81],"tindex":"26502abc-2e78-11e6-be93-2ded6f09b83a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"26502abd-2e78-11e6-be93-d1857ad142d9","method":{"position":"org.apache.commons.collections4.map.LinkedMap:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"265051ce-2e78-11e6-be93-193a3183512a","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"265051cf-2e78-11e6-be93-7f4ca9eafcc0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:316","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            if (nCopies <= 0) {\n                return false;\n            } \n            (int)++;\n            if (nCopies < (mut.int)) {\n                mut.int -= nCopies;\n                int -= nCopies;\n            } else {\n                java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n                int -= mut.int;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[138],"tindex":"265078e0-2e78-11e6-be93-dd27920da72a","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[139,140],"tindex":"265078e1-2e78-11e6-be93-1b9fee7426d6","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[141],"tindex":"265078e2-2e78-11e6-be93-7ba7e02271a2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[142],"tindex":"26509ff3-2e78-11e6-be93-b7eec6b240f8","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"26509ff4-2e78-11e6-be93-950740e4f337","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[178,179],"tindex":"2650c705-2e78-11e6-be93-9d454e1d1d02","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[180,181,182,183],"tindex":"2650c706-2e78-11e6-be93-3ffe07d3bf39","method":{"position":"org.apache.commons.collections4.CollectionUtils:747","type":"CtMethodImpl","sourcecode":"public static <T>boolean filter(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            boolean boolean = false;\n            if ((collection != null) && (predicate != null)) {\n                for (final java.util.Iterator<T> java.util.Iterator<T> = collection.iterator() ; it.hasNext() ; ) {\n                    if (!(predicate.evaluate(it.next()))) {\n                        it.remove();\n                        result = true;\n                    } \n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"2650ee17-2e78-11e6-be93-0f6892c86b3c","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[184],"tindex":"2650ee18-2e78-11e6-be93-5b9acf7ff67d","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[],"tindex":"2650ee19-2e78-11e6-be93-17b6e714a7d0","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:157","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Closure<T> coerce(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return ((org.apache.commons.collections4.Closure<T>)(closure));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"2650ee1a-2e78-11e6-be93-7fa8de7fb4f7","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,16,17,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,141,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,20,21,351,352,353,354,355,356],"tindex":"2651152b-2e78-11e6-be93-ef5451446ecf","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[357,358,359],"tindex":"26513c3c-2e78-11e6-be93-5b3ae0a4f9c5","method":{"position":"org.apache.commons.collections4.PredicateUtils:236","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> invokerPredicate(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object, java.lang.Boolean>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:266","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385],"tindex":"26513c3d-2e78-11e6-be93-e5774e31166d","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385],"tindex":"2651634e-2e78-11e6-be93-7b294c9bb0ee","method":{"position":"org.apache.commons.collections4.set.CompositeSet:343","type":"CtMethodImpl","sourcecode":"public synchronized void addComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n                final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n                if ((intersects.size()) > 0) {\n                    if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n                    } \n                    getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n                    if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n                        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n                    } \n                } \n            }\n            java.util.List<java.util.Set<E>>.add(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"tindex":"2651634f-2e78-11e6-be93-79206d273514","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[462,463,357,359,464,465,466,467,468,469,470,471],"tindex":"26518a60-2e78-11e6-be93-c1cda8191c65","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[472,473],"tindex":"26518a61-2e78-11e6-be93-ddf967027ba1","method":{"position":"org.apache.commons.collections4.MapUtils:1204","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (map == null) || (map.isEmpty());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2651b172-2e78-11e6-be93-57ad3bb0165a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[413,373],"tindex":"2651b173-2e78-11e6-be93-9d9b517dc431","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"2651b174-2e78-11e6-be93-ef8a708bc4aa","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[474,475,476,477,478,479,480,481,482,483],"tindex":"2651d885-2e78-11e6-be93-2bfe44b5ceb4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[131,132],"tindex":"2651d886-2e78-11e6-be93-b90835111530","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list2.size())) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2651ff97-2e78-11e6-be93-37c00225f69d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[484,485],"tindex":"2651ff98-2e78-11e6-be93-8f3aa89fd53e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2651ff99-2e78-11e6-be93-27aea37d0f7e","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"265226aa-2e78-11e6-be93-85dbaf47361b","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[10,12],"tindex":"265226ab-2e78-11e6-be93-1b23f7649750","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[484,486],"tindex":"265226ac-2e78-11e6-be93-69469cda835f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:554","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"26524dbd-2e78-11e6-be93-e594ae29f4b9","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[487,488,489,490,491,492,493,494,495,496,497,498,56,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,60,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537],"tindex":"26524dbe-2e78-11e6-be93-352c043f12e6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"265274cf-2e78-11e6-be93-5dd2b683c99c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[538,539,540,541,542,543,544,545,546,71,547,72,73,548,549,550,551,552,553,554,555,556,74,557,558,559,560,561,75,562,563,564,565,566,567,568,569,570,571,572,573,574,76,575,576,77,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,78,603,604,605,606,607,608,609,610,611,612,613,614,79,615,616,617,618,619,620,621,622,623,624,625],"tindex":"265274d0-2e78-11e6-be93-ff44293363dd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[484,485],"tindex":"26529be1-2e78-11e6-be93-330e6fd2ba0e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"26529be2-2e78-11e6-be93-35e1c917da3d","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"26529be3-2e78-11e6-be93-3116992bb256","method":{"position":"org.apache.commons.collections4.MapUtils:234","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Short) {\n                return ((java.lang.Short)(answer));\n            } \n            return java.lang.Short.valueOf(answer.shortValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"2652c2f4-2e78-11e6-be93-dbed06e1a6a1","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:75","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedSortedBag<E> org.apache.commons.collections4.bag.TransformedSortedBag<E> = new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[406,408,410,411,412,414,416,418,419,420,421,424,425,427,432,363,376,379,384],"tindex":"2652c2f5-2e78-11e6-be93-f989042a8a54","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[626],"tindex":"2652c2f6-2e78-11e6-be93-3ba3976c923c","method":{"position":"org.apache.commons.collections4.MapUtils:1680","type":"CtMethodImpl","sourcecode":"public static <K, V>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends V> elements, final org.apache.commons.collections4.Transformer<V, K> keyTransformer) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.populateMap(map, elements, keyTransformer, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"2652ea07-2e78-11e6-be93-47656087f101","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"2652ea08-2e78-11e6-be93-4d07a2715fd9","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"2652ea09-2e78-11e6-be93-95e226b3764b","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2653111a-2e78-11e6-be93-976ad199ad63","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(iterator.hasPrevious()) == false"},"failures":[],"tindex":"2653111b-2e78-11e6-be93-1f5eaf02a4f4","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if ((iterator.hasPrevious()) == false) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655],"tindex":"2653111c-2e78-11e6-be93-3d3433324887","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[40,41,42,43,44,45,46,656,657,658,659,660,661],"tindex":"2653382d-2e78-11e6-be93-9d5e3e1e266a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[563],"tindex":"2653382e-2e78-11e6-be93-2b0948445904","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1229","type":"CtMethodImpl","sourcecode":"private static void checkValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"2653382f-2e78-11e6-be93-d7a9b5ad5d09","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[662,663,664,665,666,667,668,669,670,671,672,673],"tindex":"26533830-2e78-11e6-be93-6dd8014c496c","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i < 0) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"26535f41-2e78-11e6-be93-43aa017679fc","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[674,264,265,675,292,293,676,677,678,306,307,679,320,321,680],"tindex":"26535f42-2e78-11e6-be93-83ec16c9dcb0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[133,134,135,136,137],"tindex":"26538653-2e78-11e6-be93-1f6c331a6fb6","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if ((a == null) || (a == null)) {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"26538654-2e78-11e6-be93-71ed9827e786","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[681,682],"tindex":"26538655-2e78-11e6-be93-53261ba0e74f","method":{"position":"org.apache.commons.collections4.map.LazyMap:96","type":"CtMethodImpl","sourcecode":"public static <V, K>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"2653ad66-2e78-11e6-be93-8183dfedc098","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"2653ad67-2e78-11e6-be93-e969d683ebaa","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[683,684,685,686,242,687,688,689,243,254,690,691,692,14,693,694,15,695,258,259,260,696,261,262,263,264,265,266,697,698,699,700,701,702,703,704,705,706,284,285,286,707,289,290,291,292,293,294,676,677,708,709,710,711,712,713,714,715,298,299,300,716,303,304,305,306,307,308,717,718,719,720,721,722,723,724,312,313,314,725,317,318,319,320,321,322,486,726,727,728,729,730,731,732,733,330,331,332,734,335,336,337,338,339,340,735,736,737,738,739,740,741,18,742,743,19,744,348,349,350,745,351,352,353,354,355,356,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763],"tindex":"2653d478-2e78-11e6-be93-6949c639c880","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[228],"tindex":"2653d479-2e78-11e6-be93-711cb1f60013","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[764],"tindex":"2653fb8a-2e78-11e6-be93-878af41ed84f","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:126","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> defaultedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformer) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[765],"tindex":"2653fb8b-2e78-11e6-be93-591fb52be83e","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[85,91,108,128,766,164,767,768,769,770,233,771,772,773,652,774,775,776,777,449],"tindex":"2654229c-2e78-11e6-be93-35fe6e75b834","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[539,541,77,580,582,583,584,588,590],"tindex":"2654229d-2e78-11e6-be93-e3b0f13f7546","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[778,779,780,781,782,783,784,178,785,786,787,788,789,790,179,791],"tindex":"2654229e-2e78-11e6-be93-351bcc9c9e8e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"265449af-2e78-11e6-be93-5706be4d9312","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[792,793,794,795,254,796,797,798,799,255,256,257,800,690,691,801,692,14,693,674,802,694,803,15,804,805,695,258,806,807,808,809,810,811,259,260,696,16,812,813,261,814,815,262,263,264,265,266,17,816,817,818,819,820,821,822,345,346,347,823,739,740,824,741,18,742,825,826,743,827,19,828,829,744,348,830,831,832,833,834,835,349,350,745,20,836,837,351,838,839,352,353,354,355,356,21,840,755,841,756,842,843,844,845,757,758,846,847,759,848,760,849,761,762,763],"tindex":"265449b0-2e78-11e6-be93-cd990115ee50","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"265470c1-2e78-11e6-be93-9d1067721ff1","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[850,851,852,853,854,855],"tindex":"265470c2-2e78-11e6-be93-4f5f5c8a9f7d","method":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:69","type":"CtMethodImpl","sourcecode":"private static <E>java.util.Iterator<E> createTypesafeIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            return new java.util.Iterator<E>() {\n                public boolean hasNext() {\n                    return iterator.hasNext();\n                }\n\n                public E next() {\n                    return iterator.next();\n                }\n\n                public void remove() {\n                    iterator.remove();\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[138],"tindex":"265497d3-2e78-11e6-be93-67945eec9cbe","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2654bee4-2e78-11e6-be93-afe273feca6e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[856,142,857],"tindex":"2654bee5-2e78-11e6-be93-97481cf6b3ec","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[858],"tindex":"2654bee6-2e78-11e6-be93-5fa74e6e14b4","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"2654e5f7-2e78-11e6-be93-77bf805fb8ce","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[859,860],"tindex":"2654e5f8-2e78-11e6-be93-c125aa32e553","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[861,247,686,688,246,274,862,863,273],"tindex":"2654e5f9-2e78-11e6-be93-a11ffe4a416c","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:227","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            purgeBeforeRead();\n            if (value == null) {\n                return false;\n            } \n            return super.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[70,864],"tindex":"2654e5fa-2e78-11e6-be93-8d64d3ebd271","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}