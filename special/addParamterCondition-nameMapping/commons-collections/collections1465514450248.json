{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":152,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":140,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":316,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":12,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":95,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":84,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":27,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":93,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":130,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":171,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":305,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":323,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":258,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":324,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":97,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":322,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":251,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":117,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":153,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":247,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":272,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":362,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":339,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":359,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":244,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":274,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":46,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":30,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":116,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":5,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":29,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":287,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":200,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":346,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":40,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":50,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":196,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":345,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":88,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":176,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":174,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":25,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":136,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":259,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":220,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":328,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":74,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":134,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":208,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":56,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":302,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":10,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":202,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":314,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":26,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":195,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":19,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":206,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":168,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":31,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":309,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":343,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":286,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":366,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":348,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":54,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":229,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":91,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":210,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":243,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":133,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":351,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":191,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":131,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":369,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":249,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":1,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":65,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":96,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":283,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":340,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":368,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":270,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":101,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":120,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":253,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":299,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":2,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":18,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":271,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":367,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":213,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":77,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":240,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":230,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":301,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":119,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":137,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":6,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":57,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":11,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":317,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":352,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":358,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":235,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":222,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":4,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":106,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":215,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":300,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":138,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":186,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":76,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":237,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":197,"org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":275,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":329,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":139,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":144,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":268,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":28,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":225,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":103,"org.apache.commons.collections4.list.TreeListTest.testBug35258":129,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":83,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":151,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":344,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":232,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":282,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":231,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":182,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":288,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":45,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":330,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":242,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":127,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":347,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":179,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":265,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":354,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":227,"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":303,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":157,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":245,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":118,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":297,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":320,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":239,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":86,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":321,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":212,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":326,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":327,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":203,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":177,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":85,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":143,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":178,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":188,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":3,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":273,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":295,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":69,"org.apache.commons.collections4.list.TreeListTest.testRemove":128,"org.apache.commons.collections4.SetUtilsTest.testEquals":147,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":279,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":201,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":75,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":193,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":156,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":9,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":250,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":353,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":325,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":342,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":371,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":7,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":337,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":89,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":132,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":260,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":356,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":58,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":32,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":311,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":319,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":365,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":318,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":160,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":155,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":361,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":312,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":315,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":334,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":357,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":14,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":209,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":162,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":276,"org.apache.commons.collections4.map.LRUMapTest.testClone":68,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":214,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":349,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":218,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":266,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":306,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":173,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":92,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":87,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":102,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":164,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":82,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":150,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":141,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":233,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":241,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":294,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":165,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":205,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":263,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":185,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":94,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":278,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":248,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":255,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":148,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":114,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":219,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":364,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":221,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":100,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":264,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":336,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":33,"org.apache.commons.collections4.map.LRUMapTest.testLRU":79,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":267,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":350,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":167,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":224,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":34,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":236,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":142,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":192,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":234,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":252,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":36,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":308,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":99,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":261,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":159,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":146,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":216,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":313,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":107,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":228,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":158,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":291,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":70,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":80,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":198,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":304,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":332,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":298,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":370,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":35,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":110,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":113,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":112,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":111,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":217,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":293,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":307,"org.apache.commons.collections4.map.LRUMapTest.testReset":81,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":256,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":238,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":61,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":67,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":108,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":109,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":105,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":335,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":163,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":246,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":71,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":289,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":104,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":226,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":211,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":66,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":296,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":8,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":126,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":98},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[0],"tindex":"cdb9c852-2e98-11e6-95ec-e7bae0852e60","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"cdba8ba3-2e98-11e6-95ec-6f1cb76cf31a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"cdbab2b4-2e98-11e6-95ec-f1434869e533","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (collection.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cdbab2b5-2e98-11e6-95ec-3b2054259d52","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[1,2,3,4],"tindex":"cdbad9c6-2e98-11e6-95ec-f55b809b7547","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"cdbb00d7-2e98-11e6-95ec-1d94987e46be","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"cdbb27e8-2e98-11e6-95ec-f31430284217","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if ((c.size()) > (c.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"c","list2":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"cdbb4ef9-2e98-11e6-95ec-01e8205bc178","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[18],"tindex":"cdbb4efa-2e98-11e6-95ec-99fec41910d7","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"cdbb760b-2e98-11e6-95ec-8790253b825e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"cdbb760c-2e98-11e6-95ec-67841cc809f9","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"cdbb9d1d-2e98-11e6-95ec-671dca1b7a02","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"cdbbc42e-2e98-11e6-95ec-75bd59774e4e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[19,20,21,22,23,24,25,26],"tindex":"cdbbc42f-2e98-11e6-95ec-f5420c5405e9","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:102","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"cdbbeb40-2e98-11e6-95ec-9746ee5bc86d","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[62,63,64,65,66],"tindex":"cdbbeb41-2e98-11e6-95ec-c1a0014d7032","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list2.size()) > (list1.size())) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list2","list2":"list1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[],"tindex":"cdbc1252-2e98-11e6-95ec-ff5752e43470","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.lang.Short) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsValue(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"cdbc1253-2e98-11e6-95ec-bfc0b26fe3a8","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode == 0) {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtBinaryOperatorImpl","sourcecode":"retval != 0"},"failures":[126,127,128,129,130,131,132,133,134,135,136],"tindex":"cdbc8784-2e98-11e6-95ec-d3529d08ea95","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtBinaryOperatorImpl","sourcecode":"null != (comparatorChain)"},"failures":[],"tindex":"cdbc8785-2e98-11e6-95ec-e7e5175f4a7b","method":{"position":"org.apache.commons.collections4.ComparatorUtils:103","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E extends java.lang.Comparable<? super E>>java.util.Comparator<E> chainedComparator(final java.util.Collection<java.util.Comparator<E>> comparators) {\n    if (null != comparators) {\n        {\n            return org.apache.commons.collections4.ComparatorUtils.chainedComparator(((java.util.Comparator<E>[])(comparators.toArray(new java.util.Comparator[comparators.size()]))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparatorChain":"comparators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[137,138,139,140,141,142,143,144,145,146],"tindex":"cdbcae96-2e98-11e6-95ec-7db4c44d2853","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"cdbcae97-2e98-11e6-95ec-1dc2540c1081","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Double) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[147],"tindex":"cdbcd5a8-2e98-11e6-95ec-41a70e467be8","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"set1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[148],"tindex":"cdbcd5a9-2e98-11e6-95ec-631e3f6bb0e6","method":{"position":"org.apache.commons.collections4.TransformerUtils:208","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtBinaryOperatorImpl","sourcecode":"leastIndex == (-1)"},"failures":[149],"tindex":"cdbcd5aa-2e98-11e6-95ec-5d2aa58113f2","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (start == (-1)) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[150],"tindex":"cdbcfcbb-2e98-11e6-95ec-c525e4efae3a","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"cdbcfcbc-2e98-11e6-95ec-cf153b33c81c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:153","type":"CtMethodImpl","sourcecode":"private int getHash(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return 0;\n            } \n            int int = key.hashCode();\n            hash += ~(hash << 15);\n            hash ^= hash >>> 10;\n            hash += hash << 3;\n            hash ^= hash >>> 6;\n            hash += ~(hash << 11);\n            hash ^= hash >>> 16;\n            hash %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int;\n            return hash < 0 ? hash * (-1) : hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"cdbd4add-2e98-11e6-95ec-8db35b5f2711","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[260],"tindex":"cdbd4ade-2e98-11e6-95ec-59f58e072dd6","method":{"position":"org.apache.commons.collections4.functors.TransformerClosure:48","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> transformerClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.TransformerClosure<E>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[261],"tindex":"cdbd4adf-2e98-11e6-95ec-0b932a68616d","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[262],"tindex":"cdbd70f0-2e98-11e6-95ec-17bb73a96577","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[263,264],"tindex":"cdbd70f1-2e98-11e6-95ec-e1293de6f6fa","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[265,266,267,268,269,270],"tindex":"cdbd9802-2e98-11e6-95ec-f940272c2e87","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[271,272],"tindex":"cdbd9803-2e98-11e6-95ec-03418ac2a1bf","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[273,274],"tindex":"cdbd9804-2e98-11e6-95ec-b7836b029d18","method":{"position":"org.apache.commons.collections4.list.GrowthList:121","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E element) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n            } \n            decorated().add(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[275,276,277,278,279,280,281,282,283,284],"tindex":"cdbea975-2e98-11e6-95ec-a78262b0df8a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (from == null) {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[],"tindex":"cdbea976-2e98-11e6-95ec-6389b9b09acf","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[],"tindex":"cdbed087-2e98-11e6-95ec-43c47b9cc740","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:199","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (toIndexExclusive == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndexInclusive , toIndexExclusive);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"toIndexExclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"cdbed088-2e98-11e6-95ec-71f04d9a0cd8","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"cdbed089-2e98-11e6-95ec-ebd67626571a","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:679","type":"CtBinaryOperatorImpl","sourcecode":"floatObject == null"},"failures":[285,82],"tindex":"cdbef79a-2e98-11e6-95ec-89d69f1e9e17","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"floatObject":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[286],"tindex":"cdbef79b-2e98-11e6-95ec-c10f2ebb9136","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl","sourcecode":"cursor == null"},"failures":[],"tindex":"cdbf1eac-2e98-11e6-95ec-adf0f71b2742","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:271","type":"CtMethodImpl","sourcecode":"protected void registerCursor(final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> cursor) {\n    if (cursor == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; it.hasNext() ; ) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                if ((ref.get()) == null) {\n                    it.remove();\n                } \n            }\n            java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(cursor));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"cursor"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,57,308,309,310,311,312,313,314,315],"tindex":"cdbf45bd-2e98-11e6-95ec-7189ce9a72bd","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (object == (org.apache.commons.collections4.collection.AbstractCollectionDecorator.this)) || (decorated().equals(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[151,160,185,186],"tindex":"cdbf45be-2e98-11e6-95ec-f370efcb15ef","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[316,317],"tindex":"cdbf6ccf-2e98-11e6-95ec-555bcd74e95b","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"cdbf93e0-2e98-11e6-95ec-1514afb5eef0","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"cdbfbaf1-2e98-11e6-95ec-0ba87bfc0333","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:152","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(sub);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[318,319,320,321,322,323,324,325,326,327,328,329,330,331],"tindex":"cdbfbaf2-2e98-11e6-95ec-6322b2efd3ab","method":{"position":"org.apache.commons.collections4.map.Flat3Map:126","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return V;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return V;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"cdbfe203-2e98-11e6-95ec-b7b2964e73f0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:733","type":"CtMethodImpl","sourcecode":"protected void setNextNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> next) {\n    if (next == next) {\n        {\n            org.apache.commons.collections4.list.AbstractLinkedList.Node.this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = next;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"next","header":"next"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371],"tindex":"cdc00914-2e98-11e6-95ec-99b6f407dcb3","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"cdc03025-2e98-11e6-95ec-079f706538ff","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"cdc03026-2e98-11e6-95ec-8b7bfc877007","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(index)) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"cdc05737-2e98-11e6-95ec-cf60b8f9af81","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":54,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}