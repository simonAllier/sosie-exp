{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":251,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":453,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":0,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":252,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":195,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":447,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":391,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":110,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalEmptyCollectionExists":69,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":177,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":323,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":322,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":356,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":357,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":358,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":119,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":194,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":204,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":335,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":455,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":140,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":380,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":42,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":506,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEmptyMapCompatibility":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":310,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":345,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":81,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":23,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods":414,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":421,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":337,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":19,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":454,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":71,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":470,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":202,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":370,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":126,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":419,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":146,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":481,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":97,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":314,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":484,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":445,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":78,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":485,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":493,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":213,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":193,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":174,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":344,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":2,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":184,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":450,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":277,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":79,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":424,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":408,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":387,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":247,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":265,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":398,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":117,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":84,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":5,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSimpleSerialization":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":77,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":261,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":464,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":1,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":406,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":3,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":309,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":434,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":274,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":384,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":444,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":225,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":223,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":394,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":472,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":430,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":143,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":367,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":216,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":379,"org.apache.commons.collections4.list.TreeListTest.testRemove":372,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":148,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":388,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":395,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":346,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":385,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":43,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":118,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":397,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":304,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToString":432,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":185,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":328,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":482,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":235,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":363,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":57,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":222,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":241,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":495,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testCanonicalFullCollectionExists":70,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":192,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":466,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":296,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":158,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":96,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":116,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":340,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":203,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":476,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":21,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":319,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":329,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":276,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":389,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":163,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":242,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":446,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":494,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":85,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":325,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":262,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":509,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":291,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":423,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":350,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":25,"org.apache.commons.collections4.map.SingletonMapTest.testClone":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":228,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":403,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":436,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalEmptyCollectionExists":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":308,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":186,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":371,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":190,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":448,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":207,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":497,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":483,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":306,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":479,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":383,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":373,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":259,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":145,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":198,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":334,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsSelfHashCode":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":292,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":268,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":258,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":44,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":349,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":156,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":498,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":164,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":229,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":14,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":167,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":339,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":279,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":166,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":281,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":176,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":324,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":332,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":496,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":175,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":253,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":507,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":18,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":426,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":237,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":179,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":154,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":188,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":435,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":315,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":149,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":270,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":364,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":15,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":244,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":375,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":462,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":311,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":59,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":30,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":282,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":393,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":338,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":422,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":477,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":342,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":150,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":501,"org.apache.commons.collections4.list.TreeListTest.testBug35258":368,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":287,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":98,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":226,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":400,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":171,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":361,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":366,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":102,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":489,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":170,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":169,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":168,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":122,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":100,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":214,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":431,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":320,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":317,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":392,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":305,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":429,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":60,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCanonicalFullCollectionExists":440,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":187,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":155,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":24,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":386,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":47,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":452,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":420,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":468,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":254,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":4,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":221,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":236,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":206,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":341,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":348,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":418,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":352,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":239,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":333,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":218,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":275,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":151,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":269,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testSimpleSerialization":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":301,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":16,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":417,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":26,"org.apache.commons.collections4.map.LRUMapTest.testLRU":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":234,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":502,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":284,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":75,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":318,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":36,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":504,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":442,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":99,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":443,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":73,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":162,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":376,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":200,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":490,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":139,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":142,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":209},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[],"tindex":"b30c7464-2e83-11e6-adb5-1789c089a530","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 instanceof java.lang.Number) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"b30d5ec5-2e83-11e6-adb5-91e3f4231a4b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"b30d85d6-2e83-11e6-adb5-6b538d947515","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[15,16,17],"tindex":"b30d85d7-2e83-11e6-adb5-e5ad8e8e300d","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:75","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"b30dace8-2e83-11e6-adb5-87fd8ab2b0b7","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedBidiMap<K, V> org.apache.commons.collections4.OrderedBidiMap<K, V> = ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[71],"tindex":"b30dd3f9-2e83-11e6-adb5-f99d6fa7cc77","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"b30dd3fa-2e83-11e6-adb5-4fb7d156b8f3","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj == null) || (obj == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(key)) {\n                final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(key);\n                if (value == null ? (entry.getValue()) == null : value.equals(entry.getValue())) {\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key);\n                    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(value);\n                    return true;\n                } \n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"obj","b":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[72],"tindex":"b30dfb0b-2e83-11e6-adb5-dd18e07fa78d","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if ((coll.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"b30e221c-2e83-11e6-adb5-bf4b702c71cf","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[85,60,86,87,88,89],"tindex":"b30e221d-2e83-11e6-adb5-c1477ac07f7f","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"b30e221e-2e83-11e6-adb5-11dfb44daa75","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return true;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"b30e492f-2e83-11e6-adb5-43c4e4e58055","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1.isAssignableFrom(key4.getReturnType())) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"key1","method":"key4"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[109,110,111,112,113],"tindex":"b30e7040-2e83-11e6-adb5-7d11bce5c28f","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[],"tindex":"b30e9751-2e83-11e6-adb5-87a53342a4c3","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count < count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"count","end":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[114,115],"tindex":"b30e9752-2e83-11e6-adb5-2f47ed5b5d08","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[116,117],"tindex":"b30e9753-2e83-11e6-adb5-b9c0276f474b","method":{"position":"org.apache.commons.collections4.ClosureUtils:304","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures, final org.apache.commons.collections4.Closure<? super E> defaultClosure) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, defaultClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"b30ebe64-2e83-11e6-adb5-138f2138de23","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"b30ebe65-2e83-11e6-adb5-69eb2c6a2bf3","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"b30ee576-2e83-11e6-adb5-f5e86b511e59","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if ((list == null) || (list == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[166,167],"tindex":"b30ee577-2e83-11e6-adb5-2d8b00902e3d","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Map.Entry) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtBinaryOperatorImpl","sourcecode":"(item.isEmpty()) == false"},"failures":[],"tindex":"b30f0c88-2e83-11e6-adb5-e9032da05b0b","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if ((set.isEmpty()) == false) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[],"tindex":"b30f0c89-2e83-11e6-adb5-951a86bdfcb9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1004","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((index < index) || (index > index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            final int int = coll.size();\n            if (cSize == 0) {\n                return false;\n            } \n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + index), coll);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            int += cSize;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtBinaryOperatorImpl","sourcecode":"newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[],"tindex":"b30f0c8a-2e83-11e6-adb5-fd4d736cd946","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[168],"tindex":"b30f339b-2e83-11e6-adb5-4b34895b8c39","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[],"tindex":"b30f339c-2e83-11e6-adb5-c10a9bea4eba","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:625","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected void ensureCapacity(final int newCapacity) {\n    if (newCapacity == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n            if (newCapacity <= oldCapacity) {\n                return ;\n            } \n            if ((int) == 0) {\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n            } else {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[newCapacity];\n                (int)++;\n                for (int int = oldCapacity - 1 ; i >= 0 ; i--) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = oldEntries[i];\n                    if (entry != null) {\n                        oldEntries[i] = null;\n                        do {\n                            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                            final int int = hashIndex(entry.int, newCapacity);\n                            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n                            newEntries[index] = entry;\n                            entry = next;\n                        } while (entry != null );\n                    } \n                }\n                int = calculateThreshold(newCapacity, float);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = newEntries;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"newCapacity"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtBinaryOperatorImpl","sourcecode":"(entry.before) == null"},"failures":[],"tindex":"b30f5aad-2e83-11e6-adb5-19480a9cfb19","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:317","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryBefore(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","before":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[],"tindex":"b30f81be-2e83-11e6-adb5-3fab56b8e2d3","method":{"position":"org.apache.commons.collections4.SplitMapUtils:104","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == 0"},"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"b30f81bf-2e83-11e6-adb5-f17bd6fb6751","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[182,183,184,185,186,187,188,189,190],"tindex":"b30f81c0-2e83-11e6-adb5-6fcc786c8cb0","method":{"position":"org.apache.commons.collections4.map.SingletonMap:395","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value == null ? (getValue()) == null : value.equals(getValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:128","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[],"tindex":"b30f81c1-2e83-11e6-adb5-ad287f0180d4","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b30fa8d2-2e83-11e6-adb5-83f98eb93fa6","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl","sourcecode":"cachedNode == null"},"failures":[191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"tindex":"b30fa8d3-2e83-11e6-adb5-cfb015b0ceb0","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:465","type":"CtMethodImpl","sourcecode":"protected void addNodeBefore(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"tindex":"b30fcfe4-2e83-11e6-adb5-71e3d7becf40","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:86","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> nonUniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"b30fcfe5-2e83-11e6-adb5-ebf52af95fa7","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            if (mutator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (mutator == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[348,349,350,351,352,353,354,355,168,356,357,358,359,360],"tindex":"b30ff6f6-2e83-11e6-adb5-c142db6df7c0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"k"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"b30ff6f7-2e83-11e6-adb5-d18e9fb0e8ce","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[361],"tindex":"b3101e08-2e83-11e6-adb5-d3500d04b98f","method":{"position":"org.apache.commons.collections4.IteratorUtils:260","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array) {\n    if (array instanceof java.lang.Number) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"b3101e09-2e83-11e6-adb5-6f46a9ca955b","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:418","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        {\n            return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, java.lang.Object>.java.util.Map<K, java.lang.Object>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"b3101e0a-2e83-11e6-adb5-7d81b33d44e2","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            if (mutator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (mutator == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[362],"tindex":"b3101e0b-2e83-11e6-adb5-733ea8307a19","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= sz)"},"failures":[],"tindex":"b310451c-2e83-11e6-adb5-2d595ebb53b0","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if ((index < 0) || (index >= index)) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[363],"tindex":"b310451d-2e83-11e6-adb5-7f5a5b51cdc9","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl","sourcecode":"((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[364,365],"tindex":"b310451e-2e83-11e6-adb5-cd19941310e9","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtBinaryOperatorImpl","sourcecode":"(root) != null"},"failures":[366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385],"tindex":"b3106c2f-2e83-11e6-adb5-9bee088108be","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? -1 : node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[386,387],"tindex":"b3106c30-2e83-11e6-adb5-6d4189ccbaef","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[388,389,390],"tindex":"b3106c31-2e83-11e6-adb5-f98fb1a0ea71","method":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            if ((org.apache.commons.collections4.comparators.TransformingComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.TransformingComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(object));\n                return null == (java.util.Comparator<O>) ? null == (comp.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(comp.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(comp.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"b3109342-2e83-11e6-adb5-bb27f2c0c42e","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:147","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object.isAssignableFrom(object.getReturnType())) {\n        {\n            return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(object))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"object","method":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"b3109343-2e83-11e6-adb5-7b42156970ff","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (defaultValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl","sourcecode":"(size % 2) == 0"},"failures":[366,367,372,373,374],"tindex":"b310ba54-2e83-11e6-adb5-2db0af9cee8c","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if ((indexRelativeToMe % 2) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"indexRelativeToMe"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[391],"tindex":"b310ba55-2e83-11e6-adb5-63c354875fb0","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,386,410],"tindex":"b310e166-2e83-11e6-adb5-79502f80eb8c","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtBinaryOperatorImpl","sourcecode":"lineageIndex == (-1)"},"failures":[411,412],"tindex":"b310e167-2e83-11e6-adb5-51e5b901c270","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == (-1)) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lineageIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"b310e168-2e83-11e6-adb5-81f39bfcb7a1","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"b3110879-2e83-11e6-adb5-c5e30c2aed44","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:215","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtBinaryOperatorImpl","sourcecode":"(beforeFirst) || (removed)"},"failures":[413,414],"tindex":"b311087a-2e83-11e6-adb5-f98a21dc5e81","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:96","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(final boolean trueFirst) {\n    if (trueFirst || trueFirst) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return trueFirst ? org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator : org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"trueFirst","beforeFirst":"trueFirst"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"b311087b-2e83-11e6-adb5-a305f8b82316","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:129","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().containsAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtBinaryOperatorImpl","sourcecode":"(index < startIndex) || (index > endIndex)"},"failures":[],"tindex":"b3112f8c-2e83-11e6-adb5-258cbb38b3e5","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if ((hash < hash) || (index > hash)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return referent;\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            throw new java.lang.Error();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"hash","endIndex":"hash","index":"hash"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"tindex":"b3112f8d-2e83-11e6-adb5-9b4640c04e72","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtBinaryOperatorImpl","sourcecode":"(m == 0) || (n == 0)"},"failures":[],"tindex":"b311569e-2e83-11e6-adb5-3be2a7c0a331","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if ((index == 0) || (index == 0)) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            setComparator(index, comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index","n":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"b311569f-2e83-11e6-adb5-a10a1864f500","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[441],"tindex":"b31156a0-2e83-11e6-adb5-e19cdc1e33bb","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"b31156a1-2e83-11e6-adb5-6f94307d1249","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[442,443,444,445,446],"tindex":"b3117db2-2e83-11e6-adb5-ffd711f8a15d","method":{"position":"org.apache.commons.collections4.PredicateUtils:421","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[91,92,93,94,95,96,97,98,99],"tindex":"b3117db3-2e83-11e6-adb5-3f82fec363d9","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[103],"tindex":"b3117db4-2e83-11e6-adb5-5b3426cf1f36","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:631","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(obj);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    final java.lang.Object java.lang.Object = n.getKey();\n                    if ((k == obj) || ((k != null) && (k.equals(obj)))) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(k);\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtBinaryOperatorImpl","sourcecode":"h == (root)"},"failures":[],"tindex":"b311a4c5-2e83-11e6-adb5-effdf918dd83","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == node) {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node","h":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"b311cbd6-2e83-11e6-adb5-15cdcb17b3e6","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == index) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[447,448,449,450,451,452,453,454,455,456,457],"tindex":"b311cbd7-2e83-11e6-adb5-99b06b08e838","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.util.Iterator<?>) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[458,447,459,460,461,462,463,464,465,466,452,467,468,469,470,471,472,473,474,453,475,476,477,478,479,480,481,454,482,456,483,484,485,486,487,488,489,490,457,491,492,493,494,495,496,497,498,73,499,500,501,79,502,503],"tindex":"b311cbd8-2e83-11e6-adb5-5307a517de65","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"b311f2e9-2e83-11e6-adb5-b1ba9117c5d8","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtBinaryOperatorImpl","sourcecode":"(currentIterator) == null"},"failures":[],"tindex":"b311f2ea-2e83-11e6-adb5-75cb70820d2d","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"b311f2eb-2e83-11e6-adb5-8511ff384dd9","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[504,505,506,507,508,509,510,511],"tindex":"b31219fc-2e83-11e6-adb5-13e7b7526ae9","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashCode <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"hashCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"b312410d-2e83-11e6-adb5-5331629fcd18","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtBinaryOperatorImpl","sourcecode":"(canRemove) == false"},"failures":[],"tindex":"b312410e-2e83-11e6-adb5-ede8a4d5daa7","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst == false) {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"canRemove":"trueFirst"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"b312410f-2e83-11e6-adb5-91d424a87907","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"b3124110-2e83-11e6-adb5-0d4e244fb836","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null ? value == null : nextElement.equals(p)) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"value","nextElement":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"b3126721-2e83-11e6-adb5-fde7501cce86","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtBinaryOperatorImpl","sourcecode":"deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))"},"failures":[],"tindex":"b3126722-2e83-11e6-adb5-91f62b443763","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[],"tindex":"b3126723-2e83-11e6-adb5-dbc6b7ec44f9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1015","type":"CtMethodImpl","sourcecode":"private void doRedBlackDeleteFixup(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> replacementNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((replacementNode.getParent(dataElement).getLeft(dataElement)) == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = replacementNode;\n            while ((currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateRight(siblingNode, dataElement);\n                            siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateLeft(siblingNode, dataElement);\n                            siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(currentNode, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"replacementNode","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"b312b544-2e83-11e6-adb5-cd50c5decd85","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[512],"tindex":"b312b545-2e83-11e6-adb5-f3b9b50d8ff5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"b312dc56-2e83-11e6-adb5-839c9ffbc1b6","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            if (mutator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (mutator == null) {\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"b312dc57-2e83-11e6-adb5-efe0fa6c52db","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(start))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"start"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"b3130368-2e83-11e6-adb5-29179a83ab13","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":85,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}