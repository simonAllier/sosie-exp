{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":61,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":539,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":276,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":284,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":186,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":424,"org.apache.commons.collections4.CollectionUtilsTest.collect":203,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":264,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":566,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":3,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":438,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":327,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":248,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":516,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":387,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":365,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":311,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":599,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":475,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":293,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":343,"org.apache.commons.collections4.CollectionUtilsTest.transform2":201,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.CollectionUtilsTest.transform1":464,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":290,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":374,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":10,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":452,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":500,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":66,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":614,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":481,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":468,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":552,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":81,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":0,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":593,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":148,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":543,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":442,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":170,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":440,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":22,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":287,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":574,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":2,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":278,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":425,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":515,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":381,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":545,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":16,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":138,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":417,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":416,"org.apache.commons.collections4.map.CompositeMapTest.testPut":263,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":385,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":57,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":171,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":356,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":206,"org.apache.commons.collections4.map.CompositeMapTest.testGet":262,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":88,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":432,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":622,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":183,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":184,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":71,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":312,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":474,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":106,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":192,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":413,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":455,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":314,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":76,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":120,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":351,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":556,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":405,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":303,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":496,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":491,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":204,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":348,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":32,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":439,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":256,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":620,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":209,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":429,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":269,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":590,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":233,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":317,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":307,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":435,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":520,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":521,"org.apache.commons.collections4.list.TreeListTest.testRemove":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":328,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":450,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":253,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":357,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":584,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":340,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":421,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":115,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":324,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":230,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":237,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":44,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":111,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":158,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":433,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":31,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":444,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":285,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":150,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":1,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":469,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":189,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":107,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":527,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":300,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":178,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":331,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":538,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":172,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":514,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":11,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":59,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":217,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":380,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":18,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":427,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":130,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":49,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":358,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":231,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":522,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":537,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":346,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":47,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":216,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":422,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":51,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":454,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":472,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":127,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":102,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":571,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":37,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":495,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":451,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":222,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":266,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":508,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":93,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":159,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":119,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":332,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":143,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":197,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":412,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":15,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":200,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":547,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":616,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":211,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":160,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":165,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":167,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":426,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":305,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":245,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":271,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":69,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":181,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":592,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":146,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":282,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":232,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":490,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":625,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":518,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":575,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":576,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":577,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":411,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":56,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":78,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":226,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":629,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":65,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":68,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":177,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":330,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":503,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":174,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":19,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":388,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":270,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":603,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":611,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":38,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":624,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":105,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":466,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":482,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":164,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":89,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":274,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":581,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":91,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":456,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":386,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":383,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":155,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":619,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":70,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":63,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":299,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":529,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":347,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":579,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":95,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":533,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":554,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":110,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":364,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":46,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":199,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":601,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":623,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":126,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":596,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":80,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":235,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":288,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":140,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":341,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":166,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":54,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":626,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":301,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":344,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":512,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":477,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":403,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":376,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":368,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":92,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":205,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":551,"org.apache.commons.collections4.set.CompositeSetTest.testContains":272,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":597,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithEmptyCollection":258,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":214,"org.apache.commons.collections4.list.TreeListTest.testBug35258":240,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":108,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":384,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":499,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":507,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":35,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":506,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":534,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":294,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":316,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":627,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":400,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":157,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":568,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":569,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":131,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":570,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":397,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":335,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":116,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":404,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":467,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":198,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":602,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":370,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":391,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":559,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":399,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":64,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":591,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":436,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":523,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":582,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":33,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":137,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":14,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":465,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":502,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":628,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":291,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":202,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":621,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":48,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":437,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":572,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":27,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":553,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":350,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":617,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":449,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":488,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":79,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":187,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":542,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":58,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":292,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":112,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":151,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":372,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":366,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":118,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":193,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":161,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":363,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":180,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":461,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":94,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":509,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":176,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":129,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":382,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":77,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":615,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":83,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":418,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":149,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":489,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":97,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":408,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":308,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":609,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":132,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":261,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":8,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":493,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":210,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":255,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":339,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":173,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":586,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":17},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"df8aad8c-2eb3-11e6-9ae4-713a41184142","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:493","type":"CtMethodImpl","sourcecode":"protected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (insertBeforeNode == nodeToInsert) {\n        {\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode;\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            (int)++;\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"insertBeforeNode","header":"nodeToInsert"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl","sourcecode":"(entry.after) != (header)"},"failures":[],"tindex":"df8be60d-2eb3-11e6-9ae4-cb9c2d0edb81","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry != entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[],"tindex":"df8c0d1e-2eb3-11e6-9ae4-a3b98c37fe4b","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Long) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[136],"tindex":"df8c5b3f-2eb3-11e6-9ae4-051496f6aeb9","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                    } \n                    for (int int = 0 ; i < (closures.int) ; i++) {\n                        if ((closures[i]) == null) {\n                            throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                        } \n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[137],"tindex":"df8d6cb0-2eb3-11e6-9ae4-650efbae0869","method":{"position":"org.apache.commons.collections4.TransformerUtils:399","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[138],"tindex":"df8d93c1-2eb3-11e6-9ae4-43d421e66db6","method":{"position":"org.apache.commons.collections4.functors.IfClosure:70","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            if ((trueClosure == null) || (falseClosure == null)) {\n                throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.IfClosure<E>(predicate , trueClosure , falseClosure);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:213","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"df8d93c2-2eb3-11e6-9ae4-9fa67e40870c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtBinaryOperatorImpl","sourcecode":"retval != 0"},"failures":[139,140,141,142,143,144],"tindex":"df8dbad3-2eb3-11e6-9ae4-934455a4fb27","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index != 0) {\n        {\n            return java.util.List<E>.get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"retval":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"df8dbad4-2eb3-11e6-9ae4-3fd39fc8a7f4","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"df8de1e5-2eb3-11e6-9ae4-4d43fe806619","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl","sourcecode":"hm.isEmpty()"},"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],"tindex":"df8e08f6-2eb3-11e6-9ae4-9763e1ef4394","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"df8e08f7-2eb3-11e6-9ae4-5b14baeacdfd","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"df8e3008-2eb3-11e6-9ae4-ed5ae4c2de48","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        {\n            if (closures == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (closures == null) {\n                        throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n                    } \n                    for (int int = 0 ; i < (closures.int) ; i++) {\n                        if ((closures[i]) == null) {\n                            throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                        } \n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[194,195,196,197,198,199,200],"tindex":"df8e3009-2eb3-11e6-9ae4-01a733eb6a7a","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"df8e571a-2eb3-11e6-9ae4-abe6a80da44a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (bucket == 0) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bucket"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"df8e7e2b-2eb3-11e6-9ae4-4972c629d46d","method":{"position":"org.apache.commons.collections4.functors.IfClosure:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[201,202,203],"tindex":"df8e7e2c-2eb3-11e6-9ae4-7b556103533a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (transformer == null) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"df8ea53d-2eb3-11e6-9ae4-27d5c68559f7","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl","sourcecode":"proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY)"},"failures":[],"tindex":"df8ea53e-2eb3-11e6-9ae4-fb1f75ccb2de","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"count","proposedCapacity":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[],"tindex":"df8ecc4f-2eb3-11e6-9ae4-79798885fb2c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return entry.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"df902be0-2eb3-11e6-9ae4-33bb90e50e93","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (removeCollection instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"removeCollection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtBinaryOperatorImpl","sourcecode":"(removed) || (beforeFirst)"},"failures":[],"tindex":"df9052f1-2eb3-11e6-9ae4-75854984a415","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive || forceInclusive) {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removed":"forceInclusive","beforeFirst":"forceInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"df9052f2-2eb3-11e6-9ae4-c377e943e18a","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"df9052f3-2eb3-11e6-9ae4-d9eff6535ca4","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        final java.lang.Object java.lang.Object = map.get(key);\n                        if (answer != null) {\n                            return answer.toString();\n                        } \n                    } \n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtUnaryOperatorImpl","sourcecode":"!(nextObjectSet)"},"failures":[],"tindex":"df907a04-2eb3-11e6-9ae4-3f4474e309cb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (!fromInclusive) {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"fromInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"df907a05-2eb3-11e6-9ae4-212ed3c030b8","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        final java.lang.Object java.lang.Object = map.get(key);\n                        if (answer != null) {\n                            return answer.toString();\n                        } \n                    } \n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[204],"tindex":"df907a06-2eb3-11e6-9ae4-edc1a1750788","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"tindex":"df907a07-2eb3-11e6-9ae4-3132a9cf3bb6","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[237],"tindex":"df90a118-2eb3-11e6-9ae4-2d2def97b29f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:140","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count == (-1)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"df90a119-2eb3-11e6-9ae4-dd42307c7ff7","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? -1 : node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[254,255],"tindex":"df90a11a-2eb3-11e6-9ae4-632878e2c71c","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:70","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> uniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[256,257,258],"tindex":"df90c82b-2eb3-11e6-9ae4-cfc95699ab92","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll.isEmpty()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"df90c82c-2eb3-11e6-9ae4-357e90ca6676","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits < (lengthInBits / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits","index":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[259,260],"tindex":"df90ef3d-2eb3-11e6-9ae4-fdba2512442a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2069","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[261],"tindex":"df90ef3e-2eb3-11e6-9ae4-2bd3bd555fba","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"df913d5f-2eb3-11e6-9ae4-6b8b6800a2b1","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275],"tindex":"df913d60-2eb3-11e6-9ae4-7778d2a9c3c7","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (b instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[],"tindex":"df916471-2eb3-11e6-9ae4-df7c4dd50b08","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (null != key) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtBinaryOperatorImpl","sourcecode":"mapSize == 0"},"failures":[276],"tindex":"df916472-2eb3-11e6-9ae4-bfc189ff7660","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:542","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V set(final int index, final V value) {\n    if (index == 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.setValue(index, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapSize":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[277],"tindex":"df916473-2eb3-11e6-9ae4-e52d8a1868b4","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[278,279],"tindex":"df918b84-2eb3-11e6-9ae4-fd8f04d5b3b2","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtBinaryOperatorImpl","sourcecode":"criterion == null"},"failures":[280],"tindex":"df918b85-2eb3-11e6-9ae4-d766bbc3b271","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"criterion":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"df918b86-2eb3-11e6-9ae4-576bc951c743","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:106","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex < (fromIndex / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().subList(fromIndex, toIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex","index":"toIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtBinaryOperatorImpl","sourcecode":"(inverse) == null"},"failures":[281,282,283],"tindex":"df91b297-2eb3-11e6-9ae4-d5abda9f7a2e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 == null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverse":"key3"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[284,285],"tindex":"df9227c8-2eb3-11e6-9ae4-330f5fc0a507","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"df9227c9-2eb3-11e6-9ae4-b9ddc93c468f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[286,287,288,289,290,291],"tindex":"df9227ca-2eb3-11e6-9ae4-ef88d6d69a2e","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[292,293,283,294,295,296,297,298,281,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"df924edb-2eb3-11e6-9ae4-a5ece77cf57f","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"df924edc-2eb3-11e6-9ae4-53ea5f94cf67","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:852","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object entry) {\n    if (entry == null ? entry == null : nextElement.equals(p)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (entry instanceof java.util.Map.Entry) {\n                final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(entry));\n                final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(e.getKey());\n                return (match != null) && (match.equals(e));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"entry","nextElement":"entry"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[339,340,341,342],"tindex":"df929cfd-2eb3-11e6-9ae4-11d84ebba572","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:193","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if ((index >= 0) && (index < ((size()) - 1))) {\n                return java.util.List<K>.get((index + 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[343],"tindex":"df929cfe-2eb3-11e6-9ae4-ffa63ff5c6f8","method":{"position":"org.apache.commons.collections4.CollectionUtils:366","type":"CtMethodImpl","sourcecode":"public static boolean containsAll(final java.util.Collection<?> coll1, final java.util.Collection<?> coll2) {\n    if (coll2 instanceof org.apache.commons.collections4.Bag) {\n        {\n            if (coll2.isEmpty()) {\n                return true;\n            } else {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll1.iterator();\n                final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n                for (final java.lang.Object java.lang.Object : coll2) {\n                    if (elementsAlreadySeen.contains(nextElement)) {\n                        continue;\n                    } \n                    boolean boolean = false;\n                    while (it.hasNext()) {\n                        final java.lang.Object java.lang.Object = it.next();\n                        elementsAlreadySeen.add(p);\n                        if (nextElement == null ? p == null : nextElement.equals(p)) {\n                            foundCurrentElement = true;\n                            break;\n                        } \n                    }\n                    if (foundCurrentElement) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[344],"tindex":"df93393f-2eb3-11e6-9ae4-9b65576d6196","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:43","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"df938760-2eb3-11e6-9ae4-932dbf00765c","method":{"position":"org.apache.commons.collections4.IteratorUtils:474","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<K, V> mapIterator) {\n    if (mapIterator == null) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(mapIterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"mapIterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[345],"tindex":"df93ae71-2eb3-11e6-9ae4-65bfe52da7bd","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Float) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"df93ae72-2eb3-11e6-9ae4-e517f000d8ec","method":{"position":"org.apache.commons.collections4.FactoryUtils:120","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[346,347],"tindex":"df93ae73-2eb3-11e6-9ae4-31c15cea82c2","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[348,349],"tindex":"df93d584-2eb3-11e6-9ae4-4b091405d9c4","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl","sourcecode":"doubleObject == null"},"failures":[350,351,352,353,354,355,356,357,358,359,360,361],"tindex":"df93d585-2eb3-11e6-9ae4-1dabcaa88a1d","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"df93d586-2eb3-11e6-9ae4-61684ade7c1b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"df93fc97-2eb3-11e6-9ae4-e1f39915bbed","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll.isEmpty()) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl","sourcecode":"index >= (size)"},"failures":[20,15,19,21,22,30,40,46,362,66,67,363,110,111],"tindex":"df93fc98-2eb3-11e6-9ae4-03f16adb5828","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"df93fc99-2eb3-11e6-9ae4-173bd1bac504","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,259,260,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"tindex":"df9423aa-2eb3-11e6-9ae4-cf457d64a6ee","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                {\n                    return node == null ? null : node.getLeft(dataElement);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[458,459],"tindex":"df9423ab-2eb3-11e6-9ae4-b98ae9eb4f81","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1027","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"df944abc-2eb3-11e6-9ae4-55e12d82d4ec","method":{"position":"org.apache.commons.collections4.list.TreeList:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(fromIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(fromIndex, 0, size());\n            return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(org.apache.commons.collections4.list.TreeList.this , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"fromIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"df944abd-2eb3-11e6-9ae4-9df630e51828","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:587","type":"CtMethodImpl","sourcecode":"protected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(subList , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"position == null"},"failures":[460,461,462,463],"tindex":"df944abe-2eb3-11e6-9ae4-49f08cdbebe9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"df944abf-2eb3-11e6-9ae4-892b3f7c7f73","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list2 instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[415],"tindex":"df9471d0-2eb3-11e6-9ae4-59f91f3e4c50","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return doRemoveValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[464,201],"tindex":"df9471d1-2eb3-11e6-9ae4-3d2b1860b66e","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"df9471d2-2eb3-11e6-9ae4-8965422e600d","method":{"position":"org.apache.commons.collections4.set.CompositeSet:245","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"df9471d3-2eb3-11e6-9ae4-491de9836643","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"df9498e4-2eb3-11e6-9ae4-0bf461fde261","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)"},"failures":[],"tindex":"df9498e5-2eb3-11e6-9ae4-232253eab769","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:813","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getLeftChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                {\n                    return node == null ? null : node.getLeft(dataElement);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"df9498e6-2eb3-11e6-9ae4-ed124e3df247","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.NodeList) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[465,466],"tindex":"df9498e7-2eb3-11e6-9ae4-2df9a6a40f35","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"df94bff8-2eb3-11e6-9ae4-8bb07e923a5f","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index == 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtBinaryOperatorImpl","sourcecode":"(cloned.delegateMap) != null"},"failures":[],"tindex":"df94e709-2eb3-11e6-9ae4-6f61960f915d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cloned":"map","delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614],"tindex":"df95352a-2eb3-11e6-9ae4-a99dd1ad2e40","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                {\n                    if (factory == null) {\n                        throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)"},"failures":[369,410,449,453,455,456,457],"tindex":"df95352b-2eb3-11e6-9ae4-a5c783299f33","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(node, dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"df955c3c-2eb3-11e6-9ae4-7738127c02ad","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[615,616],"tindex":"df955c3d-2eb3-11e6-9ae4-21745f41bb98","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl","sourcecode":"(collection) != null"},"failures":[617],"tindex":"df955c3e-2eb3-11e6-9ae4-d3b17e7de122","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[618],"tindex":"df955c3f-2eb3-11e6-9ae4-2dd4a0f881a1","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[619],"tindex":"df958350-2eb3-11e6-9ae4-771f009e8f39","method":{"position":"org.apache.commons.collections4.IteratorUtils:364","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array) {\n    if (array == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"df958351-2eb3-11e6-9ae4-6decdfebe606","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (null == key2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"df958352-2eb3-11e6-9ae4-73c3542631b3","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"df958353-2eb3-11e6-9ae4-d98990dd3b96","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (factory == null) {\n                {\n                    if (factory == null) {\n                        throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n                    } \n                    return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[620,621,622,623,624,352,625,354,626,357,359,627,360],"tindex":"df95aa64-2eb3-11e6-9ae4-d1ebdecd6e13","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[628,629],"tindex":"df95aa65-2eb3-11e6-9ae4-e14f5933bba0","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":90,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}