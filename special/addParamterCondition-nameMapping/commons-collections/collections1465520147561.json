{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":522,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":379,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":464,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":248,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":477,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":297,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":486,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":526,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":359,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":380,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":109,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":536,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":562,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":491,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":296,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":374,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":57,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":302,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":323,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":261,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":298,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":542,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":590,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":25,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":258,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":430,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":434,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":172,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":504,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":252,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":40,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":65,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":178,"org.apache.commons.collections4.map.TransformedMapTest.testValuesClearChangesMap":361,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":492,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":102,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":444,"org.apache.commons.collections4.CollectionUtilsTest.transform2":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":480,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":119,"org.apache.commons.collections4.CollectionUtilsTest.transform1":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":259,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":415,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":468,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":385,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":575,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":557,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":16,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":305,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":246,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":203,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveAll":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":126,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":78,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":396,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":533,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":33,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":291,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":133,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":375,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":481,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":513,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":559,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRetainAll":330,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":449,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":389,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":592,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":19,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":578,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":169,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":318,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":28,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":221,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":143,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":527,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":55,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":89,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":508,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":391,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":428,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":117,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":499,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":310,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":496,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":18,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":211,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":509,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":207,"org.apache.commons.collections4.list.TreeListTest.testRemove":369,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":86,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":159,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":160,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":503,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":295,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":37,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":421,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":588,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":414,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":566,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":587,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":210,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":235,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":46,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":457,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":563,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":147,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":489,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":171,"org.apache.commons.collections4.ListUtilsTest.testSubtract":149,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":448,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":98,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":328,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":106,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":576,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":154,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":321,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveAll":353,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":223,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":196,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":574,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":262,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":506,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":111,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":463,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":445,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":584,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":582,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsSelfHashCode":367,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":275,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":13,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":245,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRetainAll":360,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":473,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":112,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetClearChangesMap":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":406,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":214,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":441,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":474,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":237,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":407,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":539,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":312,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":520,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":549,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":478,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":285,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":570,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":327,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":326,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":199,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":423,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":476,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":176,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":373,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":387,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":170,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":233,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":194,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":581,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":320,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":456,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":384,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":195,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":386,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":535,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":200,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":6,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":265,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":538,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":451,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":212,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":498,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":71,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":532,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":228,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":8,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":314,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":507,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":442,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":337,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":201,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":410,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":398,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":183,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":545,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":38,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":322,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":220,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":381,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":488,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":573,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":331,"org.apache.commons.collections4.map.TransformedMapTest.testMakeMap":344,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":329,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":458,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":594,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":251,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":350,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":530,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":213,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":432,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":567,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":424,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":392,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":293,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":472,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":14,"org.apache.commons.collections4.map.TransformedMapTest.testSimpleSerialization":365,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":280,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":260,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":202,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":515,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":158,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":546,"org.apache.commons.collections4.CollectionUtilsTest.isFull":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":263,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":596,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":405,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":534,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":116,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":348,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":461,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":467,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":341,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":371,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":403,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalFullCollectionExists":363,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":274,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":267,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":466,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":540,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":569,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":255,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":60,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":67,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":583,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":229,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":80,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":269,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":276,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":63,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":382,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":7,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":231,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":568,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":591,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":470,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":209,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":543,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":571,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":249,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":315,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":198,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":537,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":555,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":551,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":552,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":208,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":23,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":511,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":197,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":376,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":465,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":22,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullKey":346,"org.apache.commons.collections4.map.TransformedMapTest.testCanonicalEmptyCollectionExists":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":418,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":257,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":425,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":30,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutNullValue":340,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":586,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":227,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":516,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":593,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":402,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":45,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":317,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":240,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":49,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":395,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":292,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":450,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":439,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":283,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":81,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":101,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":242,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":241,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":484,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":125,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":47,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":366,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":436,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":580},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"1197ab10-2ea6-11e6-9c16-f13490761e8c","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"11986e61-2ea6-11e6-9c16-e1bc64f480a9","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"11986e62-2ea6-11e6-9c16-81af0ad173b5","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[],"tindex":"11989573-2ea6-11e6-9c16-81d59d4c7626","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:113","type":"CtMethodImpl","sourcecode":"protected void setMaximumCacheSize(final int maximumCacheSize) {\n    if (maximumCacheSize == (-1)) {\n        {\n            if (maximumCacheSize == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.list.NodeCachingLinkedList.this.int = maximumCacheSize;\n                    shrinkCacheToMaximumSize();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"maximumCacheSize"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"11989574-2ea6-11e6-9c16-494fd7e956e4","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:47","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[0],"tindex":"1198bc85-2ea6-11e6-9c16-990417255a09","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                {\n                    return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[],"tindex":"1198e396-2ea6-11e6-9c16-b33767f8a0c5","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[1,2,3],"tindex":"1198e397-2ea6-11e6-9c16-d97f061cbe28","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[4],"tindex":"11990aa8-2ea6-11e6-9c16-ad9e4b62e9f5","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[5],"tindex":"119931b9-2ea6-11e6-9c16-416b15e65de9","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[],"tindex":"119958ca-2ea6-11e6-9c16-132e7f31bd66","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:219","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 instanceof java.util.Dictionary) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value1 == value2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl","sourcecode":"index > (size)"},"failures":[],"tindex":"119958cb-2ea6-11e6-9c16-67f491d8c969","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index > index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"11997fdc-2ea6-11e6-9c16-af6739a2cac5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:143","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().retainAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"11997fdd-2ea6-11e6-9c16-fdbc69f9f5d1","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().java.util.Map<K, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[33,34,35],"tindex":"1199a6ee-2ea6-11e6-9c16-9b343c6a64c3","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"1199a6ef-2ea6-11e6-9c16-45a24d11439f","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.map.AbstractMapDecorator.this)) {\n                return true;\n            } \n            return decorated().equals(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"1199ce00-2ea6-11e6-9c16-3b3ed5294bb7","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:174","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().removeAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl","sourcecode":"((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[76],"tindex":"1199ce01-2ea6-11e6-9c16-19f90f02f7d9","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[77,78],"tindex":"1199f512-2ea6-11e6-9c16-2d2d62857d61","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"119a1c23-2ea6-11e6-9c16-1bed2f189d3d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[79,80,81],"tindex":"119a1c24-2ea6-11e6-9c16-a3f1dd9506ed","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:403","type":"CtMethodImpl","sourcecode":"private boolean isExpired(final long now, final java.lang.Long expirationTimeObject) {\n    if (expirationTimeObject == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expirationTimeObject != null) {\n                final long long = expirationTimeObject.longValue();\n                return (expirationTime >= 0) && (now >= expirationTime);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"expirationTimeObject"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY)) != null"},"failures":[82,83,84,85,86,87,88,89,90,91],"tindex":"119a4335-2ea6-11e6-9c16-e39b95d9be27","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((x.getLeft(dataElement)) != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"119a9156-2ea6-11e6-9c16-e9d2102e6d97","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[92],"tindex":"119ab867-2ea6-11e6-9c16-1de58212cc35","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[93,94,95,96,97,98,99,100,101],"tindex":"119ab868-2ea6-11e6-9c16-63b133f64b5c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"119ab869-2ea6-11e6-9c16-354e3a3290fc","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[102],"tindex":"119adf7a-2ea6-11e6-9c16-e10b61833455","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[103],"tindex":"119adf7b-2ea6-11e6-9c16-ddc675f1354c","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof java.util.Set) {\n                        final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                        return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"119adf7c-2ea6-11e6-9c16-f91ba4f55d12","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[104,105],"tindex":"119b068d-2ea6-11e6-9c16-6bd0db331746","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"119b2d9e-2ea6-11e6-9c16-a732e86d0a85","method":{"position":"org.apache.commons.collections4.MapUtils:938","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void debugPrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if (label instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[106],"tindex":"119b2d9f-2ea6-11e6-9c16-f3120b78f417","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1171","type":"CtBinaryOperatorImpl","sourcecode":"(y.getLeft(dataElement)) != null"},"failures":[107,108,85,87,89,90,91],"tindex":"119b54b0-2ea6-11e6-9c16-8dec64f68334","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"y":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[109,110,111],"tindex":"119b54b1-2ea6-11e6-9c16-392764f7d1ec","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtBinaryOperatorImpl","sourcecode":"offsetLength == 0"},"failures":[112,113],"tindex":"119b7bc2-2ea6-11e6-9c16-3106b3d16a2c","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    object = transform(object);\n                    getList().add(index, object);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetLength":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[114,115,116,117,118],"tindex":"119b7bc3-2ea6-11e6-9c16-d9d5d8005d3c","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"119b7bc4-2ea6-11e6-9c16-87c32acf1842","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:99","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength resolve(final int value) {\n    if (value == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (value) {\n                case 0 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 1 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                case 2 :\n                    return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength;\n                default :\n                    throw new java.lang.IllegalArgumentException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[119],"tindex":"119ba2d5-2ea6-11e6-9c16-91426d4cc023","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(collection != null) && (transformer != null)"},"failures":[120,121],"tindex":"119ba2d6-2ea6-11e6-9c16-51d8c46a8946","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"119ba2d7-2ea6-11e6-9c16-17fb32092608","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                {\n                    return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtInvocationImpl","sourcecode":"currentNode.isLeftChild(dataElement)"},"failures":[122,123,124,125,126,127,38,128,129,130,131,132,133,134,135,136,137,138,139,140,82,141,83,84,85,86,87,88,89,90,91],"tindex":"119bc9e8-2ea6-11e6-9c16-d5bbad43420b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            if (node.isLeftChild(dataElement)) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n                    if (node == null) {\n                        rval = null;\n                    } else if ((node.getRight(dataElement)) != null) {\n                        rval = leastNode(node.getRight(dataElement), dataElement);\n                    } else {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                        while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                            child = parent;\n                            parent = parent.getParent(dataElement);\n                        }\n                        rval = parent;\n                    }\n                    return rval;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[142],"tindex":"119bf0f9-2ea6-11e6-9c16-5d23cda1f505","method":{"position":"org.apache.commons.collections4.list.GrowthList:150","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final int int = decorated().size();\n            boolean boolean = false;\n            if (index > size) {\n                decorated().addAll(java.util.Collections.<E>nCopies((index - size), null));\n                result = true;\n            } \n            return (decorated().addAll(index, coll)) | result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[143,144,145],"tindex":"119bf0fa-2ea6-11e6-9c16-ef06dbdb0fcb","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if (index < 0) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[146,147],"tindex":"119bf0fb-2ea6-11e6-9c16-ff35584861b9","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"119c180c-2ea6-11e6-9c16-2ba83f11fddc","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtBinaryOperatorImpl","sourcecode":"(values) != null"},"failures":[148,149],"tindex":"119c180d-2ea6-11e6-9c16-2d640738085c","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) == 0"},"failures":[0],"tindex":"119c180e-2ea6-11e6-9c16-158fa50803be","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:92","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> map) {\n    if ((map.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n            } \n            if ((map.size()) == 0) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = map.remove(null);\n            final int int = map.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : map.entrySet()) {\n                preds[i] = entry.getKey();\n                transformers[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , preds , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"119c3f1f-2ea6-11e6-9c16-a9f4f0ce3fc5","method":{"position":"org.apache.commons.collections4.map.LinkedMap:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[35],"tindex":"119c3f20-2ea6-11e6-9c16-c77d2c1b43f1","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:446","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[150,151,152,153,154,155,156,157,158,159],"tindex":"119d0271-2ea6-11e6-9c16-359ec7ec3f20","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"nCopies"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl","sourcecode":"bound > len"},"failures":[160,161,162,163],"tindex":"119d2982-2ea6-11e6-9c16-fb51c22189be","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index > index) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index","bound":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[164,165,35,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"119d5093-2ea6-11e6-9c16-f149125e627c","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 == null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[],"tindex":"119d77a4-2ea6-11e6-9c16-b5dfcfea0d8f","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Float) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[109,114,1,116,193,194,195,115,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,117,2,110],"tindex":"119d77a5-2ea6-11e6-9c16-078cb03af43d","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"119d9eb6-2ea6-11e6-9c16-b3c21cbacb3e","method":{"position":"org.apache.commons.collections4.PredicateUtils:273","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl","sourcecode":"nextElement == null ? p == null : nextElement.equals(p)"},"failures":[],"tindex":"119d9eb7-2ea6-11e6-9c16-e9b8772e77fa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null ? value == null : nextElement.equals(p)) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"value","nextElement":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"119dc5c8-2ea6-11e6-9c16-5f334ce62da5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:686","type":"CtMethodImpl","sourcecode":"protected int calculateThreshold(final int newCapacity, final float factor) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(newCapacity)) {\n        {\n            return ((int)(newCapacity * factor));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"newCapacity"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[],"tindex":"119dc5c9-2ea6-11e6-9c16-e90d716d6304","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    object = transform(object);\n                    getList().add(index, object);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[226],"tindex":"119decda-2ea6-11e6-9c16-7d0a94a44afd","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"119decdb-2ea6-11e6-9c16-1feb09465e3c","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[227,228,229,230],"tindex":"119decdc-2ea6-11e6-9c16-017385003c7c","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                validate(entry.getKey(), entry.getValue());\n            }\n            super.putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[231],"tindex":"119e13ed-2ea6-11e6-9c16-c9f11167f619","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Float) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getList().lastIndexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[232],"tindex":"119e13ee-2ea6-11e6-9c16-6533b6cb6a88","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[233,234,234,235,236,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"119e3aff-2ea6-11e6-9c16-6d5c505dc8c6","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[251,252,253,254,122,107,255,256,257,258,259,123,260,261,124,125,262,126,127,38,263,128,129,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,130,131,281,282,283,132,108,284,285,286,287,288,133,289,290,291,292,293,294,295,134,135,296,136,137,138,297,139,140,298,82,299,300,141,83,301,302,303,304,305,306,307,308,309,84,310,311,85,86,312,313,87,88,89,90,91],"tindex":"119e6210-2ea6-11e6-9c16-2f7a9cbb3e47","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[314],"tindex":"119e6211-2ea6-11e6-9c16-413972176ed4","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"119e8922-2ea6-11e6-9c16-9917a5ba0516","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj instanceof java.util.Set) {\n                        final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                        return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[315],"tindex":"119e8923-2ea6-11e6-9c16-b3d6c664b61d","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"119e8924-2ea6-11e6-9c16-d7e6226612ca","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>"},"failures":[],"tindex":"119eb035-2ea6-11e6-9c16-3b27747cfc1a","method":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:178","type":"CtMethodImpl","sourcecode":"protected void findNextByIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator != (java.util.Iterator<? extends E>)) {\n                if ((java.util.Iterator<? extends E>) != null) {\n                    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n                } \n                java.util.Iterator<? extends E> = iterator;\n            } \n            while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n                E E = java.util.Iterator<? extends E>.next();\n                if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n                    next = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(next);\n                } \n                findNext(next);\n            }\n            if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n                java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n                findNextByIterator(java.util.Iterator<? extends E>);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"119eb036-2ea6-11e6-9c16-efa91bb40d63","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[251,252,253,254,122,107,255,256,257,258,259,123,260,261,124,125,262,126,127,38,263,128,129,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,130,131,281,282,283,132,108,316,284,285,286,287,288,133,289,290,291,292,293,294,295,134,135,296,136,137,138,297,139,140,298,82,299,300,141,83,301,302,303,304,305,306,307,308,309,84,310,311,85,86,312,313,87,88,89,90,91],"tindex":"119ed747-2ea6-11e6-9c16-a528ca515662","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[317],"tindex":"119ed748-2ea6-11e6-9c16-2901a7ea1be2","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"119efe59-2ea6-11e6-9c16-f19f62482e84","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:152","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (fromIndex < 0) {\n        {\n            final java.util.List<E> java.util.List<E> = decorated().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(sub);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"fromIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[318],"tindex":"119efe5a-2ea6-11e6-9c16-59fb3c6e341b","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[319],"tindex":"119efe5b-2ea6-11e6-9c16-2ffc541d71a8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1783","type":"CtMethodImpl","sourcecode":"public static <E>E extractSingleton(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            if ((collection == null) || ((collection.size()) != 1)) {\n                throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n            } \n            return collection.iterator().next();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,49,351,352,353,354,355,356,357,358,359,360,361,362,363,50,364,365,366,367,368],"tindex":"119f256c-2ea6-11e6-9c16-69fd35a73cdb","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[369,370,371,372,373],"tindex":"119f256d-2ea6-11e6-9c16-d1e773536ad7","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"indexRelativeToMe"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[374,214,215,217,218,375,376,377,378,379,380,381,382,383,384,385,219,386,387,220,221,222,223,388,389,390,391,224,392,393,394,395,225,117,2,110,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,118,3,111,435,436,437,438],"tindex":"119f4c7e-2ea6-11e6-9c16-71a4806eeeef","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,36,459,460,37,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,40,498,499,41,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516],"tindex":"119f4c7f-2ea6-11e6-9c16-010900c0401f","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[],"tindex":"119f7390-2ea6-11e6-9c16-8b9af35118b1","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:113","type":"CtMethodImpl","sourcecode":"protected void setMaximumCacheSize(final int maximumCacheSize) {\n    if (maximumCacheSize == (-1)) {\n        {\n            if (maximumCacheSize == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.list.NodeCachingLinkedList.this.int = maximumCacheSize;\n                    shrinkCacheToMaximumSize();\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"maximumCacheSize"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[517],"tindex":"119f7391-2ea6-11e6-9c16-a12dce87bec8","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"119f9aa2-2ea6-11e6-9c16-1fae1daaa90f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"119f9aa3-2ea6-11e6-9c16-43f5741a0e78","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[518,519,520],"tindex":"119f9aa4-2ea6-11e6-9c16-c934bff25634","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[],"tindex":"119fc1b5-2ea6-11e6-9c16-0b4c2c476e4d","method":{"position":"org.apache.commons.collections4.CollectionUtils:227","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> union(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if (b instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.max(obj));\n            }\n            return helper.list();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl","sourcecode":"!(obj1 == null ? obj2 == null : obj1.equals(obj2))"},"failures":[],"tindex":"119fc1b6-2ea6-11e6-9c16-6b8df80467e3","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:438","type":"CtMethodImpl","sourcecode":"protected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (!(value == null ? value == null : obj1.equals(obj2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"value","obj1":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[521,522],"tindex":"11a00fd7-2ea6-11e6-9c16-61c729a6bee4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[],"tindex":"11a00fd8-2ea6-11e6-9c16-d33f94e3ccd0","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            if (node.isLeftChild(dataElement)) {\n                {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n                    if (node == null) {\n                        rval = null;\n                    } else if ((node.getRight(dataElement)) != null) {\n                        rval = leastNode(node.getRight(dataElement), dataElement);\n                    } else {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                        while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                            child = parent;\n                            parent = parent.getParent(dataElement);\n                        }\n                        rval = parent;\n                    }\n                    return rval;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"11a036e9-2ea6-11e6-9c16-df2b697d750e","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"11a036ea-2ea6-11e6-9c16-cdab528c2a7b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtBinaryOperatorImpl","sourcecode":"unknownObjectBehavior == null"},"failures":[173,523,524,525,47,48,526,527,528,529,530,531,532,533,534],"tindex":"11a05dfb-2ea6-11e6-9c16-6d9b6cee4e92","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unknownObjectBehavior":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtBinaryOperatorImpl","sourcecode":"(start.predecessor) == null"},"failures":[535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"11a05dfc-2ea6-11e6-9c16-517fb10f22cb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"node","predecessor":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"11a0850d-2ea6-11e6-9c16-570ad8c6852d","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596],"tindex":"11a0850e-2ea6-11e6-9c16-db2fb94950f1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"11a0ac1f-2ea6-11e6-9c16-f54a97a3ef03","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:400","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        {\n            return get(java.util.List<K>.get(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"11a0ac20-2ea6-11e6-9c16-6d4513289174","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"11a0ac21-2ea6-11e6-9c16-bf30ad0beeb2","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:269","type":"CtBinaryOperatorImpl","sourcecode":"reuse == null"},"failures":[],"tindex":"11a0d332-2ea6-11e6-9c16-4f439421ddea","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[597],"tindex":"11a0fa43-2ea6-11e6-9c16-d1015283386d","method":{"position":"org.apache.commons.collections4.PredicateUtils:487","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}