{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":324,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":106,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":252,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":775,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":428,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSerializeDeserializeThenCompare":500,"org.apache.commons.collections4.CollectionUtilsTest.collect":462,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":135,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":258,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":138,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":738,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":103,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":729,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":375,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":396,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":367,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":523,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":597,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":113,"org.apache.commons.collections4.CollectionUtilsTest.select":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":193,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":357,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":76,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":470,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":678,"org.apache.commons.collections4.CollectionUtilsTest.intersection":33,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":541,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":612,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":148,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":132,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":429,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":382,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":666,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":558,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":557,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":556,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":58,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":421,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":97,"org.apache.commons.collections4.map.CompositeMapTest.testPut":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":386,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":598,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":74,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":483,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":784,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":184,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":436,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":786,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":723,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":732,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":180,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":602,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":604,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":99,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":785,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":196,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":623,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":406,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":451,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":130,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":586,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":722,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":768,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":769,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":766,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":494,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":620,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":759,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":336,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":705,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":20,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":437,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":596,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":710,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":219,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":764,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":95,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":765,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":515,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":538,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":266,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":358,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":780,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":371,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":317,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":168,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":783,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":643,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":320,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":332,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":330,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":399,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":111,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":364,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":717,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":170,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":592,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":102,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":772,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":68,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":159,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":644,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":691,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":674,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":361,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":619,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":75,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":346,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":776,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":414,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":654,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":141,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":692,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":771,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":616,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":627,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":511,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":467,"org.apache.commons.collections4.ListUtilsTest.testPartition":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":122,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":329,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":292,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":10,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":656,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":172,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":560,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":269,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":740,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":155,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":117,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":145,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":707,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":284,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":770,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":259,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":1,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":709,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":233,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":649,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":194,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":286,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":410,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":642,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":696,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":254,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":524,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":384,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":476,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":179,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":177,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":518,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":279,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":728,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":244,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":569,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":568,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":349,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":567,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":733,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":724,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":423,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":30,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":315,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":694,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":743,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":739,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":377,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":73,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":211,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":668,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":385,"org.apache.commons.collections4.ListUtilsTest.testSelect":47,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":38,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":749,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":127,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":411,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":230,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":752,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":751,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":750,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":401,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":250,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":561,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":247,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":754,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":584,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":223,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":687,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":686,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":100,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":405,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":316,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":685,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":90,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":331,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":662,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":565,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":393,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":70,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":350,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":365,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":574,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":682,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":156,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":512,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":403,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":746,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":140,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":731,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":291,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":748,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":82,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":31,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":167,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":525,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":542,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":727,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":197,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":726,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":773,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":229,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":730,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":227,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":555,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":734,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":530,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":273,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":341,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":573,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":213,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":474,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":270,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":298,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":700,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":594,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":201,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":422,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":409,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":380,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":761,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":123,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":706,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":585,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":432,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":683,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":187,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":343,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":129,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":62,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":742,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":595,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":777,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":492,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":442,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":526,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":35,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":434,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":534,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":435,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":246,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":621,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":633,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":272,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":774,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":306,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":287,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":322,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":115,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":670,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":136,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":735,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":119,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":537,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":760,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":615,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":720,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":446,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":444,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":86,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":625,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":517,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":626,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":624,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":782,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":206,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":268,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":714,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":510,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":689,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":418,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":178,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":484,"org.apache.commons.collections4.map.CompositeMapTest.testGet":39,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":407,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":503,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":758,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":277,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":293,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":263,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":645,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":52,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":231,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":78,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":71,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":757,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":240,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":13,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":482,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":203,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":562,"org.apache.commons.collections4.CollectionUtilsTest.union":32,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":737,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":433,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":755,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":601,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":550,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":425,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":222,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":581,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":580,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":579,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":238,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":676,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":312,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":745,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":209,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":447,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":660,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":659,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":658,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":133,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":631,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":725,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":630,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":629,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":572,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":756,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":703,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":137,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":622,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":299,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":356,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":359,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":217,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":144,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":767,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":72,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":431,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":589,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":249,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":509,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":318,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":11,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":303,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":699,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":468,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":697,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":166,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":578,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":711,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":134,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":65,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":778,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":455,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":297,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":43,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":228,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":505,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":478,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":352,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":257,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":430,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":50,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":719,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":271,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":305,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":669,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":552,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":590,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":591,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":265,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":543,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":544,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":192,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":274,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":283,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":664,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":191,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":185,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":107,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":681,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":389,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":488,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":261,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":702,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":24,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":26,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":44,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":310,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":146,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":744,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":301,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":208,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":547,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":264,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":460,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":652,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":593,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":677,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":549,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":570,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":588,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":613,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":34,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":355,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":608,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":657,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":342,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":463,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":716,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":366,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":507,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":173,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":614,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":319,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":276,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":648,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":718,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":531,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":646,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":370,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":147,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":617,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":69,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":529,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":638,"org.apache.commons.collections4.set.CompositeSetTest.testContains":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":19,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":234,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":450,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":344,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":120,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":663,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":326,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":183,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":781,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":379,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":398,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":391,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":564,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":671,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":372,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":9,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":639,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":472,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":576,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":479,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":554,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":323,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":190,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":667,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":708,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":339,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":440,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":675,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":311,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":489,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":741,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":164,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":566,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":128,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":655,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":66,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":679,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":153,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":204,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":374,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":368,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":334,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":22,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToString":496,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":491,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":362,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":486,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":260,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":363,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":289,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":248,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":504,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":383,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":125,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":632,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":715,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":721,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":753,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":514,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":485,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":251,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":522,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":275,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":328,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":690},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[0,1],"tindex":"61b8d8bc-2ed3-11e6-949f-57c48ec7badd","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"61b9c31d-2ed3-11e6-949f-e306fd668116","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[22],"tindex":"61b9ea2e-2ed3-11e6-949f-d7cc66d6e7e1","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"61ba113f-2ed3-11e6-949f-0b9e95d253fe","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl","sourcecode":"null != (orderingBits)"},"failures":[],"tindex":"61ba1140-2ed3-11e6-949f-8b717d11e7f6","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:382","type":"CtMethodImpl","sourcecode":"private boolean anyValueSet(final java.util.BitSet set) {\n    if (null != set) {\n        {\n            for (int int = 0 ; i < (set.size()) ; i++) {\n                if (set.get(i)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtBinaryOperatorImpl","sourcecode":"(comparatorChain.size()) == 0"},"failures":[],"tindex":"61bb22b1-2ed3-11e6-949f-cf733feec5b2","method":{"position":"org.apache.commons.collections4.ComparatorUtils:103","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E extends java.lang.Comparable<? super E>>java.util.Comparator<E> chainedComparator(final java.util.Collection<java.util.Comparator<E>> comparators) {\n    if ((comparators.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ComparatorUtils.chainedComparator(((java.util.Comparator<E>[])(comparators.toArray(new java.util.Comparator[comparators.size()]))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparatorChain":"comparators"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[55],"tindex":"61bb49c2-2ed3-11e6-949f-1d5df58014e4","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"61bb49c3-2ed3-11e6-949f-2d23dac1c9f0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"proposedCapacity"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[56],"tindex":"61bb49c4-2ed3-11e6-949f-8d460899a44a","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl","sourcecode":"(a.size()) != (b.size())"},"failures":[],"tindex":"61bb70d5-2ed3-11e6-949f-2b9386ead19c","method":{"position":"org.apache.commons.collections4.map.LinkedMap:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[57,58],"tindex":"61bb70d6-2ed3-11e6-949f-73ce4cd40093","method":{"position":"org.apache.commons.collections4.map.TransformedMap:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy.isEmpty()) {\n        {\n            mapToCopy = transformMap(mapToCopy);\n            decorated().putAll(mapToCopy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"61bb70d7-2ed3-11e6-949f-ab9781f224f3","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[59],"tindex":"61bb97e8-2ed3-11e6-949f-0d0602707211","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[60,61],"tindex":"61bbbef9-2ed3-11e6-949f-87f234bc5e50","method":{"position":"org.apache.commons.collections4.MapUtils:1756","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> iterableMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n            } \n            return map instanceof org.apache.commons.collections4.IterableMap ? ((org.apache.commons.collections4.IterableMap<K, V>)(map)) : new org.apache.commons.collections4.map.AbstractMapDecorator<K, V>(map) {            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl","sourcecode":"m < 0"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"61bbbefa-2ed3-11e6-949f-c71336eea689","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits < 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[108,109],"tindex":"61bbe60b-2ed3-11e6-949f-3bc230fbd722","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:972","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[110,111],"tindex":"61bbe60c-2ed3-11e6-949f-01df97d97c9b","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[112],"tindex":"61bc0d1d-2ed3-11e6-949f-19dd942a1a23","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"61bc0d1e-2ed3-11e6-949f-e98766ed69ae","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:73","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().removeValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"61bc0d1f-2ed3-11e6-949f-11e99ca30b9d","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[113,114,115,116,117,118],"tindex":"61bc3430-2ed3-11e6-949f-af37cf345537","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:113","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if ((key == null) || (key == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key","b":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"61bd1e91-2ed3-11e6-949f-d57d97822083","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:493","type":"CtMethodImpl","sourcecode":"protected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (nodeToInsert == insertBeforeNode) {\n        {\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode;\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            (int)++;\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"nodeToInsert","header":"insertBeforeNode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[255],"tindex":"61bd6cb2-2ed3-11e6-949f-a93b9173a772","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if ((list.isEmpty()) && (list.isEmpty())) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"list","pendingInsertions":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"61bd6cb3-2ed3-11e6-949f-7bf5fc9a0c45","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index == 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[256,257,258],"tindex":"61bd6cb4-2ed3-11e6-949f-792b83334a70","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (!(key instanceof java.lang.Comparable)) {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[],"tindex":"61bd6cb5-2ed3-11e6-949f-5baccbb086f4","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[],"tindex":"61bd93c6-2ed3-11e6-949f-f110d4e13f39","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[259],"tindex":"61bd93c7-2ed3-11e6-949f-ed0832521c9c","method":{"position":"org.apache.commons.collections4.EnumerationUtils:50","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[260],"tindex":"61bd93c8-2ed3-11e6-949f-5f5d1f136d4e","method":{"position":"org.apache.commons.collections4.PredicateUtils:337","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"tindex":"61bdbad9-2ed3-11e6-949f-2dac292f1a19","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:122","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            for (final E E : coll) {\n                java.util.Map<E, ? super V>.put(e, V);\n            }\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[295],"tindex":"61bdbada-2ed3-11e6-949f-a5c66039e13a","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"61bdbadb-2ed3-11e6-949f-53537f9a0494","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:140","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Map<E, ? super V>.keySet().retainAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[296],"tindex":"61bde1ec-2ed3-11e6-949f-bbc34423eba5","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"tindex":"61bde1ed-2ed3-11e6-949f-f1204e561347","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[263,280],"tindex":"61bde1ee-2ed3-11e6-949f-e14a7b2040b5","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"tindex":"61bde1ef-2ed3-11e6-949f-71c5d1b361b0","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[362,363,364],"tindex":"61be0900-2ed3-11e6-949f-391966fa9490","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"61be5721-2ed3-11e6-949f-1fbea2e5ab77","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[365],"tindex":"61be7e32-2ed3-11e6-949f-f35d349835f7","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            return getList().lastIndexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[62,63,64,65,66,67,68,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,101,102,103,104,105,97,98,69,70,71,72,73,74,75,76,77,106,107],"tindex":"61be7e33-2ed3-11e6-949f-3d40331b7a08","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:110","type":"CtMethodImpl","sourcecode":"final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) {\n    if (bitIndex == 0) {\n        {\n            if (key == null) {\n                return false;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(key, bitIndex, lengthInBits);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[26,27,29,33,36,37,39,40,41,42,43,44,45,46,49,50,51,52,53,54],"tindex":"61be7e34-2ed3-11e6-949f-e91556ade783","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"61bea545-2ed3-11e6-949f-172889925460","method":{"position":"org.apache.commons.collections4.MapUtils:623","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return 0;\n            } \n            return shortObject.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"61bea546-2ed3-11e6-949f-9371cacc544c","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.left, p)"},"failures":[],"tindex":"61becc57-2ed3-11e6-949f-8550166aa746","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(h, p)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"h","left":"h"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[366,367,368,369,370,371,372,373,374,375,296,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"tindex":"61bf4188-2ed3-11e6-949f-bd937f3d76cf","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:379","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"61bf4189-2ed3-11e6-949f-85ee0088ad03","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:100","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.ListOrderedMap<K, V> listOrderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return new org.apache.commons.collections4.map.ListOrderedMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"61bf689a-2ed3-11e6-949f-79ef34a7960e","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"61bf689b-2ed3-11e6-949f-d5461c24a011","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:733","type":"CtMethodImpl","sourcecode":"protected void setNextNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> next) {\n    if (next == next) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.list.AbstractLinkedList.Node.this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = next;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"next","header":"next"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[462],"tindex":"61bf689c-2ed3-11e6-949f-31cc7f070fc5","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[463],"tindex":"61bf689d-2ed3-11e6-949f-a57c511b5e08","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[464],"tindex":"61bf8fae-2ed3-11e6-949f-b1874290ac34","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[465,466,467,468],"tindex":"61bfb6bf-2ed3-11e6-949f-c9b079b15623","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 == null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[34],"tindex":"61bfddd0-2ed3-11e6-949f-01d75de3590f","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtBinaryOperatorImpl","sourcecode":"rval != null"},"failures":[366,367,368,369,370,371,372,373,374,375,296,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"tindex":"61c07a11-2ed3-11e6-949f-85567de9e452","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rval":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.set.CompositeSet.this.mutator) == null"},"failures":[],"tindex":"61c0a122-2ed3-11e6-949f-b33a6f32069b","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[469,470,471,472,473,474,475,476,477,478,479,480,481],"tindex":"61c0c833-2ed3-11e6-949f-e10843025ffd","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[],"tindex":"61c0c834-2ed3-11e6-949f-4f2dfe0aa9ad","method":{"position":"org.apache.commons.collections4.ListUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> selectRejected(final java.util.Collection<? extends E> inputCollection, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (!(inputCollection.isEmpty())) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, new java.util.ArrayList<E>(inputCollection.size()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"61c0c835-2ed3-11e6-949f-a3ba837d3a9c","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"61c0c836-2ed3-11e6-949f-c587455e7545","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:278","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[482,483,484,320,485],"tindex":"61c0ef47-2ed3-11e6-949f-a33af5b9d1e0","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)"},"failures":[],"tindex":"61c0ef48-2ed3-11e6-949f-d542060393f9","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(hashCode)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashCode"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"61c0ef49-2ed3-11e6-949f-11d8c8a18e52","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:240","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value.isAssignableFrom(value.getReturnType())) {\n        {\n            if (value == null) {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if ((entry.getValue()) == null) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            } else {\n                for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n                    while (entry != null) {\n                        if (isEqualValue(value, entry.getValue())) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"value","method":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"61c1165a-2ed3-11e6-949f-31c0b8d11819","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[486],"tindex":"61c1165b-2ed3-11e6-949f-d1e7e3a241ad","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == 0"},"failures":[487],"tindex":"61c13d6c-2ed3-11e6-949f-0db5b0d1e4b5","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"61c13d6d-2ed3-11e6-949f-f9cfc9edd7c5","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtBinaryOperatorImpl","sourcecode":"(intersects.size()) > 0"},"failures":[488,489,490,491,492,493,295,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517],"tindex":"61c1647e-2ed3-11e6-949f-01ec30a61e97","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:349","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection) {\n    if ((compositeCollection.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"intersects":"compositeCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"61c1647f-2ed3-11e6-949f-7bad858b67cc","method":{"position":"org.apache.commons.collections4.MapUtils:677","type":"CtMethodImpl","sourcecode":"public static <K>float getFloatValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (floatObject == null) {\n                return 0.0F;\n            } \n            return floatObject.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[518],"tindex":"61c16480-2ed3-11e6-949f-25af41b168cd","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"61c16481-2ed3-11e6-949f-a32c2d5133cd","method":{"position":"org.apache.commons.collections4.IteratorUtils:649","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> objectGraphIterator(final E root, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectGraphIterator<E>(root , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"61c18b92-2ed3-11e6-949f-45edd91730f6","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.CollectionUtils.isSubCollection(mapToCopy.keySet(), keySet())) {\n                throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n            } \n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[],"tindex":"61c18b93-2ed3-11e6-949f-a95a0620799b","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:242","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Double) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtBinaryOperatorImpl","sourcecode":"((set.size()) > 0) || ((list.size()) > 0)"},"failures":[519],"tindex":"61c18b94-2ed3-11e6-949f-079ecc7fd144","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:379","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Collection<E> coll) {\n    if (((coll.size()) > 0) || ((coll.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Collection<E>>.remove(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"coll","list":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,467,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,382,405,406,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740],"tindex":"61c18b95-2ed3-11e6-949f-d56944d76924","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"61c1b2a6-2ed3-11e6-949f-b591e8cddc87","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:315","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = super.subList(fromIndex, toIndex);\n            final java.util.Set<E> java.util.Set<E> = createSetBasedOnList(java.util.Set<E>, superSubList);\n            return org.apache.commons.collections4.ListUtils.unmodifiableList(new org.apache.commons.collections4.list.SetUniqueList<E>(superSubList , subSet));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"toIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[741,742],"tindex":"61c1b2a7-2ed3-11e6-949f-47f2e909feb1","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:423","type":"CtMethodImpl","sourcecode":"public V setValue(final int index, final V value) {\n    if (index == 0) {\n        {\n            final K K = java.util.List<K>.get(index);\n            return put(key, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[743],"tindex":"61c1b2a8-2ed3-11e6-949f-5b53145e3616","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"61c200c9-2ed3-11e6-949f-0f3debfd01fb","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[744],"tindex":"61c200ca-2ed3-11e6-949f-6f2d9adf91ac","method":{"position":"org.apache.commons.collections4.TransformerUtils:250","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"61c200cb-2ed3-11e6-949f-53928535a0d0","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[745],"tindex":"61c227dc-2ed3-11e6-949f-c96f71f188a0","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[746,747],"tindex":"61c227dd-2ed3-11e6-949f-1531bd05aca9","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:199","type":"CtMethodImpl","sourcecode":"public K nextKey(final java.lang.Object key) {\n    if (null == key) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            return (entry == null) || ((entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"61c227de-2ed3-11e6-949f-81435f36df01","method":{"position":"org.apache.commons.collections4.BagUtils:84","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:610","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"61c24eef-2ed3-11e6-949f-431ef8ae8027","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[748],"tindex":"61c24ef0-2ed3-11e6-949f-eb182a1a4ce4","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[465,466,467,468,749,750,751,752,753,754],"tindex":"61c24ef1-2ed3-11e6-949f-41c58215cf77","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtBinaryOperatorImpl","sourcecode":"yFormerParent != null"},"failures":[412,417,419,420,422,423,424,436,440,447,448,450,453,454,457,458,459,460,461],"tindex":"61c27602-2ed3-11e6-949f-253d497d06b2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:948","type":"CtMethodImpl","sourcecode":"private void doRedBlackDelete(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> deletedNode) {\n    if (deletedNode != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n                if (((deletedNode.getLeft(dataElement)) != null) && ((deletedNode.getRight(dataElement)) != null)) {\n                    swapPosition(nextGreater(deletedNode, dataElement), deletedNode, dataElement);\n                } \n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (deletedNode.getLeft(dataElement)) != null ? deletedNode.getLeft(dataElement) : deletedNode.getRight(dataElement);\n                if (replacement != null) {\n                    replacement.setParent(deletedNode.getParent(dataElement), dataElement);\n                    if ((deletedNode.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = replacement;\n                    } else if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                        deletedNode.getParent(dataElement).setLeft(replacement, dataElement);\n                    } else {\n                        deletedNode.getParent(dataElement).setRight(replacement, dataElement);\n                    }\n                    deletedNode.setLeft(null, dataElement);\n                    deletedNode.setRight(null, dataElement);\n                    deletedNode.setParent(null, dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                        doRedBlackDeleteFixup(replacement, dataElement);\n                    } \n                } else {\n                    if ((deletedNode.getParent(dataElement)) == null) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = null;\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                            doRedBlackDeleteFixup(deletedNode, dataElement);\n                        } \n                        if ((deletedNode.getParent(dataElement)) != null) {\n                            if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                                deletedNode.getParent(dataElement).setLeft(null, dataElement);\n                            } else {\n                                deletedNode.getParent(dataElement).setRight(null, dataElement);\n                            }\n                            deletedNode.setParent(null, dataElement);\n                        } \n                    }\n                }\n            }\n            shrink();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"yFormerParent":"deletedNode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"61c27603-2ed3-11e6-949f-9758cd78b4bc","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag<?>"},"failures":[],"tindex":"61c29d14-2ed3-11e6-949f-0fa9057f388f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1567","type":"CtMethodImpl","sourcecode":"public static <O>java.util.List<O> collate(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final java.util.Comparator<? super O> c) {\n    if (a instanceof org.apache.commons.collections4.Bag<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collate(a, b, c, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtVariableReadImpl","sourcecode":"changed"},"failures":[119,131,128,141,145,146,147,148,156,165,170,171,172,173,174,188,176,175,189,177,190,192,194,185,186,179,180,181,182,195,196,198,199,200,201,202,203,204,205,208,211,212,213,214,215,216,232,218,217,233,219,234,236,238,229,230,221,222,223,224,225,226,239,240,242,243,244,245,246,247,248,249,252],"tindex":"61c29d15-2ed3-11e6-949f-6d30609f2499","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (endMarkerAllowed) {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    } else {\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"changed":"endMarkerAllowed"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:257","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[417],"tindex":"61c31246-2ed3-11e6-949f-8334a9196fb5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2115","type":"CtMethodImpl","sourcecode":"public V removeValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"61c36067-2ed3-11e6-949f-77f894354ec2","method":{"position":"org.apache.commons.collections4.ArrayStack:152","type":"CtMethodImpl","sourcecode":"public int search(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (size()) - 1;\n            int int = 1;\n            while (i >= 0) {\n                final java.lang.Object java.lang.Object = get(i);\n                if (((object == null) && (current == null)) || ((object != null) && (object.equals(current)))) {\n                    return n;\n                } \n                i--;\n                n++;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[755],"tindex":"61c36068-2ed3-11e6-949f-47043e8c211c","method":{"position":"org.apache.commons.collections4.SplitMapUtils:142","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[756,757],"tindex":"61c38779-2ed3-11e6-949f-d75cb66833c2","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[],"tindex":"61c3877a-2ed3-11e6-949f-a90633266eb3","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[758],"tindex":"61c3877b-2ed3-11e6-949f-7df384e095aa","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Long) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[759,760,761,762,763,764,765,766],"tindex":"61c3ae8c-2ed3-11e6-949f-157f67e1929e","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtBinaryOperatorImpl","sourcecode":"current == tree"},"failures":[],"tindex":"61c3ae8d-2ed3-11e6-949f-955c25d835bf","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (h == h) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"h","tree":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786],"tindex":"61c3ae8e-2ed3-11e6-949f-0dfc3ad0ea2e","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:171","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[370,371,410,411,437],"tindex":"61c3ae8f-2ed3-11e6-949f-6745b75b0a01","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}