{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":260,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":613,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":638,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":738,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":17,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":723,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":653,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":696,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsSelfHashCode":249,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":515,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":603,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":224,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":544,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":843,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":819,"org.apache.commons.collections4.CollectionUtilsTest.collect":657,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":354,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":356,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":355,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":474,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":188,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":339,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":711,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":71,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":772,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":781,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":311,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":551,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":402,"org.apache.commons.collections4.ListUtilsTest.testLazyList":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":815,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":717,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":759,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":745,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":691,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":114,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":200,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":742,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":842,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":32,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":290,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":87,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":365,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":101,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":518,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":396,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":495,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":208,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":454,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":676,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":621,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":237,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":414,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":596,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":828,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":27,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalFullCollectionExists":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":174,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":330,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":49,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":820,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":51,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":276,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":776,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":40,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":211,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":854,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":708,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":812,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":314,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":435,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":605,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":702,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":779,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":377,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":666,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":317,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":559,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":218,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":167,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":239,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":573,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":477,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":196,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":363,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":466,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":602,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":148,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":149,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":798,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":839,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":848,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":254,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":387,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":265,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalEmptyCollectionExists":304,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":506,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":558,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":722,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":175,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":164,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":281,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":332,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":794,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":827,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":182,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":461,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":183,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":654,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":706,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":116,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":258,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":700,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":847,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":262,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":584,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":395,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":526,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":152,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":301,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":757,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":269,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":599,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":637,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":775,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":764,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":221,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":557,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":648,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":719,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":737,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":756,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":202,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testCanonicalFullCollectionExists":305,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":809,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":302,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":791,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":593,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":789,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":817,"org.apache.commons.collections4.CollectionUtilsTest.testIsEmptyWithNull":253,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":120,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":749,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":811,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":381,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":297,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":97,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":662,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":96,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":95,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":150,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":615,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":441,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":517,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":212,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":318,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":561,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":118,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":445,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":806,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":30,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":661,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":467,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":704,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":143,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":481,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":681,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":2,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":491,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":852,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":56,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":433,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":705,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":246,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":296,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":362,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":73,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":24,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":403,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":677,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":712,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":285,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":733,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":554,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":43,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":342,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":616,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":405,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":633,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":306,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":33,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":215,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":69,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":802,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":198,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":448,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":777,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":440,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":359,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":532,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":132,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":730,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":529,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":104,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":594,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":699,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":379,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":442,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":307,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":406,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":29,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":385,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":499,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":127,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":620,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":126,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":549,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":814,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":643,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":646,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":369,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":446,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":751,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":771,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":563,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":240,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":480,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":669,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":192,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":243,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":778,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":710,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":190,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":179,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":595,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":450,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":803,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":65,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":67,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":793,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":508,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":78,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":740,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":797,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":647,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":785,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":788,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":787,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":786,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":612,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":680,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":294,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":855,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":421,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":28,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":312,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":795,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":80,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":324,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":729,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":322,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":540,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":261,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":206,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":560,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":743,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":141,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":667,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":724,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":583,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":346,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":537,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":103,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":522,"org.apache.commons.collections4.map.LRUMapTest.testLRU":382,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":858,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":591,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":455,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":625,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":660,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":44,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":154,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":411,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":568,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":400,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":295,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":530,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":604,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":674,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":641,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":673,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":663,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":366,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":813,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":344,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":482,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":801,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":380,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":783,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":774,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":256,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":688,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":555,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":851,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":361,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":736,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":201,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":598,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":640,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":259,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":748,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":230,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":823,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":86,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":437,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":463,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":31,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":331,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":831,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":459,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":194,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":245,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":672,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":825,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":826,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":844,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":58,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":698,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":177,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":353,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":464,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":732,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":287,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":651,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":351,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":64,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":686,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":703,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":291,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":580,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":606,"org.apache.commons.collections4.CollectionUtilsTest.transform2":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":769,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":447,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":452,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":271,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":430,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":417,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":548,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testCanonicalEmptyCollectionExists":251,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":546,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":834,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":835,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":833,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":479,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":569,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":42,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":217,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":592,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":231,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":845,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":846,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":531,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":121,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":493,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":137,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":614,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":810,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":624,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":23,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":8,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":465,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":347,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":683,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":808,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":799,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":585,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":626,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":590,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":169,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":241,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":859,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":343,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":422,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":721,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":316,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":106,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":684,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":687,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":509,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":228,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":370,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":270,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":413,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":850,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":734,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":279,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":547,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":226,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":731,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":690,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":832,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":587,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":384,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":824,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":829,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":209,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":426,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":582,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":601,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":716,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":145,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":144,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":816,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":280,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":146,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":659,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":184,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":394,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":507,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":232,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":838,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":837,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":856,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":836,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":552,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.map.LRUMapTest.testClone":77,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":611,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":579,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":701,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":107,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":242,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":565,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":345,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":434,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":476,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":193,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":329,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":822,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":415,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":432,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":264,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":665,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":623,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":358,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":289,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":649,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":263,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":709,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":630,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":755,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":853,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":747,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":393,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":577,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":392,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":373,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":308,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":298,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":204,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":610,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":841,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":485,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":689,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":502,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":534,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":752,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":642,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":61,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":84,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":750,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":821,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":62,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":473,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":472,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":162,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":514,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":443,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":618,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":527,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":333,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":588,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":805,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":216,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":131,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":349,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":130,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":129,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":460,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":782,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":576,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":505,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":222,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":589,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":675,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":428,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":83,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":562,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":720,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":111,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":112,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":160,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":628,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":694,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMakeMap":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":20,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":682,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":100,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":257,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":668,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":161,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":292,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":244,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":631,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":714,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":35,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":117,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":760,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":105,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":207,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":335,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":336,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":337,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":456,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":510,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":725,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":770,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":364,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":399,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":735,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":468,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":135,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":635,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":574,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":247,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":378,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":746,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":650,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":796,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":634,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":693,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":26,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":282,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":728,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":286,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":685,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":315,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":418,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":486,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":90,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":754,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":14,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":516,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":397,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":136,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":512,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":741,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":627,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":38,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":632,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":715,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":655,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":539,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":773,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":790,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":313,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":784,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":439,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":639,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":390,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":671,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":388,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":444,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":553,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":765,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":475,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":525,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":328,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":334,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":451,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":427,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":535,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":389,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":652,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":792,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":600,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":436,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":404,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":840,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":13,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":139,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":266,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":744,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":804,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":293,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":490,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":303,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":488,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":498,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":431,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":109,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":108,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":320,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":528,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":321,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":830,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":419,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":5,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":367,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":15,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":543,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":46,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":47,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":739,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":818,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":550,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":636,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":767,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSimpleSerialization":250,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":478,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":571,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":761,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":159,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":511,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":670,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":102,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":753,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":203,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":189,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":726,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":227,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":458,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":857,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":374,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":376,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":520,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":401,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":94,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":267,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":586,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":575,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":383,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":93,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":609,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":849,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":695,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":48,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":225,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":375,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":617,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":88},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"de12ed60-3e8a-11e6-9e63-31f67b593d60","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n                    final K K = entry.getKey();\n                    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n                    return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"de136291-3e8a-11e6-9e63-cb8ab3c29659","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[12,13,14,15,16,17,18,19,20,21],"tindex":"de136292-3e8a-11e6-9e63-3b34dae774ce","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[22],"tindex":"de136293-3e8a-11e6-9e63-83ef0d70b2d3","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"de1389a4-3e8a-11e6-9e63-37453beda8a7","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"de1389a5-3e8a-11e6-9e63-2972a8462fe1","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"tindex":"de1389a6-3e8a-11e6-9e63-bb3853300f85","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"de13b0b7-3e8a-11e6-9e63-1faf32e60fdc","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"tindex":"de13b0b8-3e8a-11e6-9e63-cfc604eedaf3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[230,231,232],"tindex":"de13d7c9-3e8a-11e6-9e63-13c738c8ef81","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[233],"tindex":"de13d7ca-3e8a-11e6-9e63-ff6fda3ddfaa","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate2 == null) || (predicate2 == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n                    return onePredicate;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"de13fedb-3e8a-11e6-9e63-2b4fcffe26d4","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.set.TransformedSortedSet<E> org.apache.commons.collections4.set.TransformedSortedSet<E> = new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n            if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(set.toArray()));\n                set.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"tindex":"de13fedc-3e8a-11e6-9e63-2bfe1a5b0303","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:74","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeSortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[253,254,255],"tindex":"de13fedd-3e8a-11e6-9e63-0fb1cb52a8ed","method":{"position":"org.apache.commons.collections4.CollectionUtils:1414","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return (coll == null) || (coll.isEmpty());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[256,256,257,257,258],"tindex":"de13fede-3e8a-11e6-9e63-ab58e0b20966","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:69","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T> coerce(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return ((org.apache.commons.collections4.Predicate<T>)(predicate));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[259],"tindex":"de144cff-3e8a-11e6-9e63-89a6cf9760c7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:577","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key4 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4, key5);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4, key5))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key4"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[260],"tindex":"de147410-3e8a-11e6-9e63-85cc73f23c5a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[261],"tindex":"de147411-3e8a-11e6-9e63-319604a7aed9","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,8,9,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"de147412-3e8a-11e6-9e63-414c3d42b194","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:60","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedBag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedBag<E>(bag , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"de149b23-3e8a-11e6-9e63-8fd18bebad24","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"de149b24-3e8a-11e6-9e63-8dfe0e20f06e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:154","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return (indexOf(value)) != (-1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[376,377,79,378,379,380,381,382,383],"tindex":"de149b25-3e8a-11e6-9e63-2b42eb25527a","method":{"position":"org.apache.commons.collections4.map.LRUMap:296","type":"CtMethodImpl","sourcecode":"protected void reuseMapping(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((entry.getValue()) == null) {\n        {\n            try {\n                final int int = hashIndex(entry.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = tmp[removeIndex];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n                while ((loop != entry) && (loop != null)) {\n                    previous = loop;\n                    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                }\n                if (loop == null) {\n                    throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][removeIndex])) + \" previous=\") + previous) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                } \n                (int)++;\n                removeEntry(entry, removeIndex, previous);\n                reuseEntry(entry, hashIndex, hashCode, key, value);\n                addEntry(entry, hashIndex);\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + entry) + \" entryIsHeader=\") + (entry == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[384,385,386],"tindex":"de14c236-3e8a-11e6-9e63-af2071fb480f","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"de14c237-3e8a-11e6-9e63-cf319e7d2b31","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"de14c238-3e8a-11e6-9e63-63f7384078b2","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[55,56,57,58,59,387,61,62,63,64,74,75],"tindex":"de14c239-3e8a-11e6-9e63-9d78fd0a64bc","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"de14e94a-3e8a-11e6-9e63-fb51bc2306d2","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"de14e94b-3e8a-11e6-9e63-f57ea9303375","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (!(o instanceof java.util.Map.Entry)) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n                    final K K = entry.getKey();\n                    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                        return false;\n                    } \n                    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n                    return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,197,220,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,238,244,458,175,178,459,460,461,462,463,464,465,466],"tindex":"de14e94c-3e8a-11e6-9e63-6fc99396c7cc","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[],"tindex":"de14e94d-3e8a-11e6-9e63-cfb09cd2502e","method":{"position":"org.apache.commons.collections4.ListUtils:318","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> retainAll(final java.util.Collection<E> collection, final java.util.Collection<?> retain) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(collection.size(), retain.size()));\n            for (final E E : collection) {\n                if (retain.contains(obj)) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getRight(dataElement)) == node"},"failures":[12,13,14,15,16,17,18,19,20,21],"tindex":"de14e94e-3e8a-11e6-9e63-83f7650a1879","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[467],"tindex":"de15105f-3e8a-11e6-9e63-91e52fe49702","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"de151060-3e8a-11e6-9e63-535cab715b72","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2111","type":"CtMethodImpl","sourcecode":"public K remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"de151061-3e8a-11e6-9e63-59be91c5a7ae","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:81","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformedCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.collection.TransformedCollection<E> org.apache.commons.collections4.collection.TransformedCollection<E> = new org.apache.commons.collections4.collection.TransformedCollection<E>(collection , transformer);\n            if ((collection.size()) > 0) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(collection.toArray()));\n                collection.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"de151062-3e8a-11e6-9e63-2b1506da3220","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <E>org.apache.commons.collections4.Closure<E>[] copy(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Closure<E>[])(closures.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555],"tindex":"de153773-3e8a-11e6-9e63-cdb016cd3ffd","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[556,557],"tindex":"de153774-3e8a-11e6-9e63-d37e4062e23f","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if (collection == null) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : collection) {\n                if (!(remove.contains(obj))) {\n                    list.add(obj);\n                } \n            }\n            return list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[558],"tindex":"de153775-3e8a-11e6-9e63-8b40625c892d","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[559],"tindex":"de153776-3e8a-11e6-9e63-7da93e9b8528","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[560],"tindex":"de153777-3e8a-11e6-9e63-637bf1b1f0cf","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"de153778-3e8a-11e6-9e63-d9ea69c75f3a","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"de155e89-3e8a-11e6-9e63-d1c318101daa","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:115","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"de155e8a-3e8a-11e6-9e63-8f90bff54886","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[561],"tindex":"de155e8b-3e8a-11e6-9e63-fdef634081f2","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[],"tindex":"de155e8c-3e8a-11e6-9e63-4599b475ff8c","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate2 == null) || (predicate2 == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n                    return onePredicate;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"de155e8d-3e8a-11e6-9e63-ef0aac8ee4a2","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[562],"tindex":"de15859e-3e8a-11e6-9e63-67cd42a951eb","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[563],"tindex":"de15859f-3e8a-11e6-9e63-fb9e21241b02","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[564,259],"tindex":"de1585a0-3e8a-11e6-9e63-6dd4094b340b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"de1585a1-3e8a-11e6-9e63-f94aa548e619","method":{"position":"org.apache.commons.collections4.map.SingletonMap:189","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (isEqualKey(key)) {\n                return V;\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[565],"tindex":"de15acb2-3e8a-11e6-9e63-75726b5aae82","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"Map is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"de15acb3-3e8a-11e6-9e63-c59786d34ace","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"de15acb4-3e8a-11e6-9e63-b7ba5eb1ddaf","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"de15acb5-3e8a-11e6-9e63-27fd2804b86b","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"de15acb6-3e8a-11e6-9e63-87bdd16247b9","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[566],"tindex":"de15d3c7-3e8a-11e6-9e63-85875bde71d1","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[562],"tindex":"de15d3c8-3e8a-11e6-9e63-5f3d2ac51283","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"de15d3c9-3e8a-11e6-9e63-8186fa50280d","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[587,2,588,589,590],"tindex":"de15d3ca-3e8a-11e6-9e63-0792db43a3ad","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[591,592,588,267,271,9],"tindex":"de15d3cb-3e8a-11e6-9e63-b3fc03092e52","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count == 1) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[593],"tindex":"de15d3cc-3e8a-11e6-9e63-b7fd57f98488","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"de15fadd-3e8a-11e6-9e63-55fee4069697","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return java.util.Set<E>.containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[594,595,596,597,598,599,600,0,601,602,603,604,605,606,1,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,3,4,625,626,627,628,629,630,631,632,633,634,635,636,637,6,7,638,639,640,641,642,285,286,287,288,289,290,291,292,8,9,293,294,295,296,297,643,644,645,646,647,648,649,650,10,11,651,652,653,654,655],"tindex":"de15fade-3e8a-11e6-9e63-ad71cef0d5b5","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtBinaryOperatorImpl","sourcecode":"inputCollection != null"},"failures":[656,261,657],"tindex":"de15fadf-3e8a-11e6-9e63-b93dbfd2c0c0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1037","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.lang.Iterable<? extends I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (inputCollection != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (inputCollection != null) {\n                return org.apache.commons.collections4.CollectionUtils.collect(inputCollection.iterator(), transformer, outputCollection);\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputCollection":"inputCollection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:871","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"de15fae0-3e8a-11e6-9e63-dd85f354a427","method":{"position":"org.apache.commons.collections4.IteratorUtils:853","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration) {\n    if (enumeration == null) {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[564,259],"tindex":"de15fae1-3e8a-11e6-9e63-1ba75c75c22b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:246","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((multi.size()) == 2) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key1 != null) && (key2.equals(multi.getKey(1)))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[658,659,660,661,662,591,592,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,263,267,271,274,681,682,683],"tindex":"de1621f2-3e8a-11e6-9e63-0fab8aba783a","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[684],"tindex":"de1621f3-3e8a-11e6-9e63-43d21d50906c","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[685],"tindex":"de1621f4-3e8a-11e6-9e63-9b592f017da9","method":{"position":"org.apache.commons.collections4.TransformerUtils:149","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> asTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[686,687],"tindex":"de1621f5-3e8a-11e6-9e63-e7583d4f31f4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"de164906-3e8a-11e6-9e63-85a18d2399dc","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"de164907-3e8a-11e6-9e63-c7f097612150","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[688],"tindex":"de164908-3e8a-11e6-9e63-d7730156be50","method":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformerPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformerPredicate<T>(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,406,707,708,709,710,575,576,577,578,579,580,581,582,583,584,585,586,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,408,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750],"tindex":"de164909-3e8a-11e6-9e63-83f3efe29483","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map<?, ?>) == false) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[751],"tindex":"de16490a-3e8a-11e6-9e63-0de243b76695","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[752,753,754,755],"tindex":"de16701b-3e8a-11e6-9e63-93a8b411ae2a","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[593],"tindex":"de16701c-3e8a-11e6-9e63-8dd5c0ea2d15","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"de16701d-3e8a-11e6-9e63-2d68bf032412","method":{"position":"org.apache.commons.collections4.BagUtils:149","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.CollectionBag.collectionBag(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"de16701e-3e8a-11e6-9e63-39501c0ae306","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[756],"tindex":"de16701f-3e8a-11e6-9e63-ff8acf19b15d","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[757],"tindex":"de167020-3e8a-11e6-9e63-ab7c708e97f6","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[758],"tindex":"de167021-3e8a-11e6-9e63-0d38026cb3c5","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:100","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"de169732-3e8a-11e6-9e63-970be2ba8b4e","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[685],"tindex":"de169733-3e8a-11e6-9e63-a102467c27a2","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1757","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"de169734-3e8a-11e6-9e63-6b5b9a8409ab","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,401,777,778,779,780,781,782,783,784,785,786,787,788,402,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,260,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,12,827,828,829,13,830,831,832,833,834,835,836,837,838,14,839,840,15,16,841,842,17,18,19,20,21],"tindex":"de169735-3e8a-11e6-9e63-8b5e70c47c24","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:734","type":"CtMethodImpl","sourcecode":"private static boolean isRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (node != null) && (node.isRed(dataElement));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"de169736-3e8a-11e6-9e63-6145a3a9a14c","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[843,844,845,846],"tindex":"de169737-3e8a-11e6-9e63-739546a4b4a4","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"de169738-3e8a-11e6-9e63-874ba07b8e16","method":{"position":"org.apache.commons.collections4.SetUtils:192","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[847],"tindex":"de16be49-3e8a-11e6-9e63-33745ee29eb6","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[848],"tindex":"de16be4a-3e8a-11e6-9e63-07554df86318","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key != null) {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[849,850,851],"tindex":"de16be4b-3e8a-11e6-9e63-11a64d93781c","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[763,764,802,803,827,828],"tindex":"de16be4c-3e8a-11e6-9e63-ad43f2c4db66","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[564,259,852,853],"tindex":"de16e55d-3e8a-11e6-9e63-fb25432556cd","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[854],"tindex":"de16e55e-3e8a-11e6-9e63-c3a4291f8a47","method":{"position":"org.apache.commons.collections4.ClosureUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[49,50,51,52,68,69,70,73,95,96,97,98,111,112,113,114,129,130,131,132,147,148,149,152,168,169,170,171,184,185,186,187],"tindex":"de16e55f-3e8a-11e6-9e63-4fbbf88fa350","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:862","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[855],"tindex":"de16e560-3e8a-11e6-9e63-177b39c2ee0d","method":{"position":"org.apache.commons.collections4.list.TransformedList:127","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            return getList().lastIndexOf(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[856,857,858,859],"tindex":"de16e561-3e8a-11e6-9e63-43e038a55287","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:208","type":"CtMethodImpl","sourcecode":"public K previousKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.util.List<K>.indexOf(key);\n            if (index > 0) {\n                return java.util.List<K>.get((index - 1));\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl","sourcecode":"key5 != null"},"failures":[564,259,852,853],"tindex":"de170c72-3e8a-11e6-9e63-115c645a0c89","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"de170c73-3e8a-11e6-9e63-293a6c773691","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                        put(entry.getKey(), entry.getValue());\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263407873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}