{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":121,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":263,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":163,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":368,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":26,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":195,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":326,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":65,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":8,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":129,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":304,"org.apache.commons.collections4.CollectionUtilsTest.collect":166,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":317,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":329,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":143,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":55,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":350,"org.apache.commons.collections4.CollectionUtilsTest.get":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":136,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":89,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":307,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":69,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":289,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":67,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":38,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":46,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":157,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":34,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":380,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":146,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":145,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":323,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":139,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":335,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":316,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":83,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":261,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":30,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":28,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":87,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":275,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":245,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":117,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":252,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":21,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":137,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":394,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":247,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":298,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":185,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":311,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":267,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":377,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":152,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":155,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":181,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":126,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":17,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":306,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":189,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":318,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":148,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":162,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":64,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":223,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":27,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":50,"org.apache.commons.collections4.map.LRUMapTest.testClone":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":333,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":178,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":192,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":229,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":300,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":274,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":373,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":346,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":15,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":194,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":132,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":29,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":48,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":118,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":100,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":127,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":199,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":42,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":120,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":173,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":32,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":213,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":212,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":211,"org.apache.commons.collections4.map.LRUMapTest.testReset":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":156,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":286,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":313,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":115,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":241,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":182,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":232,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":243,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":233,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":228,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":330,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":114,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":371,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":376,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":332,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":355,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":58,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":297,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":191,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":253,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":248,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":284,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":342,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":386,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":238,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":88,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":85,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":201,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":244,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":369,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":63,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":171,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":1,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":379,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":6,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":124,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":272,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":170,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":31,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":78,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":343,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":57,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":39,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":264,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":310,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":203,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":86,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":257,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":334,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":283,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":356,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":374,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":102,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":3,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":345,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":175,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":92,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":93,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":36,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":314,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":101,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":113,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":359,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":165,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":184,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":340,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":324,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":226,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":361,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":349,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":384,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":339,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":365,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":74,"org.apache.commons.collections4.map.LRUMapTest.testLRU":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":68,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":281,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":207,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":84,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":123,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":167,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":208,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":291,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":302,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":110,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":205,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":172,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":322,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":81,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":331,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":204,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":45,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":285,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":7,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":198},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[0,1],"tindex":"c01b9cd8-2e82-11e6-ae89-e98e56d9bd19","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[2],"tindex":"c01c6029-2e82-11e6-ae89-678f66cefa4a","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final org.apache.commons.collections4.Transformer<? super T, ? extends T>... transformers) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((transformers.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(transformers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"c01c873a-2e82-11e6-ae89-ab77bd53f484","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[3],"tindex":"c01c873b-2e82-11e6-ae89-69c48d6a91cb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"c01cae4c-2e82-11e6-ae89-85bd246149c9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"c01cae4d-2e82-11e6-ae89-9bb8a6b0c1dc","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:481","type":"CtMethodImpl","sourcecode":"protected void addNodeAfter(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = createNode(value);\n            addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"c01cd55e-2e82-11e6-ae89-5b448ade9a7c","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[4,5],"tindex":"c01cfc6f-2e82-11e6-ae89-ef1578dd86f5","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (collection == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[],"tindex":"c01cfc70-2e82-11e6-ae89-e7f5f3680e7f","method":{"position":"org.apache.commons.collections4.list.GrowthList:69","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.GrowthList<E> growthList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.GrowthList<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"c01d2381-2e82-11e6-ae89-d534e1a65886","method":{"position":"org.apache.commons.collections4.ClosureUtils:255","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> ifClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> trueClosure, final org.apache.commons.collections4.Closure<? super E> falseClosure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(predicate, trueClosure, falseClosure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) == null"},"failures":[6],"tindex":"c01d2382-2e82-11e6-ae89-49a80635323e","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"c01d4a93-2e82-11e6-ae89-cd85f662ba9c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (null == value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"c01d4a94-2e82-11e6-ae89-35b3458625ca","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:352","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.util.Collection<V> getCollection(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return ((java.util.Collection<V>)(decorated().get(key)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[62,63],"tindex":"c01d71a5-2e82-11e6-ae89-c573e2ad07af","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[64,65],"tindex":"c01d71a6-2e82-11e6-ae89-c392ab1eacb3","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtInvocationImpl","sourcecode":"currentNode.isRightChild(dataElement)"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"tindex":"c01d98b7-2e82-11e6-ae89-73d9b42e0f4a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:879","type":"CtMethodImpl","sourcecode":"private void doRedBlackInsert(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> insertedNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (insertedNode.isRightChild(dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = insertedNode;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(currentNode, dataElement);\n            while (((currentNode != null) && (currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]))) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(currentNode.getParent(dataElement), dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isRightChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateLeft(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                } else {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateRight(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateLeft(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()], dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"insertedNode","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"c01de6d8-2e82-11e6-ae89-6b0ff4b034d5","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:504","type":"CtMethodImpl","sourcecode":"protected void nodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            if ((node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) && (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>))) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                boolean = false;\n            } else if (node == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n                org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n                boolean = true;\n                (int)--;\n            } else {\n                boolean = false;\n                boolean = false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[163,164,165],"tindex":"c01e34f9-2e82-11e6-ae89-dfbbaa8ef95d","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[3],"tindex":"c01e34fa-2e82-11e6-ae89-dd6ba536b333","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[11,23],"tindex":"c01e5c0b-2e82-11e6-ae89-e745fd50aa5e","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[166],"tindex":"c01e831c-2e82-11e6-ae89-8d281cdf8e91","method":{"position":"org.apache.commons.collections4.CollectionUtils:1014","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.util.Iterator<I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.CollectionUtils.collect(inputIterator, transformer, new java.util.ArrayList<O>());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"tindex":"c01e831d-2e82-11e6-ae89-a5fce9948abd","method":{"position":"org.apache.commons.collections4.map.LRUMap:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) {\n    if (hashIndex == 0) {\n        {\n            if (isFull()) {\n                org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                boolean boolean = false;\n                if (boolean) {\n                    while ((reuse != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (reuse != null)) {\n                        if (removeLRU(reuse)) {\n                            removeLRUEntry = true;\n                            break;\n                        } \n                        reuse = reuse.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                    }\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                } else {\n                    removeLRUEntry = removeLRU(reuse);\n                }\n                if (removeLRUEntry) {\n                    if (reuse == null) {\n                        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + key) + \" value=\") + value) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n                    } \n                    reuseMapping(reuse, hashIndex, hashCode, key, value);\n                } else {\n                    super.addMapping(hashIndex, hashCode, key, value);\n                }\n            } else {\n                super.addMapping(hashIndex, hashCode, key, value);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"hashIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"tindex":"c01ed13e-2e82-11e6-ae89-95a39d8ad436","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:219","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (value2 == null) {\n        {\n            return value1 == value2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"value2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[7],"tindex":"c01ed13f-2e82-11e6-ae89-8d3cadc737d9","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (elements == null) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"elements"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[243,244,245,246],"tindex":"c01ed140-2e82-11e6-ae89-53f3f8c683b8","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:168","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().remove(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[],"tindex":"c01ed141-2e82-11e6-ae89-6b0a1811a472","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:97","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"c01ef852-2e82-11e6-ae89-1718ccbbfbf5","method":{"position":"org.apache.commons.collections4.ListUtils:147","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> sum(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list1 instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.ListUtils.subtract(org.apache.commons.collections4.ListUtils.union(list1, list2), org.apache.commons.collections4.ListUtils.intersection(list1, list2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[247,248,249],"tindex":"c01ef853-2e82-11e6-ae89-d581e97ac740","method":{"position":"org.apache.commons.collections4.CollectionUtils:1212","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.lang.Iterable<T> iterable, final int index) {\n    if ((index - index) > (index - index)) {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            if (iterable instanceof java.util.List<?>) {\n                return ((java.util.List<T>)(iterable)).get(index);\n            } \n            return org.apache.commons.collections4.CollectionUtils.get(iterable.iterator(), index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"index","end2":"index","end1":"index","start2":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[250],"tindex":"c01ef854-2e82-11e6-ae89-911d4449f3c6","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[251],"tindex":"c01ef855-2e82-11e6-ae89-75e3081afbf8","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (array == null) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[252,253],"tindex":"c01f1f66-2e82-11e6-ae89-0bf00704df57","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[0,1],"tindex":"c01f1f67-2e82-11e6-ae89-bb74d75e7e81","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[],"tindex":"c01f1f68-2e82-11e6-ae89-c3b6b78f4e28","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:203","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O> coerce(final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        {\n            return ((org.apache.commons.collections4.Transformer<I, O>)(transformer));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[254],"tindex":"c01f4679-2e82-11e6-ae89-abc6fe3ec212","method":{"position":"org.apache.commons.collections4.SplitMapUtils:100","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> t) {\n    if (t instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"t"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[255,256,257,258,259],"tindex":"c01f467a-2e82-11e6-ae89-d914d600b770","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:236","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        {\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    removeNode(node);\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[260,261],"tindex":"c01f467b-2e82-11e6-ae89-3de1cf31440f","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:186","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[262,263],"tindex":"c01f6d8c-2e82-11e6-ae89-bbd3fdc9b452","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"c01f6d8d-2e82-11e6-ae89-ff5151ef64c0","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"tindex":"c01f949e-2e82-11e6-ae89-cb43b270346f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[295],"tindex":"c01f949f-2e82-11e6-ae89-03dafe51fa83","method":{"position":"org.apache.commons.collections4.map.SingletonMap:498","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Map.Entry) {\n        {\n            return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319],"tindex":"c01f94a0-2e82-11e6-ae89-5baae40c943a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if ((o instanceof java.util.List) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[320],"tindex":"c01fbbb1-2e82-11e6-ae89-699416c2527e","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[321,322,323],"tindex":"c01fbbb2-2e82-11e6-ae89-8bc815e48099","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[324,325],"tindex":"c01fbbb3-2e82-11e6-ae89-5fdf82cbd872","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[326,327,257,328,256,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,258,384,385,386,387,388,389,390,391],"tindex":"c01fe2c4-2e82-11e6-ae89-39d2003e2961","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:126","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int fromIndex) {\n    if (fromIndex > 0) {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.this , fromIndex);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"c01fe2c5-2e82-11e6-ae89-f3d14a3d1054","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"c01fe2c6-2e82-11e6-ae89-8b566379912c","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"c02009d7-2e82-11e6-ae89-b7608b38eae8","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:350","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeInserted(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeInserted(node);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[392],"tindex":"c02009d8-2e82-11e6-ae89-55c26b0739d7","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:67","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n            } \n            if ((closures.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[closures.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : closures) {\n                cmds[(i++)] = closure;\n            }\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[393,247,394,248],"tindex":"c02030e9-2e82-11e6-ae89-f961dee30295","method":{"position":"org.apache.commons.collections4.CollectionUtils:1176","type":"CtMethodImpl","sourcecode":"public static <T>T get(final java.util.Iterator<T> iterator, final int index) {\n    if (index < index) {\n        {\n            int int = index;\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(i);\n            while (iterator.hasNext()) {\n                i--;\n                if (i == (-1)) {\n                    return iterator.next();\n                } \n                iterator.next();\n            }\n            throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtBinaryOperatorImpl","sourcecode":"(current.parent.right) == (current.parent)"},"failures":[],"tindex":"c02030ea-2e82-11e6-ae89-275b1295602e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (entry == (current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"entry","current":"entry","right":"entry"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"c02057fb-2e82-11e6-ae89-a1d57be9522c","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:76","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            final org.apache.commons.collections4.bag.TransformedBag<E> org.apache.commons.collections4.bag.TransformedBag<E> = new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n            if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(bag.toArray()));\n                bag.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"c0207f0c-2e82-11e6-ae89-f9ce30c81fd7","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[395],"tindex":"c0207f0d-2e82-11e6-ae89-672a725d9baa","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"c020a61e-2e82-11e6-ae89-992682518853","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[],"tindex":"c020a61f-2e82-11e6-ae89-0765f5d2aa9c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"offsetInBits"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":56,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}