{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":91,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":15,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":269,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":103,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":428,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":613,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":633,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":473,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":622,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":365,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":545,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":541,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":333,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":456,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":239,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":240,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":455,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":461,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":190,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":580,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":128,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":204,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":351,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":307,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":54,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":196,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":197,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":88,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":674,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":696,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":502,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":566,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":7,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":75,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":138,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorIsSerializable":379,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":612,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":669,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":160,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":500,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":385,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":186,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":124,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":132,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":431,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":430,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":646,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":463,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":302,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":40,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":506,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":578,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":697,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":258,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":139,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":218,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":266,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":702,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":71,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":328,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":721,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":370,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":731,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":422,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":571,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":692,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsSelfHashCode":384,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":207,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":208,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":485,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":206,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":703,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":514,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":634,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":238,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":200,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":391,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":727,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":42,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":667,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":728,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":643,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":301,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":111,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":146,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":44,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":670,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":632,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":487,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":249,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":183,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":564,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":180,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":419,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":474,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":150,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":596,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":490,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":279,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":465,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":79,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":236,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":224,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":629,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":1,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":65,"org.apache.commons.collections4.map.CompositeMapTest.testGet":234,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":178,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":66,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":694,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":198,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":483,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":746,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":664,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":364,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":714,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":471,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":595,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":472,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":661,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":663,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":720,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":221,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":434,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":84,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":106,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":521,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":16,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":504,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":318,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":567,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":317,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":259,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":170,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":213,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":357,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":642,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":3,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":195,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":348,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":201,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":468,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":329,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":216,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":584,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":716,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":734,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":187,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":499,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":690,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":47,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":362,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":349,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":24,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":544,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":660,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":598,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":672,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":420,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":587,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":708,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":166,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":649,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":650,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":651,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":359,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":736,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":211,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":713,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":576,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":718,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":86,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":230,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":295,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":550,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":486,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":270,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":392,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":87,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":593,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":346,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":559,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":666,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":582,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":557,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":733,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":107,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":284,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":558,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":536,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":353,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":109,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":375,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":323,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":480,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":228,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":378,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":501,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":508,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":271,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":245,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":145,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":407,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":193,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":712,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":336,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":104,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":743,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":360,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":511,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":680,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":45,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":543,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":25,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":12,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":89,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":179,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":97,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":484,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":744,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":226,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":11,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":98,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":383,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":294,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":482,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":647,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":220,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":181,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":283,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":534,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":50,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":628,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":289,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":288,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":136,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":682,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":513,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":217,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":488,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":371,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":498,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":608,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalEmptyCollectionExists":588,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":561,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":176,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSimpleSerialization":382,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":264,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":315,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":306,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":574,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":130,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":668,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":5,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":439,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":589,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":49,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":93,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":620,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":722,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":192,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":316,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":63,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":291,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":495,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":235,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":470,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":659,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":675,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":568,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":96,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":101,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":26,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":509,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":553,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":90,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":516,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":327,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":175,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":481,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":693,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":406,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":617,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":251,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":268,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":8,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":601,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":426,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":300,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":153,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":59,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":243,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":440,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":400,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":549,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":57,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":635,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":388,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":619,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":676,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":686,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":112,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":252,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":92,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":253,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":518,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":606,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":369,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":657,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":23,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":396,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":726,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":304,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":515,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":597,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":173,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":429,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":454,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":151,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":671,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":677,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":324,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":148,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":583,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":707,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":64,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsSelfHashCode":591,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":653,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":296,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":453,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":273,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":658,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":81,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":477,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":599,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":345,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":491,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":492,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":381,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":565,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":131,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":475,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":706,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":450,"org.apache.commons.collections4.SetUtilsTest.testHashCode":233,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":140,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":28,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":615,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":73,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":614,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":185,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":263,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":411,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":442,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":280,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":410,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":539,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":168,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":710,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":134,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":532,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":531,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":522,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":689,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":83,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":496,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":528,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":527,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":530,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":529,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":489,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":524,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":373,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":441,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":540,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":526,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":525,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":51,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":413,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":505,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":248,"org.apache.commons.collections4.CollectionUtilsTest.isFull":555,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":579,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":602,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":261,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":673,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":2,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":110,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":149,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":547,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":494,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":493,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":700,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":33,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":341,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":630,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":648,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":537,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":127,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":709,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":343,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":372,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":390,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":425,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":704,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":435,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":165,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":417,"org.apache.commons.collections4.map.FixedSizeMapTest.testCanonicalFullCollectionExists":586,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":551,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":143,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":409,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":705,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":35,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":355,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":155,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":581,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":119,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":433,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":376,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":398,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":113,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":169,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":135,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":29,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":432,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":156,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":254,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":618,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":256,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":313,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":30,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":497,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":408,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":164,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":374,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":535,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":747,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":387,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":687,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":202,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":174,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEmptyListSort":377,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":418,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":299,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":242,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":719,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":729,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":507,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":225,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":246,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":560,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":604,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":685,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":605,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":725,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":603,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":423,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":735,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":741,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":203,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":39,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":740,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":520,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":655,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":67,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":118,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":265,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":681,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":637,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":189,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":592,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":479,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":14,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":577,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":137,"org.apache.commons.collections4.map.LRUMapTest.testLRU":277,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":683,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":133,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":738,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":32,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":695,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":656,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":237,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":48,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":78,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":18,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":590,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":636,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":691,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":325,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":724,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":94,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":105,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":250,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":538,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":56,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":569,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":55,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":114,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":278,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":415,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":446,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":43,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":147,"org.apache.commons.collections4.map.FixedSizeMapTest.testMakeMap":570,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":627,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":22,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":395,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":184,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":70,"org.apache.commons.collections4.map.FixedSizeMapTest.testEmptyMapCompatibility":573,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":344,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":625,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":20,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":126,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":31,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":542,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":154,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":144,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":609,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":645,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":572,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":711,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":37,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":585,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":701,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":100,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":287,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":361,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":405,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":389,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":742,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":458,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":356,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":623,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":247,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":503},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"4577b91b-2eae-11e6-9fd3-d5ff32b6e9e5","method":{"position":"org.apache.commons.collections4.list.PredicatedList:94","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[29],"tindex":"4578a37c-2eae-11e6-9fd3-07b5af971d84","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[30,31,32,33,34,35,36,37,38],"tindex":"4578a37d-2eae-11e6-9fd3-8b2ae2b731b9","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:488","type":"CtMethodImpl","sourcecode":"private void removeIfExpired(final java.lang.Object key, final long now) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = java.util.Map<java.lang.Object, java.lang.Long>.get(key);\n            if (isExpired(now, expirationTimeObject)) {\n                remove(key);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[39],"tindex":"45793fbe-2eae-11e6-9fd3-5f1fe5d7482a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"457966cf-2eae-11e6-9fd3-b1dfb85ac90d","method":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseMap) {\n    if (reverseMap instanceof org.apache.commons.collections4.OrderedMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualTreeBidiMap<V, K>(normalMap , reverseMap , inverseMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"reverseMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[40],"tindex":"457966d0-2eae-11e6-9fd3-73bfc8c10d01","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"45798de1-2eae-11e6-9fd3-f7655c3349de","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[73,74],"tindex":"45798de2-2eae-11e6-9fd3-27410d3dc947","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index < 0) {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"4579b4f3-2eae-11e6-9fd3-4fccd8581ab9","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[91],"tindex":"4579dc04-2eae-11e6-9fd3-9fd9079cf53d","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[92],"tindex":"457a0315-2eae-11e6-9fd3-9326d1a9d922","method":{"position":"org.apache.commons.collections4.BagUtils:116","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> predicatedBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"457a2a26-2eae-11e6-9fd3-f34e7644478c","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"457a5137-2eae-11e6-9fd3-99339f046966","method":{"position":"org.apache.commons.collections4.MapUtils:591","type":"CtMethodImpl","sourcecode":"public static <K>boolean getBooleanValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(org.apache.commons.collections4.MapUtils.getBoolean(map, key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"457a5138-2eae-11e6-9fd3-35c19e8fb683","method":{"position":"org.apache.commons.collections4.IteratorUtils:840","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[93,94],"tindex":"457a7849-2eae-11e6-9fd3-33cb46db8305","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[95,91,96,97],"tindex":"457a784a-2eae-11e6-9fd3-4df8eaed69e5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[98,99,100,101],"tindex":"457a9f5b-2eae-11e6-9fd3-b139856845f9","method":{"position":"org.apache.commons.collections4.list.TransformedList:137","type":"CtMethodImpl","sourcecode":"public void add(final int index, E object) {\n    if (index < 0) {\n        {\n            object = transform(object);\n            getList().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[],"tindex":"457a9f5c-2eae-11e6-9fd3-81d33f08605f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1086","type":"CtMethodImpl","sourcecode":"public static <T>boolean addIgnoreNull(final java.util.Collection<T> collection, final T object) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            return (object != null) && (collection.add(object));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"457a9f5d-2eae-11e6-9fd3-e9f3cbd2fdcb","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:332","type":"CtMethodImpl","sourcecode":"public V removeMultiKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        {\n            final int int = hash(key1, key2, key3);\n            final int int = decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    final V V = entry.getValue();\n                    decorated().removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"457ac66e-2eae-11e6-9fd3-6b9dab9b9952","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[102,103,104,105,87],"tindex":"457ac66f-2eae-11e6-9fd3-29994ef1a066","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl","sourcecode":"classToInstantiate == null"},"failures":[],"tindex":"457b3ba0-2eae-11e6-9fd3-1fd718b7a2c1","method":{"position":"org.apache.commons.collections4.FactoryUtils:139","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(classToInstantiate, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[106,107],"tindex":"457b3ba1-2eae-11e6-9fd3-abe952e7a068","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(bag));\n                return tmpBag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[108],"tindex":"457b62b2-2eae-11e6-9fd3-9b0362235184","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[109],"tindex":"457b62b3-2eae-11e6-9fd3-0b108196a274","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[110],"tindex":"457b89c4-2eae-11e6-9fd3-d572737d593f","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[111],"tindex":"457b89c5-2eae-11e6-9fd3-99c855752a7a","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[112],"tindex":"457bb0d6-2eae-11e6-9fd3-b110d49b7b12","method":{"position":"org.apache.commons.collections4.CollectionUtils:1307","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map.Entry<K, V> get(final java.util.Map<K, V> map, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.CollectionUtils.checkIndexBounds(index);\n            return org.apache.commons.collections4.CollectionUtils.get(map.entrySet(), index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[39],"tindex":"457bb0d7-2eae-11e6-9fd3-9dd2cfd896b7","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[113],"tindex":"457bb0d8-2eae-11e6-9fd3-37aceb76eff1","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[114,115,116,117,118,119],"tindex":"457bb0d9-2eae-11e6-9fd3-75e7be61cb89","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:78","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[120],"tindex":"457bd7ea-2eae-11e6-9fd3-0d0ba1ff78f3","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[121,122],"tindex":"457bd7eb-2eae-11e6-9fd3-311f21f7ef56","method":{"position":"org.apache.commons.collections4.list.PredicatedList:106","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[123],"tindex":"457bd7ec-2eae-11e6-9fd3-d7e502f913d1","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[124,125,126,127],"tindex":"457bfefd-2eae-11e6-9fd3-3999e4cfc136","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"457bfefe-2eae-11e6-9fd3-0b364200ca2a","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"457bfeff-2eae-11e6-9fd3-3f847e143494","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"457bff00-2eae-11e6-9fd3-67b155d657ec","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1544","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(entry.getKey());\n            if ((node != null) && (node.getValue().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[128,129],"tindex":"457c2611-2eae-11e6-9fd3-1f10af963911","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[130],"tindex":"457c2612-2eae-11e6-9fd3-23b0b9ed005f","method":{"position":"org.apache.commons.collections4.ClosureUtils:129","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> whileClosure(final org.apache.commons.collections4.Predicate<? super E> predicate, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"457c4d23-2eae-11e6-9fd3-fd31955ea2e2","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key3"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[131,132,133,124,134,125,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,126,173,127,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223],"tindex":"457c4d24-2eae-11e6-9fd3-39d112bbc636","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[224],"tindex":"457c9b45-2eae-11e6-9fd3-6db7749b2535","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"457c9b46-2eae-11e6-9fd3-b1303694a227","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map instanceof org.apache.commons.collections4.IterableMap) {\n                {\n                    return java.util.Collections.synchronizedMap(map);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[],"tindex":"457cc257-2eae-11e6-9fd3-1144f5e59e02","method":{"position":"org.apache.commons.collections4.CollectionUtils:920","type":"CtMethodImpl","sourcecode":"public static <O, R extends java.util.Collection<? super O>>R select(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate, final R outputCollection) {\n    if ((inputCollection != null) && (predicate != null)) {\n        {\n            if ((inputCollection != null) && (predicate != null)) {\n                for (final O O : inputCollection) {\n                    if (predicate.evaluate(item)) {\n                        outputCollection.add(item);\n                    } \n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"457cc258-2eae-11e6-9fd3-63861197bc0e","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndTransformers == null"},"failures":[225],"tindex":"457cc259-2eae-11e6-9fd3-2b9fff399105","method":{"position":"org.apache.commons.collections4.TransformerUtils:323","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchMapTransformer(final java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> objectsAndTransformers) {\n    if (objectsAndTransformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndTransformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n            } \n            final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = objectsAndTransformers.remove(null);\n            final int int = objectsAndTransformers.size();\n            final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] org.apache.commons.collections4.Transformer<? super I, ? extends O>[] = new org.apache.commons.collections4.Transformer[size];\n            final org.apache.commons.collections4.Predicate<I>[] org.apache.commons.collections4.Predicate<I>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : objectsAndTransformers.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(entry.getKey());\n                trs[(i++)] = entry.getValue();\n            }\n            return org.apache.commons.collections4.TransformerUtils.<I, O>switchTransformer(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndTransformers":"objectsAndTransformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"457ce96a-2eae-11e6-9fd3-33bd3ad10550","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    if (transform == null) {\n                        throw new java.lang.NullPointerException(\"Transformer must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"457ce96b-2eae-11e6-9fd3-050882a371b1","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[123],"tindex":"457d107c-2eae-11e6-9fd3-3b8c566eca0b","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[226,227],"tindex":"457d107d-2eae-11e6-9fd3-b5325818aae8","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"457d107e-2eae-11e6-9fd3-8519d8a88b68","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (iterator == null) {\n                        throw new java.lang.NullPointerException(\"Iterator must not be null\");\n                    } \n                    if (transform == null) {\n                        throw new java.lang.NullPointerException(\"Transformer must not be null\");\n                    } \n                    return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[228],"tindex":"457d107f-2eae-11e6-9fd3-8305524a9ef9","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:55","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.BidiMap<K, V> unmodifiableBidiMap(final org.apache.commons.collections4.BidiMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[229,230],"tindex":"457d3790-2eae-11e6-9fd3-0b9f53e20c2d","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"457d3791-2eae-11e6-9fd3-3999c563dc83","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"457d3792-2eae-11e6-9fd3-41f925997dfa","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl","sourcecode":"collectionFactory == null"},"failures":[],"tindex":"457d5ea3-2eae-11e6-9fd3-0b15f110eb58","method":{"position":"org.apache.commons.collections4.MapUtils:1474","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.MultiValueMap.multiValueMap(map, collectionFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[],"tindex":"457d5ea4-2eae-11e6-9fd3-e93abb33d3fb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2031","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (!(o instanceof java.lang.Comparable)) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            if ((node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()))) {\n                removeEntry(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[231],"tindex":"457d5ea5-2eae-11e6-9fd3-bd7dc8ba5a4e","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:331","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Set<E> createSetBasedOnList(final java.util.Set<E> set, final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            java.util.Set<E> java.util.Set<E>;\n            if (set.getClass().equals(java.util.HashSet.java.util.HashSet.java.lang.Class)) {\n                subSet = new java.util.HashSet<E>(list.size());\n            } else {\n                try {\n                    subSet = set.getClass().newInstance();\n                } catch (final java.lang.InstantiationException ie) {\n                    subSet = new java.util.HashSet<E>();\n                } catch (final java.lang.IllegalAccessException iae) {\n                    subSet = new java.util.HashSet<E>();\n                }\n            }\n            subSet.addAll(list);\n            return subSet;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"457d85b6-2eae-11e6-9fd3-bfa02c93051b","method":{"position":"org.apache.commons.collections4.MapUtils:566","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key, final java.util.Map<?, ?> defaultValue) {\n    if (map != null) {\n        {\n            java.util.Map<?, ?> java.util.Map<?, ?> = org.apache.commons.collections4.MapUtils.getMap(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[232],"tindex":"457d85b7-2eae-11e6-9fd3-f52bc1df0ef7","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[233],"tindex":"457d85b8-2eae-11e6-9fd3-5b645d4caf87","method":{"position":"org.apache.commons.collections4.SetUtils:140","type":"CtMethodImpl","sourcecode":"public static <T>int hashCodeForSet(final java.util.Collection<T> set) {\n    if (set == null) {\n        {\n            if (set == null) {\n                return 0;\n            } \n            int int = 0;\n            for (final T T : set) {\n                if (obj != null) {\n                    hashCode += obj.hashCode();\n                } \n            }\n            return hashCode;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[234,235,236,237],"tindex":"457dacc9-2eae-11e6-9fd3-fd17e2c2f53c","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[238,239,240,241,242],"tindex":"457dacca-2eae-11e6-9fd3-2bda5e72fee2","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[243,244,245,246,247,248,249,250,251,103,104,105,87,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,97,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"457e972b-2eae-11e6-9fd3-ed1b60548a28","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (previous == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (previous == null) {\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } else {\n                previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"previous"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"457ebe3c-2eae-11e6-9fd3-7f5aca2ae768","method":{"position":"org.apache.commons.collections4.IteratorUtils:888","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Enumeration<E> asEnumeration(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorEnumeration<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"457ebe3d-2eae-11e6-9fd3-59ef962985b6","method":{"position":"org.apache.commons.collections4.list.TransformedList:79","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.TransformedList<E> org.apache.commons.collections4.list.TransformedList<E> = new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n            if (((transformer != null) && (list != null)) && ((list.size()) > 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final E[] E[] = ((E[])(list.toArray()));\n                list.clear();\n                for (final E E : values) {\n                    decorated.decorated().add(transformer.transform(value));\n                }\n            } \n            return decorated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"457ee54e-2eae-11e6-9fd3-b92d472ac1ed","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:456","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    return current;\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[373,374],"tindex":"457ee54f-2eae-11e6-9fd3-9fc501c83fd9","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"457ee550-2eae-11e6-9fd3-99e02f724033","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"457f0c61-2eae-11e6-9fd3-b10646adfecf","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:538","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == (org.apache.commons.collections4.bag.AbstractMapBag.this)) {\n                return true;\n            } \n            if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(object));\n            if ((other.size()) != (size())) {\n                return false;\n            } \n            for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n                if ((other.getCount(element)) != (getCount(element))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:197","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[375,376,377,378,379,380,381,382,383,384,385],"tindex":"457f0c62-2eae-11e6-9fd3-dd55e6856db0","method":{"position":"org.apache.commons.collections4.ComparatorUtils:194","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>java.util.Comparator<I> transformedComparator(java.util.Comparator<O> comparator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.TransformingComparator<I, O>(transformer , comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[39],"tindex":"457f0c63-2eae-11e6-9fd3-031f989b5b8a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:148","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[135,136,137,140,149,169,170,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,356,357,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,31,36,37,512,513,514,515,516,517,518,519,520,521,522],"tindex":"457f3374-2eae-11e6-9fd3-a5d05e141968","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556],"tindex":"457f3375-2eae-11e6-9fd3-87cc554a2fb3","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index < 0) {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"457f5a86-2eae-11e6-9fd3-ed26fd3b2482","method":{"position":"org.apache.commons.collections4.MapUtils:1247","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> synchronizedMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            if (map instanceof org.apache.commons.collections4.IterableMap) {\n                {\n                    return java.util.Collections.synchronizedMap(map);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[557,558,559,560,561,562,563,564,505,565,566,567,568,569,570,571,572,573,574,575,576,577,506,578,579,580,507,581,582,583,584,585,586,587,588,589,590,591,592],"tindex":"457f5a87-2eae-11e6-9fd3-f183878b8c94","method":{"position":"org.apache.commons.collections4.map.FixedSizeMap:72","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.FixedSizeMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.FixedSizeMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[593],"tindex":"457f5a88-2eae-11e6-9fd3-35b31ce4c2f3","method":{"position":"org.apache.commons.collections4.CollectionUtils:684","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>C forAllDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    closure.execute(iterator.next());\n                }\n            } \n            return closure;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"457f5a89-2eae-11e6-9fd3-cbf78e3c6f27","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:536","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getNode(final int index, final boolean endMarkerAllowed) throws java.lang.IndexOutOfBoundsException {\n    if (index < 0) {\n        throw new java.lang.IndexOutOfBoundsException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") less than zero.\"));\n            } \n            if ((!endMarkerAllowed) && (index == (int))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Couldn't get the node: \" + \"index (\") + index) + \") is the size of the list.\"));\n            } \n            if (index > (int)) {\n                throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n            } \n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            if (index < ((int) / 2)) {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            } else {\n                node = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n                }\n            }\n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"457f819a-2eae-11e6-9fd3-63c95e6b00b2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[594],"tindex":"457f819b-2eae-11e6-9fd3-8b1e6b108752","method":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.functors.ConstantTransformer.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n                return false;\n            } \n            final java.lang.Object java.lang.Object = ((org.apache.commons.collections4.functors.ConstantTransformer<?, ?>)(obj)).getConstant();\n            return (otherConstant == (getConstant())) || ((otherConstant != null) && (otherConstant.equals(getConstant())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"457fa8ac-2eae-11e6-9fd3-7b0c8d57e4e1","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"457fa8ad-2eae-11e6-9fd3-89df46b0f921","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[595,596,597,598,383,385,599,600,601,602,428,467],"tindex":"457fa8ae-2eae-11e6-9fd3-f32c5681d93e","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[77,78,80,81,82,84,87,603,604,605,252,253,606,258,607,608,609,610,611,612,613,601,266,614,615,616,267,268,617,273,618,619,620,621,622,623,624,602,287,625,626,627,288,289,628,294,629,630,631,632,633,634,635,636,330,637,638,639,331,332,640,337,641,642,643,644,645,646,647,648,348,649,650,651,349,350,652,355,356,357,653,654,655,656,657,658,659,660,362,661,662,663,363,364,664,369],"tindex":"457fcfbf-2eae-11e6-9fd3-09c4ec26306b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:125","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[665],"tindex":"457fcfc0-2eae-11e6-9fd3-c77835d6b088","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (factory == null) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[98,666,667,668,669,670,99,671,672,673,674,675,676,677,678,679,680,681,100,682,683,684,685,101,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713],"tindex":"457fcfc1-2eae-11e6-9fd3-05fd65e2c884","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[262,714,715,716],"tindex":"457ff6d2-2eae-11e6-9fd3-8fb414470bcb","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:228","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                throw new java.lang.IndexOutOfBoundsException(((\"Index \" + index) + \" is less than zero\"));\n            } \n            if (index >= (int)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index \" + index) + \" is invalid for size \") + (int)));\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            if (index < ((int) / 2)) {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = 0 ; currentIndex < index ; currentIndex++) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            } else {\n                entry = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                for (int int = int ; currentIndex > index ; currentIndex--) {\n                    entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n                }\n            }\n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[717,718,607,608,609,610,611,612,613,601,266,273,719,720,618,619,620,621,622,721,623,624,602,287,294,295,296],"tindex":"457ff6d3-2eae-11e6-9fd3-d7e7cffb8db9","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:205","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(super.getEntry(key)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[722],"tindex":"45801de4-2eae-11e6-9fd3-193237fedfcd","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[723,724,725,726],"tindex":"45801de5-2eae-11e6-9fd3-53932bb60952","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[128,727,129],"tindex":"45801de6-2eae-11e6-9fd3-f92b7ecf01f6","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[728,729,730,731,732,733,734,593,735,736,737,738],"tindex":"458044f7-2eae-11e6-9fd3-37f18d5b9a5f","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[739,740,741,742],"tindex":"458044f8-2eae-11e6-9fd3-b9d732af54d7","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = decorated().entrySet();\n            if (pairs != null) {\n                for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : pairs) {\n                    if (((java.util.Collection<V>)(entry.getValue())).contains(value)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"45806c09-2eae-11e6-9fd3-3fc92842ed29","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"45806c0a-2eae-11e6-9fd3-1799eca78d69","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[95,91,96,97],"tindex":"45806c0b-2eae-11e6-9fd3-bf9bf6f713b8","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:501","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key3 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[743],"tindex":"4580931c-2eae-11e6-9fd3-f9d7e7a0f442","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[744],"tindex":"4580931d-2eae-11e6-9fd3-2700c16d641a","method":{"position":"org.apache.commons.collections4.ClosureUtils:145","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> doWhileClosure(final org.apache.commons.collections4.Closure<? super E> closure, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(predicate, closure, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[745,746,747],"tindex":"4580931e-2eae-11e6-9fd3-a9f58fe01ae2","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}