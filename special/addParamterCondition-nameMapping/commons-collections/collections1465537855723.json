{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":265,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":499,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":589,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":510,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":552,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":616,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":266,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":608,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":362,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":537,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":607,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":45,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":551,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":6,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":171,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":557,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":255,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":43,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":101,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":350,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":3,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":455,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":256,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":497,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":157,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":314,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":328,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":412,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":244,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":446,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":553,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":343,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":377,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":531,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":68,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":141,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":523,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":118,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":558,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":488,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":546,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":584,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":342,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":399,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":502,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":304,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":450,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":382,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":621,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":596,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":173,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":373,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":472,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":471,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":324,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":44,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":174,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":526,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":465,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":601,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":206,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":136,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":456,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":416,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":482,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":292,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":576,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":208,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":370,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":516,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":380,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":443,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":365,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":440,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":261,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":20,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":438,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":293,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":483,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":36,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":463,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":317,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":107,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":142,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":613,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":347,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking2":190,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":300,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":242,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":351,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":289,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":336,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":478,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":600,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":545,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":470,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":104,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":105,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":586,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":460,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":137,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":1,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":158,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":311,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":325,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":448,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":530,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":337,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":452,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":234,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":518,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToString":389,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":82,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":615,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":638,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":154,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":309,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":464,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":151,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":153,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":295,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":349,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":52,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":513,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":603,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":590,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":559,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":555,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":579,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":129,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":212,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":24,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":70,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":333,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":139,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":75,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":591,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":222,"org.apache.commons.collections4.list.TreeListTest.testListEquals":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":415,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":204,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":458,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":251,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":498,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":598,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":202,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":203,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":489,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":207,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":364,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":34,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":517,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":439,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":403,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":506,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":259,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":486,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":602,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":143,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":507,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":532,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":451,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":277,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":9,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":220,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":357,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":379,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":102,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":199,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":172,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":396,"org.apache.commons.collections4.map.SingletonMapTest.testClone":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":449,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":622,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":640,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":544,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":217,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":286,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":162,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":83,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":567,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":27,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":87,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":131,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":569,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":194,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":297,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":236,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":511,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":95,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":457,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":509,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":54,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":599,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":135,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":322,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":338,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":176,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":479,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":274,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":329,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":182,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":170,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":122,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":563,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":114,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":298,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":566,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":221,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":568,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":269,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":273,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":423,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":494,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":361,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":191,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":571,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":85,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":485,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":77,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":524,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":37,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":59,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":323,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":635,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":612,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":534,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":480,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":620,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":294,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":281,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":303,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":50,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":371,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":348,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":55,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":604,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":111,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":181,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":593,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":521,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":178,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":267,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":562,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":514,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":229,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":390,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":366,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":86,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":246,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":205,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":320,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":237,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":308,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":539,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":284,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":332,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":527,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":258,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":445,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":130,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":611,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":564,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":356,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":401,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":393,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":633,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":632,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":12,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":542,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":629,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":628,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":78,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":631,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":378,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":630,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":91,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":625,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":316,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":592,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":627,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":626,"org.apache.commons.collections4.set.CompositeSetTest.testContains":192,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":575,"org.apache.commons.collections4.CollectionUtilsTest.isFull":637,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":312,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":226,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":238,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":331,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":519,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":501,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":124,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":279,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":405,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":14,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":115,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":636,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":369,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":252,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":109,"org.apache.commons.collections4.SetUtilsTest.testEquals":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":402,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":165,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":425,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":235,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":409,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":84,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":395,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":16,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":140,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":381,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":426,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":580,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":429,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":427,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":268,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":89,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":88,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":467,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":581,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":504,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":496,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":163,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":565,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":108,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":2,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":574,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":302,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":384,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":520,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":17,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":73,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":355,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":468,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":290,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":561,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":187,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":345,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":538,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":609,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":283,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":186,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":454,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":119,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":231,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":374,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndexBoundsChecking":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":397,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":392,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":239,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":21,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":169,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":38,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":543,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":577,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":218,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":53,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":250,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":417,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":444,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":493,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":484,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":344,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":560,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":211,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":138,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":572,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":253,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":597,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":31,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":359,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":375,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":166},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"4c79fdd1-2ecf-11e6-9fc5-bd772b6962d2","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index > 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"4c7ac122-2ecf-11e6-9fc5-0528601b9349","method":{"position":"org.apache.commons.collections4.MapUtils:1664","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, transformerFactory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[18],"tindex":"4c7ac123-2ecf-11e6-9fc5-6b8e36fa1bcf","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[19,20,21],"tindex":"4c7ae834-2ecf-11e6-9fc5-c9f01ed8b51e","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"4c7b0f45-2ecf-11e6-9fc5-65c70bb531a4","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"4c7b3656-2ecf-11e6-9fc5-2da337faf0ab","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[22],"tindex":"4c7b3657-2ecf-11e6-9fc5-dbc9768acfe8","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"4c7b5d68-2ecf-11e6-9fc5-9d1150ac9f5a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<K, V>.containsKey(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[43],"tindex":"4c7b5d69-2ecf-11e6-9fc5-4bfb14948ca9","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[44,45,46,47,48],"tindex":"4c7b847a-2ecf-11e6-9fc5-97a6fc0f2cc3","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"set1 == set2"},"failures":[49],"tindex":"4c7bab8b-2ecf-11e6-9fc5-5d9e6c70f1f4","method":{"position":"org.apache.commons.collections4.SetUtils:116","type":"CtMethodImpl","sourcecode":"public static boolean isEqualSet(final java.util.Collection<?> set1, final java.util.Collection<?> set2) {\n    if (set2 == set1) {\n        {\n            if (set1 == set2) {\n                return true;\n            } \n            if (((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))) {\n                return false;\n            } \n            return set1.containsAll(set2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"set1","set1":"set2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"4c7bab8c-2ecf-11e6-9fc5-cfe0668d93a7","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"4c7bd29d-2ecf-11e6-9fc5-51ebd796fdbc","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map != null) {\n        {\n            final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"4c7bf9ae-2ecf-11e6-9fc5-3f40b93fe0ce","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:716","type":"CtMethodImpl","sourcecode":"private void copyColor(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> from, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> to, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (to == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (to != null) {\n                if (from == null) {\n                    to.setBlack(dataElement);\n                } else {\n                    to.copyColor(from, dataElement);\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"to"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[50,51],"tindex":"4c7c20bf-2ecf-11e6-9fc5-0b7143a4303e","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:105","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().getCount(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"4c7c20c0-2ecf-11e6-9fc5-a99e1f7a2a82","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"4c7c47d1-2ecf-11e6-9fc5-2f80e5a48e8a","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:71","type":"CtBinaryOperatorImpl","sourcecode":"trie == null"},"failures":[52],"tindex":"4c7c47d2-2ecf-11e6-9fc5-2f5f5b56c18c","method":{"position":"org.apache.commons.collections4.TrieUtils:44","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie == null) {\n        {\n            return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(trie);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[53],"tindex":"4c7c6ee3-2ecf-11e6-9fc5-e3d3464a61bf","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[54,55,56,57],"tindex":"4c7c6ee4-2ecf-11e6-9fc5-d3d9c10a129f","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"4c7c95f5-2ecf-11e6-9fc5-a55694109aab","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"4c7c95f6-2ecf-11e6-9fc5-d72a6bda26ba","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[58],"tindex":"4c7cbd07-2ecf-11e6-9fc5-45e740154a88","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"4c7cbd08-2ecf-11e6-9fc5-27c5ca5da317","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:82","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"4c7ce419-2ecf-11e6-9fc5-a788f00272b8","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[73,74,75,76,77,78],"tindex":"4c7ce41a-2ecf-11e6-9fc5-dd98e26dbdb3","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"4c7d0b2b-2ecf-11e6-9fc5-6f0cb454b97e","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"4c7d0b2c-2ecf-11e6-9fc5-dbb676881123","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:313","type":"CtMethodImpl","sourcecode":"private boolean set(final int i) {\n    if (i == (-1)) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.ArrayList<java.util.Iterator<? extends E>>.get(i);\n            if (it.hasNext()) {\n                java.util.ArrayList<E>.set(i, it.next());\n                java.util.BitSet.set(i);\n                return true;\n            } \n            java.util.ArrayList<E>.set(i, null);\n            java.util.BitSet.clear(i);\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"4c7d323d-2ecf-11e6-9fc5-690ad8caaec8","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[105,106,107],"tindex":"4c7d323e-2ecf-11e6-9fc5-9574affacd28","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"4c7d323f-2ecf-11e6-9fc5-c3346f0bf48d","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[108,43,109],"tindex":"4c7d5950-2ecf-11e6-9fc5-c3e67cf4033b","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:70","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName , paramTypes , args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[110,111,112,113,114],"tindex":"4c7d5951-2ecf-11e6-9fc5-9d1ce27fb0c6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"4c7d8062-2ecf-11e6-9fc5-c132aa3da48b","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[115],"tindex":"4c7d8063-2ecf-11e6-9fc5-61997f606988","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"4c7d8064-2ecf-11e6-9fc5-092e73250c17","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                        return true;\n                    } \n                    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                        return java.util.Arrays.equals(K[], otherMulti.?[]);\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[59,60,61,63,64,65,169,66,170,171,172,173,174,175,176,70,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"4c7da775-2ecf-11e6-9fc5-df84a9d93903","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:98","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (index < 0) {\n        {\n            return decorated().remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"4c7da776-2ecf-11e6-9fc5-e1978bcf0de1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"4c7dce87-2ecf-11e6-9fc5-0189d1da89df","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:215","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"4c7dce88-2ecf-11e6-9fc5-79d0425d7237","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:455","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            key2 = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<K>)(key2)).get();\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"4c7df599-2ecf-11e6-9fc5-43873d2f5927","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[296],"tindex":"4c7df59a-2ecf-11e6-9fc5-81a6d4f74752","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[297],"tindex":"4c7df59b-2ecf-11e6-9fc5-c1b8f0579818","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[298],"tindex":"4c7e1cac-2ecf-11e6-9fc5-1f6bd7941afc","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false"},"failures":[],"tindex":"4c7e1cad-2ecf-11e6-9fc5-372d168f5334","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                {\n                    if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                        return false;\n                    } \n                    return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[299,300],"tindex":"4c7e1cae-2ecf-11e6-9fc5-aba2f0bf2508","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[301],"tindex":"4c7e43bf-2ecf-11e6-9fc5-9988d39f8b7f","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[29,38,302,303],"tindex":"4c7e43c0-2ecf-11e6-9fc5-d7195593aced","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"4c7e6ad1-2ecf-11e6-9fc5-81b6092eb61a","method":{"position":"org.apache.commons.collections4.list.TreeList:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> c) {\n    if (c.isEmpty()) {\n        {\n            if (c.isEmpty()) {\n                return false;\n            } \n            int += c.size();\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(c);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? cTree : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(cTree, int);\n            int += c.size();\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:125","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[342],"tindex":"4c7e6ad2-2ecf-11e6-9fc5-b52657433fac","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isEmpty())"},"failures":[],"tindex":"4c7e91e3-2ecf-11e6-9fc5-935eed89ab44","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"4c7e91e4-2ecf-11e6-9fc5-d3d9edaa5120","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[214,217,218,216,215,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,221,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,259,260,258,257,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,263,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"4c7e91e5-2ecf-11e6-9fc5-6f1f5463e225","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[111,112,113,114],"tindex":"4c7eb8f6-2ecf-11e6-9fc5-9ba18b78f122","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"4c7ee007-2ecf-11e6-9fc5-dfbe6099b154","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[343,344,345,346,347,348,349],"tindex":"4c7ee008-2ecf-11e6-9fc5-4b00a53bd2c2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[120,121,122,123],"tindex":"4c7ee009-2ecf-11e6-9fc5-45dfb1d7c535","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:357","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],"tindex":"4c7f071a-2ecf-11e6-9fc5-f5714c81c2a9","method":{"position":"org.apache.commons.collections4.CollectionUtils:1329","type":"CtMethodImpl","sourcecode":"public static int size(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            if (object == null) {\n                return 0;\n            } \n            int int = 0;\n            if (object instanceof java.util.Map<?, ?>) {\n                total = ((java.util.Map<?, ?>)(object)).size();\n            } else if (object instanceof java.util.Collection<?>) {\n                total = ((java.util.Collection<?>)(object)).size();\n            } else if (object instanceof java.lang.Object[]) {\n                total = ((java.lang.Object[])(object)).int;\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    total++;\n                    it.next();\n                }\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    total++;\n                    it.nextElement();\n                }\n            } else {\n                try {\n                    total = java.lang.reflect.Array.getLength(object);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n            return total;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[366,367],"tindex":"4c7f071b-2ecf-11e6-9fc5-b13aa96c54e1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:298","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            if (!(contains(object))) {\n                decorated().add(object);\n                java.util.List<E>.add(index, object);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"4c7f2e2c-2ecf-11e6-9fc5-0bb64ac42581","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[368,357],"tindex":"4c7f2e2d-2ecf-11e6-9fc5-f1aa9ace388e","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:429","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n    if (count == 1) {\n        {\n            if (!(keyIterator.hasNext())) {\n                return null;\n            } \n            final K K = keyIterator.next();\n            final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n                public java.util.Map.Entry<K, V> transform(final V input) {\n                    return new java.util.Map.Entry<K, V>() {\n                        public K getKey() {\n                            return key;\n                        }\n\n                        public V getValue() {\n                            return input;\n                        }\n\n                        public V setValue(V value) {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new ValuesIterator(key) , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[369,370,371,372],"tindex":"4c7f553e-2ecf-11e6-9fc5-47b5edc9e86f","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtBinaryOperatorImpl","sourcecode":"(keyTransformer) == null"},"failures":[],"tindex":"4c7f553f-2ecf-11e6-9fc5-7536ad07095c","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (keyTransformer == null) {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keyTransformer":"keyTransformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389],"tindex":"4c7f7c50-2ecf-11e6-9fc5-6f411e10ae3a","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[390,391,392,343,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,344,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,345,448,449,450,346,451,347,348,349,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"tindex":"4c7f7c51-2ecf-11e6-9fc5-53351f9694e5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[479],"tindex":"4c7fa362-2ecf-11e6-9fc5-d124f933a32d","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"4c7fa363-2ecf-11e6-9fc5-1181f101bb6b","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"4c7fa364-2ecf-11e6-9fc5-27eace8b29e9","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:194","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> addEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) >= (entry.int)) || ((current.int) <= (path.int))) {\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    if (!(isBitSet(entry.K, entry.int, lengthInBits))) {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                    } else {\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current;\n                        entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    entry.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = path;\n                    if ((current.int) >= (entry.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((current.int) <= (path.int)) {\n                        current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } \n                    if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    } else {\n                        path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n                    }\n                    return entry;\n                } \n                path = current;\n                if (!(isBitSet(entry.K, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[480,481,482,483,212],"tindex":"4c7ff185-2ecf-11e6-9fc5-6d1d0099b831","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[484,485,486,487,23,488,489,490,491,24,492,493,494,495,496,497,31,498,499,500,32,501,502,503,504,33,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,40,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559],"tindex":"4c7ff186-2ecf-11e6-9fc5-ff5057eda7b2","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"4c7ff187-2ecf-11e6-9fc5-4b8edeaf2920","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"4c801898-2ecf-11e6-9fc5-5b11c3eb2537","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:138","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            addComparator(comparator, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[560],"tindex":"4c801899-2ecf-11e6-9fc5-6bf7523df391","method":{"position":"org.apache.commons.collections4.PredicateUtils:437","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"4c80189a-2ecf-11e6-9fc5-9d09492777ed","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index > 0) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"4c80189b-2ecf-11e6-9fc5-bf4fccb97a91","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:146","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.Map<K, V>.containsKey(key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[561],"tindex":"4c80189c-2ecf-11e6-9fc5-8770c17e5a78","method":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsFalsePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"4c803fad-2ecf-11e6-9fc5-b5912d16711b","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[562,220,221,222,223,563,224,225,226,228,230,231,232,233,234,235,236,237,238,564,242,244,245,246,247,248,249,250,251,254,565,566,262,263,264,265,567,266,267,268,270,272,273,274,275,276,277,278,568,282,284,285,286,287,288,289,290,291,294],"tindex":"4c803fae-2ecf-11e6-9fc5-d1d5ac69b711","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[569,570],"tindex":"4c803faf-2ecf-11e6-9fc5-e302b86d8910","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"4c8066c0-2ecf-11e6-9fc5-3347b0c7a59e","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[390,391,392,343,393,394,395,396,397,398,399,400,401,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,402,403,404,405,406,407,408,409,410,411,432,344,433,434,435,436,437,438,439,440,441,442,443,444,445,446,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,447,345,448,449,450,346,451,347,348,349],"tindex":"4c8066c1-2ecf-11e6-9fc5-c351fc141125","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:780","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getGrandParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            return getParent(getParent(node, dataElement), dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,118,615,616,617,618,619,620,621,622,623],"tindex":"4c808dd2-2ecf-11e6-9fc5-1bab0275ac11","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[624],"tindex":"4c808dd3-2ecf-11e6-9fc5-778a4b722000","method":{"position":"org.apache.commons.collections4.PredicateUtils:304","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate2 == null)) {\n        {\n            return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(predicate1, predicate2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[625,626,627,628,629,630,631,632,633,634,635,636,637,638],"tindex":"4c80b4e4-2ecf-11e6-9fc5-d3ca9f1b7874","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index < 0) {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"4c80b4e5-2ecf-11e6-9fc5-bd0b1ea82326","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[639],"tindex":"4c80b4e6-2ecf-11e6-9fc5-0bfcaa8b16f1","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[640],"tindex":"4c80dbf7-2ecf-11e6-9fc5-59a2f76f81f4","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n            for (int int = 0 ; i < size ; ++i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n                    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n                    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n                    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n                    return map;\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[479],"tindex":"4c80dbf8-2ecf-11e6-9fc5-3fc15a2d3ee5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:129","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[637],"tindex":"4c810309-2ecf-11e6-9fc5-8946c6c406ed","method":{"position":"org.apache.commons.collections4.CollectionUtils:1466","type":"CtMethodImpl","sourcecode":"public static boolean isFull(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).isFull();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.isFull();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtBinaryOperatorImpl","sourcecode":"other instanceof org.apache.commons.collections4.keyvalue.MultiKey"},"failures":[],"tindex":"4c81030a-2ecf-11e6-9fc5-157857d6f129","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (other == (org.apache.commons.collections4.keyvalue.MultiKey.this)) {\n                        return true;\n                    } \n                    if (other instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n                        final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(other));\n                        return java.util.Arrays.equals(K[], otherMulti.?[]);\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"other"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"4c81030b-2ecf-11e6-9fc5-2b7fd93d85e2","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[120,122],"tindex":"4c81030c-2ecf-11e6-9fc5-b761589768a4","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[180],"tindex":"4c812a1d-2ecf-11e6-9fc5-9bd7e88c245f","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"4c812a1e-2ecf-11e6-9fc5-b7e908309a07","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                {\n                    if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                        return false;\n                    } \n                    return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"4c812a1f-2ecf-11e6-9fc5-9f73084054b5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"4c815130-2ecf-11e6-9fc5-5984f5a277dd","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[641],"tindex":"4c815131-2ecf-11e6-9fc5-bd3f6a84bc57","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index < 0) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (set != null)) && ((set.size()) > 0)"},"failures":[],"tindex":"4c815132-2ecf-11e6-9fc5-4524a574a30c","method":{"position":"org.apache.commons.collections4.SetUtils:326","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> transformedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (set != null)) && ((set.size()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.TransformedSortedSet.transformingSortedSet(set, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set","transformer":"transformer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"4c815133-2ecf-11e6-9fc5-6b45114aa0fb","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtBinaryOperatorImpl","sourcecode":"previous == null"},"failures":[],"tindex":"4c817844-2ecf-11e6-9fc5-a96dab447c46","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"entry"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}