{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":295,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":404,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":393,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":826,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":920,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":910,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":258,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":756,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":597,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":24,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":82,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":589,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":376,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":552,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":339,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":144,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":343,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":766,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":345,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":344,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":261,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":512,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":906,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":559,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":231,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":206,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":877,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":509,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":651,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":94,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":814,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":434,"org.apache.commons.collections4.ListUtilsTest.testLazyList":755,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":412,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":370,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":519,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":360,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":801,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":610,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":686,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":563,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":555,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":679,"org.apache.commons.collections4.CollectionUtilsTest.select":776,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":205,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":731,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":585,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":864,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":135,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":699,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":401,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":3,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":899,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":106,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":26,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":321,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":655,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":789,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":685,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":904,"org.apache.commons.collections4.CollectionUtilsTest.intersection":781,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":496,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":646,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":349,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":852,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":314,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":395,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":687,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":879,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":461,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":97,"org.apache.commons.collections4.map.CompositeMapTest.testPut":765,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectEqualsSelf":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":424,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":510,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":725,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":803,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":607,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":810,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":104,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":475,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":293,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":388,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":197,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":161,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":504,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":694,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":284,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":825,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":90,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":285,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":675,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":177,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":639,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":827,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":846,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":857,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":728,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":845,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":444,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":683,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":10,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":230,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":66,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":550,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":236,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":690,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":771,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":878,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":162,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":747,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":253,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":281,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":674,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":192,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":523,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":668,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":497,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":257,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":896,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":868,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":893,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":426,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":630,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":498,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":678,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":351,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":525,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testSerializeDeserializeThenCompare":323,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":440,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":689,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":800,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":307,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":154,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":202,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":458,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":136,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":240,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":364,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":600,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":47,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":30,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":175,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsSelfHashCode":160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":514,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":310,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":215,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":527,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":821,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":419,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":382,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":922,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":414,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":697,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":396,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":275,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":573,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":181,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":681,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":840,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":618,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":819,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":159,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":117,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":437,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":435,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":324,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":919,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":703,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":39,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":702,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":93,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":701,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":539,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":232,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":808,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":531,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":89,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":156,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":203,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":488,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":25,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":634,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":518,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":688,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":451,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":516,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":862,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":400,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":105,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":774,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":457,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":84,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":508,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":204,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":645,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":570,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":732,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":888,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":575,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":245,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalEmptyCollectionExists":157,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":455,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":924,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":255,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":210,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":752,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":620,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":163,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":880,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":200,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":172,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":721,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":798,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":456,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":469,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":294,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":471,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":470,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":843,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":75,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":838,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":872,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":835,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":224,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":22,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":754,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":734,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":542,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":448,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":751,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":88,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":128,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":492,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":332,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":288,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":447,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":713,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":837,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":65,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":691,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":477,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":386,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":69,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":858,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":98,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":677,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":714,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":425,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":422,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":667,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":474,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":35,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":487,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":326,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":194,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":85,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":459,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":280,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":574,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":196,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":844,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":770,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":249,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":140,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":778,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":208,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":544,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":743,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":513,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":103,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":763,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":406,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":649,"org.apache.commons.collections4.list.TreeListTest.testBug35258":247,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":671,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":423,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":730,"org.apache.commons.collections4.ListUtilsTest.testSelect":762,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":617,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":283,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":615,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":737,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":784,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":669,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":670,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":499,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":44,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":541,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":227,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":588,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":802,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalFullCollectionExists":913,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":439,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":583,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":898,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":0,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":242,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":598,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":91,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":903,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":443,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":599,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":824,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":145,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":637,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":430,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":120,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":212,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":561,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":626,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":431,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":100,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":308,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":870,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":794,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":605,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":148,"org.apache.commons.collections4.queue.TransformedQueueTest.testSimpleSerialization":158,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":590,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":441,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":540,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":664,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":895,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":374,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":277,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":178,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":644,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":114,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":112,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":133,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":623,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":779,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":366,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":684,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":317,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":233,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":6,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":268,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":578,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":407,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":554,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":659,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":251,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":315,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":318,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":515,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":500,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":501,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":502,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":33,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":306,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":871,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":484,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":198,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":654,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":298,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":603,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":134,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":797,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":616,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":482,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":334,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":50,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":777,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":855,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":428,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":881,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":418,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":901,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":237,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":596,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":806,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":305,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":656,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":584,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":724,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":132,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":680,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":409,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":171,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":493,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":180,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":329,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":591,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":186,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":184,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":83,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":799,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":485,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":711,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":889,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":276,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":833,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":350,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":567,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":546,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":704,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":368,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":467,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":369,"org.apache.commons.collections4.set.TransformedSetTest.testSimpleSerialization":916,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":783,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":673,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":62,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":772,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":887,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":633,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":464,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":76,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":325,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":696,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":201,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":449,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":517,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":222,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":342,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":405,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":861,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":139,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":340,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":706,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":341,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":831,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":660,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":695,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":883,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":750,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":865,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":749,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":576,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":882,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":606,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":712,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":715,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":476,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":303,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":235,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":534,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":392,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":892,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":909,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":693,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":73,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":385,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":116,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":907,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":716,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":207,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":311,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":389,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":397,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":262,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":74,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":648,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":849,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":867,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":304,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":619,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":336,"org.apache.commons.collections4.map.CompositeMapTest.testGet":764,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":124,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":381,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":897,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":638,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":79,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":72,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":608,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":209,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":319,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":7,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":705,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":333,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":760,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":742,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":101,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":873,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsSelfHashCode":918,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":652,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueCompatibility":130,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":377,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":537,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":494,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":503,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":727,"org.apache.commons.collections4.CollectionUtilsTest.union":780,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":256,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":530,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":489,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":722,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":187,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":121,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":812,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":199,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":841,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":266,"org.apache.commons.collections4.list.TreeListTest.testRemove":246,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":805,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":553,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":387,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":301,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":565,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":529,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":562,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":312,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":384,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":92,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":361,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":839,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":875,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":270,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":828,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":786,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":254,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":11,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":18,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":330,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":217,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":658,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":807,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":466,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.map.LRUMapTest.testClone":2,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":394,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":921,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":453,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":700,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":300,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":643,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":666,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":641,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":642,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":234,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":886,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":373,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":524,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":526,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":176,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":745,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":450,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":672,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":348,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":592,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":847,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":632,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":229,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":102,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":564,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":717,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":59,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":735,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":362,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":507,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":853,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":863,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":462,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":580,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":536,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":581,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":472,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":579,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":744,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":463,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":173,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":723,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":818,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":259,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":46,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":736,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":380,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":481,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":594,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":45,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":357,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":260,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":399,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":640,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":465,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":859,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":557,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":905,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":726,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":729,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":829,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":739,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":768,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":767,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":628,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":647,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":37,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":748,"org.apache.commons.collections4.set.TransformedSetTest.testObjectHashCodeEqualsContract":917,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":577,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":788,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":279,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":299,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":511,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":657,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":468,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":890,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":410,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":190,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":248,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":856,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":914,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":521,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":902,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":238,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":758,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":23,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":653,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":60,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":142,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":31,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":61,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":216,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":611,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":854,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":367,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":52,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":379,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":53,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":692,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":912,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":338,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":331,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":327,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":793,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":427,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":757,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":572,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":8,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":822,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":372,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":773,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":543,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":64,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":551,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":891,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":505,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":769,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":278,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":842,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":761,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":150,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":241,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":170,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":707,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testObjectHashCodeEqualsContract":322,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":548,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":795,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":560,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":718,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":796,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":21,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":787,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":5,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":58,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":239,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":533,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":866,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":29,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":782,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":850,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":286,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":612,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":894,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":614,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":613,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":650,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":558,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":353,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":354,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":851,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":817,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":166,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":252,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":415,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":452,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":290,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":127,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":15,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":14,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":78,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":710,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":398,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToString":900,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":538,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":708,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":709,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":442,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":358,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":289,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":413,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":741,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":624,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":809,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":522,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":860,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":371,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":99,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":375,"org.apache.commons.collections4.set.CompositeSetTest.testContains":759,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalFullCollectionExists":155,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":662,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":816,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":302,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":328,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":174,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":811,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":265,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":146,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":738,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":49,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":20,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":378,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":884,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":528,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":272,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":746,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":287,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":532,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":67,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":547,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":874,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":792,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":402,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":436,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":429,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":243,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":665,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":244,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":363,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":296,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":698,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":571,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":12,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":587,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":28,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":347,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":352,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":403,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":586,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":149,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":582,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":228,"org.apache.commons.collections4.set.TransformedSetTest.testCanonicalEmptyCollectionExists":915,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":38,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":676,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":43,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":876,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":804,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":438,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":908,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":107,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":473,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":869,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":123,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":625,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":271,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":911,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":733,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":87,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":790,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":111,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":267,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":604,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":390,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":138,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":41,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":820,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":119,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":274,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":823,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":885,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":291,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":923,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":411,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":622,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":19,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":609,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":830,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":832,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":682,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":566,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":740,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":223,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":188,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":421,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":189,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":836,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":545,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":720,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":337,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":834,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":218,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":785,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":169,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":153,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":250,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":478,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":71,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":848,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":813,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":359,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":636},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[0,1,2,3,4,5],"tindex":"5e3cd163-2eae-11e6-b8ab-efcc1058985c","method":{"position":"org.apache.commons.collections4.map.LRUMap:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = getEntry(key);\n            if (entry == null) {\n                return null;\n            } \n            moveToMRU(entry);\n            return entry.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"5e3dbbc4-2eae-11e6-b8ab-c566982e1ad5","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1490","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveKey(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"5e3dbbc5-2eae-11e6-b8ab-db775a5fe867","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[6,7],"tindex":"5e3de2d6-2eae-11e6-b8ab-49f527174325","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:112","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return java.util.Map<E, ? super V>.keySet().containsAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"5e3de2d7-2eae-11e6-b8ab-87f5b1b1aea6","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"5e3e09e8-2eae-11e6-b8ab-8718241f8495","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:70","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            decorated().add(index, object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"5e3e09e9-2eae-11e6-b8ab-5f5ea8d8fb2a","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"5e3e30fa-2eae-11e6-b8ab-95773dfdf8e3","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"5e3e7f1b-2eae-11e6-b8ab-3da522301a53","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:462","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.Node.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((K) == null ? (e2.getKey()) == null : K.equals(e2.getKey())) && ((V) == null ? (e2.getValue()) == null : V.equals(e2.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[58,59,60,61],"tindex":"5e3ecd3c-2eae-11e6-b8ab-a562ddeb11b0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:245","type":"CtMethodImpl","sourcecode":"public void putAll(int index, final java.util.Map<? extends K, ? extends V> map) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                final K K = entry.getKey();\n                final boolean boolean = containsKey(key);\n                put(index, entry.getKey(), entry.getValue());\n                if (!contains) {\n                    index++;\n                } else {\n                    index = (indexOf(entry.getKey())) + 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtBinaryOperatorImpl","sourcecode":"(values == null) || ((values.size()) == 0)"},"failures":[62],"tindex":"5e3ef44d-2eae-11e6-b8ab-ff1285d5c284","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if ((values == null) || ((values.size()) == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[],"tindex":"5e3f697e-2eae-11e6-b8ab-6b9c870d266e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key4"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[63],"tindex":"5e3fb79f-2eae-11e6-b8ab-71f4b4288514","method":{"position":"org.apache.commons.collections4.MapUtils:1404","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> transformerFactory) {\n    if (map != null) {\n        {\n            return org.apache.commons.collections4.map.LazyMap.lazyMap(map, transformerFactory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[64,65,66,67],"tindex":"5e3fdeb0-2eae-11e6-b8ab-5509914d35ad","method":{"position":"org.apache.commons.collections4.CollectionUtils:300","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.Predicate<O> org.apache.commons.collections4.Predicate<O> = org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            return org.apache.commons.collections4.CollectionUtils.subtract(a, b, p);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"5e4005c1-2eae-11e6-b8ab-13a1431d6a7e","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:108","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        {\n            return java.util.Map<E, ? super V>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"5e402cd2-2eae-11e6-b8ab-edbe54a3fe70","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[80],"tindex":"5e402cd3-2eae-11e6-b8ab-b3ee23e64494","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtBinaryOperatorImpl","sourcecode":"(key == null) || (bitIndex >= lengthInBits)"},"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"5e4053e4-2eae-11e6-b8ab-3554e26a064b","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if ((key == null) || (bitIndex >= bitIndex)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"bitIndex","key":"key","bitIndex":"bitIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5e407af5-2eae-11e6-b8ab-532057fb056b","method":{"position":"org.apache.commons.collections4.MapUtils:546","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key, final java.lang.Double defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.NodeList"},"failures":[],"tindex":"5e40a206-2eae-11e6-b8ab-9319989b400a","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.NodeList) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"5e40a207-2eae-11e6-b8ab-99dc8a3fed75","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"5e40c918-2eae-11e6-b8ab-217c54bcb060","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5e40c919-2eae-11e6-b8ab-91aaf6c07bd5","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl","sourcecode":"predicatesAndClosures == null"},"failures":[161],"tindex":"5e40c91a-2eae-11e6-b8ab-9b72494b44bf","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[],"tindex":"5e40c91b-2eae-11e6-b8ab-5d55084264ea","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"5e40f02c-2eae-11e6-b8ab-1342d9ba75a0","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:149","type":"CtMethodImpl","sourcecode":"public void addComparator(final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.add(comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[162,163,164,165,166,167,168,169],"tindex":"5e40f02d-2eae-11e6-b8ab-b183d51ea084","method":{"position":"org.apache.commons.collections4.map.CompositeMap:198","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[170,171,172,173],"tindex":"5e41173e-2eae-11e6-b8ab-4dabd8f6dd2a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[],"tindex":"5e41173f-2eae-11e6-b8ab-679f07329274","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[174,175,176,177,178],"tindex":"5e411740-2eae-11e6-b8ab-8ba549761d84","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"5e413e51-2eae-11e6-b8ab-b55ce91a513f","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            return java.util.Map<E, ? super V>.keySet().equals(obj);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[179,180,181,182,183,184,185,186],"tindex":"5e413e52-2eae-11e6-b8ab-37ef5fd6fdca","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.CompositeSet:213","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"tindex":"5e413e53-2eae-11e6-b8ab-9f05328f5a19","method":{"position":"org.apache.commons.collections4.set.CompositeSet:330","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.set.CompositeSet.SetMutator<E> mutator) {\n    if (mutator == null) {\n        {\n            org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = mutator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[213],"tindex":"5e416564-2eae-11e6-b8ab-fd758265eeb0","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:61","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.collection.TransformedCollection<E> transformingCollection(final java.util.Collection<E> coll, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.TransformedCollection<E>(coll , transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"5e416565-2eae-11e6-b8ab-e3062a4b7a7f","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:92","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().add(object, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:854","type":"CtBinaryOperatorImpl","sourcecode":"enumeration == null"},"failures":[],"tindex":"5e416566-2eae-11e6-b8ab-67b24ab0f0c0","method":{"position":"org.apache.commons.collections4.IteratorUtils:869","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> asIterator(final java.util.Enumeration<? extends E> enumeration, final java.util.Collection<? super E> removeCollection) {\n    if (enumeration == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumeration == null) {\n                throw new java.lang.NullPointerException(\"Enumeration must not be null\");\n            } \n            if (removeCollection == null) {\n                throw new java.lang.NullPointerException(\"Collection must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(enumeration , removeCollection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumeration":"enumeration"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"5e418c77-2eae-11e6-b8ab-437ee62b1bb2","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[214,215,216,217,218,219,220],"tindex":"5e418c78-2eae-11e6-b8ab-cb16ef5c2d62","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:377","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            removeIfExpired(key, now());\n            return super.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[221,119],"tindex":"5e418c79-2eae-11e6-b8ab-952ad686c42a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        {\n            final int int = size();\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n            return size != (size());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"5e418c7a-2eae-11e6-b8ab-69827026bf07","method":{"position":"org.apache.commons.collections4.MapUtils:1506","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> synchronizedSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:234","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"5e41b38b-2eae-11e6-b8ab-912c916fa8c5","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator instanceof java.util.ListIterator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[222],"tindex":"5e41b38c-2eae-11e6-b8ab-6b07b75c6f18","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[223,224,225],"tindex":"5e41b38d-2eae-11e6-b8ab-d5dd9794cda4","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[226],"tindex":"5e41da9e-2eae-11e6-b8ab-cd89f05c6ef4","method":{"position":"org.apache.commons.collections4.ClosureUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> asClosure(final org.apache.commons.collections4.Transformer<? super E, ?> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[227],"tindex":"5e41da9f-2eae-11e6-b8ab-5dd75099564f","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[68,74,228,229,230,231,232,233,234,235],"tindex":"5e41daa0-2eae-11e6-b8ab-0b8124d75741","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[236],"tindex":"5e4201b1-2eae-11e6-b8ab-6773c14ba33e","method":{"position":"org.apache.commons.collections4.ComparatorUtils:119","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Comparator<E> reversedComparator(final java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.comparators.ReverseComparator<E>(comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"5e4201b2-2eae-11e6-b8ab-3d1bf5d1a4e3","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[237,237,238,239,239,240,241,242,243,244,245],"tindex":"5e4228c3-2eae-11e6-b8ab-a5e90776f2cf","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"5e4228c4-2eae-11e6-b8ab-5d99401d87c4","method":{"position":"org.apache.commons.collections4.ListUtils:386","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> synchronizedList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return java.util.Collections.synchronizedList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[246,247,248,249,250,251,252,253,254,255,256,257],"tindex":"5e4228c5-2eae-11e6-b8ab-717b80e436f5","method":{"position":"org.apache.commons.collections4.list.TreeList:570","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> remove(final int index) {\n    if (index < 0) {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return removeSelf();\n            } \n            if (indexRelativeToMe > 0) {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) < 0) {\n                    (int)++;\n                } \n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(indexRelativeToMe), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n                if ((int) > 0) {\n                    (int)--;\n                } \n            }\n            recalcHeight();\n            return balance();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"5e424fd6-2eae-11e6-b8ab-6f70f7df0a10","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],"tindex":"5e438857-2eae-11e6-b8ab-83639496154e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[275],"tindex":"5e43af68-2eae-11e6-b8ab-0f2acbd2aa1d","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:180","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Transformer<?, ?>... transformers) {\n    if (transformers == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n            } \n            for (int int = 0 ; i < (transformers.int) ; i++) {\n                if ((transformers[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"5e43af69-2eae-11e6-b8ab-83bd7cc78922","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:971","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index < 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((index + (int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[276],"tindex":"5e43af6a-2eae-11e6-b8ab-45b30daba679","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"5e43d67b-2eae-11e6-b8ab-6986e952ea03","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:862","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"5e43d67c-2eae-11e6-b8ab-ed0fc38c9d3f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5e43fd8d-2eae-11e6-b8ab-a7edcb61588f","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"5e43fd8e-2eae-11e6-b8ab-3bafb91c0c26","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"5e43fd8f-2eae-11e6-b8ab-7131993d46a9","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:59","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(map, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[170,171,172,173],"tindex":"5e43fd90-2eae-11e6-b8ab-21f067345900","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:358","type":"CtUnaryOperatorImpl","sourcecode":"!(h.isEmpty())"},"failures":[],"tindex":"5e4424a1-2eae-11e6-b8ab-c18809166dbc","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:531","type":"CtMethodImpl","sourcecode":"private void removeInternalEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isEmpty())) {\n        {\n            if (h == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n            } else if (!(h.isInternalNode())) {\n                throw new java.lang.IllegalArgumentException((h + \" is not an internal Entry!\"));\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.int = h.int;\n            {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h ? p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) && ((p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != h)) {\n                    p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == p) {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                } else {\n                    parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child;\n                }\n                if ((child.int) > (parent.int)) {\n                    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n                } \n            }\n            {\n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } \n                if ((h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == h) {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                } else {\n                    h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n                }\n            }\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, p)) {\n                p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p;\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[277,278],"tindex":"5e450f02-2eae-11e6-b8ab-897785285fc6","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (transformers == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"5e453613-2eae-11e6-b8ab-ffde6fdd6f97","method":{"position":"org.apache.commons.collections4.MapUtils:150","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    if (answer instanceof java.lang.Boolean) {\n                        return ((java.lang.Boolean)(answer));\n                    } \n                    if (answer instanceof java.lang.String) {\n                        return java.lang.Boolean.valueOf(((java.lang.String)(answer)));\n                    } \n                    if (answer instanceof java.lang.Number) {\n                        final java.lang.Number java.lang.Number = ((java.lang.Number)(answer));\n                        return (n.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                    } \n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"5e453614-2eae-11e6-b8ab-5d443fbb651d","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[279],"tindex":"5e453615-2eae-11e6-b8ab-dda096b18975","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    int int = 0;\n                    if ((input != null) && (predicate != null)) {\n                        for (final C C : input) {\n                            if (predicate.evaluate(o)) {\n                                count++;\n                            } \n                        }\n                    } \n                    return count;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[127],"tindex":"5e455d26-2eae-11e6-b8ab-0b4e584ba516","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"5e455d27-2eae-11e6-b8ab-69ee460d651e","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[80,280],"tindex":"5e455d28-2eae-11e6-b8ab-1128ccf2b374","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtBinaryOperatorImpl","sourcecode":"(inverseBidiMap) == null"},"failures":[],"tindex":"5e458439-2eae-11e6-b8ab-3779059fa27a","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    if (normalMap == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inverseBidiMap":"normalMap"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,177,305,306,307,308,309,310,311,312,313,314,315,316,147],"tindex":"5e45843a-2eae-11e6-b8ab-812c7b2763ae","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"5e45843b-2eae-11e6-b8ab-9f5c7487de88","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"5e45ab4c-2eae-11e6-b8ab-6bf2ed00a122","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:136","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<E, ? super V>.keySet().removeAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtInvocationImpl","sourcecode":"iterator.hasNext()"},"failures":[317,318],"tindex":"5e45ab4d-2eae-11e6-b8ab-4dcffc54e945","method":{"position":"org.apache.commons.collections4.CollectionUtils:722","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.util.Iterator<T> iterator, final C closure) {\n    if (iterator.hasNext()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((iterator != null) && (closure != null)) {\n                while (iterator.hasNext()) {\n                    final T T = iterator.next();\n                    if (iterator.hasNext()) {\n                        closure.execute(element);\n                    } else {\n                        return element;\n                    }\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[319,320,321,322,323,324,325,326,104,327,328,329,330],"tindex":"5e45ab4e-2eae-11e6-b8ab-1ba3064b196c","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtBinaryOperatorImpl","sourcecode":"(input != null) && (predicate != null)"},"failures":[],"tindex":"5e45ab4f-2eae-11e6-b8ab-cb48c405cb62","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                {\n                    int int = 0;\n                    if ((input != null) && (predicate != null)) {\n                        for (final C C : input) {\n                            if (predicate.evaluate(o)) {\n                                count++;\n                            } \n                        }\n                    } \n                    return count;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,91,92,94,95,96,99,101,104,105,109,110,111,112,113,114,123],"tindex":"5e45d260-2eae-11e6-b8ab-df06ffbca59a","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"5e45d261-2eae-11e6-b8ab-4fde27b0d474","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl","sourcecode":"(size % 2) == 0"},"failures":[356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,62,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"5e45d262-2eae-11e6-b8ab-f3e7de183716","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:477","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<V> createCollection(final int size) {\n    if ((size % 2) == 0) {\n        {\n            return org.apache.commons.collections4.Factory<? extends java.util.Collection<V>>.create();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"5e45f973-2eae-11e6-b8ab-6bf19dd4e458","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        {\n            return bitIndex >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[410],"tindex":"5e45f974-2eae-11e6-b8ab-95132c97183e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:128","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new PredicatedListIterator(decorated().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"5e46e3d5-2eae-11e6-b8ab-6b7acb819caf","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,299,527,528,529,310,314,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697],"tindex":"5e470ae6-2eae-11e6-b8ab-3b183104bf89","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                        return tmpSet;\n                    } \n                    return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,63],"tindex":"5e4731f7-2eae-11e6-b8ab-711b315b28d7","method":{"position":"org.apache.commons.collections4.map.LazyMap:81","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazyMap<K, V> lazyMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.map.LazyMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"5e4731f8-2eae-11e6-b8ab-e90b0994f704","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"5e4731f9-2eae-11e6-b8ab-4510944cc588","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                changed |= remove(o);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[246,746,747,748,247,248,749,750,751,752,753,754],"tindex":"5e4731fa-2eae-11e6-b8ab-c3b54e8771f3","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[755],"tindex":"5e47590b-2eae-11e6-b8ab-d93dfc2d6d41","method":{"position":"org.apache.commons.collections4.list.LazyList:78","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.LazyList<E> lazyList(final java.util.List<E> list, final org.apache.commons.collections4.Factory<? extends E> factory) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.LazyList<E>(list , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[756],"tindex":"5e47590c-2eae-11e6-b8ab-7f96140b11a2","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtInvocationImpl","sourcecode":"obj.getClass().isArray()"},"failures":[757,758,759,760,761,187,762,763,764,765,766,767,768,769,770,771,772,773,774,64,775,776,777,778,779,780,781,782,783,66,67,784],"tindex":"5e47801d-2eae-11e6-b8ab-81c5d139f225","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj.getClass().isArray()) {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[785],"tindex":"5e47801e-2eae-11e6-b8ab-e5a43232d8c5","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[786,787,788,789,790,791,792,793,794,329,795,567,568,569,570,571,572,574,796,797,798,799,800,801,802,803,804,330,805,624,626,629,630,632,636,639],"tindex":"5e47801f-2eae-11e6-b8ab-c112ac1f0a09","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[806],"tindex":"5e478020-2eae-11e6-b8ab-13bd61eed8db","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"5e47a731-2eae-11e6-b8ab-0dc5d1cb0d6d","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[807,808,809,810,811,812,813,410,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,175,850,851,852,853,854,519,855,856,857,520,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,539,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893],"tindex":"5e47a732-2eae-11e6-b8ab-4d654ad5b57b","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[894,895,896,897,898,899,900,901,902,903,904,905,315,906,907,908,909,910,911,912,913,914,915,916,917,918],"tindex":"5e47a733-2eae-11e6-b8ab-1d3077ed3acd","method":{"position":"org.apache.commons.collections4.set.TransformedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSet<E> transformingSet(final java.util.Set<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (set == null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSet<E>(set , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"5e47ce44-2eae-11e6-b8ab-030125ff6b0e","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"5e47ce45-2eae-11e6-b8ab-6fe64bf8b8b2","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                        return tmpSet;\n                    } \n                    return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[919,920,180,921,922,923,181,924],"tindex":"5e47ce46-2eae-11e6-b8ab-3119a92cf313","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}