{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":290,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":63,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":225,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":25,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":88,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":204,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":17,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":241,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":19,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":300,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":51,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":43,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":122,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":220,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":104,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":134,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":298,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":125,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":74,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":311,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":292,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":253,"org.apache.commons.collections4.CollectionUtilsTest.get":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":305,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":263,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":16,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":168,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":83,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":249,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":271,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":246,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":26,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":152,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":7,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":244,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":164,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":198,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":58,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":29,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":231,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":325,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":55,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":68,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":184,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":224,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":285,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":262,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":315,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":313,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":130,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":172,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":128,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":123,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":242,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":147,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":66,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":308,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":217,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":243,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":299,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":170,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":149,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":196,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":148,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":60,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":10,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":216,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":30,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":118,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":251,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":48,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":200,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":291,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":96,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":288,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":261,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":185,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":279,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":282,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":9,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":85,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":54,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":71,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":38,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":37,"org.apache.commons.collections4.list.TreeListTest.testBug35258":24,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":260,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":171,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":111,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":47,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":102,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":20,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":186,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":107,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":179,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":155,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":281,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":286,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":320,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":312,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":175,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":276,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":2,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":101,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":120,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":303,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":8,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":212,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":309,"org.apache.commons.collections4.list.TreeListTest.testRemove":21,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":34,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":273,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":323,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":240,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":53,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":280,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":295,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":235,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":31,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":194,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":99,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":59,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":165,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":267,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":277,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":6,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":307,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":50,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":76,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":117,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":136,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":189,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":317,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":330,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":190,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":56,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":61,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":321,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":230,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":161,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":142,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":195,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":108,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":223,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":64,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":278,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":162,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":124,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":146,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":49,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":69,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":159,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalFullCollectionExists":176,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":211,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":201,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":192,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":127,"org.apache.commons.collections4.CollectionUtilsTest.get1":94,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":221,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":143,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":67,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":310,"org.apache.commons.collections4.list.TreeListTest.testListEquals":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":256,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":215,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":138,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":163,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":301,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":92,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":137,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":213,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":297,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":77,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":116,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":75,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":237,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":167,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":180,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":245,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":226,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":15,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":274,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":79,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":157,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":1,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":296,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":86,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":129,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":327,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":289,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":258,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":18,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":205,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":227,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":95,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":112,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCanonicalEmptyCollectionExists":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":284,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":139,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":324,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":255,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":39,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":187,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":57,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":173,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":144,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":232,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":73,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":293,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":141},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) < (wrappedIteratorIndex)"},"failures":[0,1],"tindex":"4a03b136-2eab-11e6-88fd-71fc36359ba7","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < index) {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrappedIteratorIndex":"index","currentIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)"},"failures":[],"tindex":"4a047487-2eab-11e6-88fd-efedc54645f2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:229","type":"CtMethodImpl","sourcecode":"public E remove(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            final E E = node.getValue();\n            removeNode(node);\n            return oldValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtInvocationImpl","sourcecode":"iteratorChain.isEmpty()"},"failures":[],"tindex":"4a049b98-2eab-11e6-88fd-5b7e07fa1ccc","method":{"position":"org.apache.commons.collections4.IteratorUtils:521","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> chainedIterator(final java.util.Collection<java.util.Iterator<? extends E>> iterators) {\n    if (iterators.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.iterators.IteratorChain<E>(iterators);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iteratorChain":"iterators"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[2],"tindex":"4a04c2a9-2eab-11e6-88fd-e97114fadd5f","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"4a04c2aa-2eab-11e6-88fd-c32d973c489e","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"4a04e9bb-2eab-11e6-88fd-01e0d62369c5","method":{"position":"org.apache.commons.collections4.list.TreeList:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if ((index - index) > (index - index)) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index).getValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"index","end2":"index","end1":"index","start2":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[55],"tindex":"4a0510cc-2eab-11e6-88fd-bfc858cfa0d2","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:116","type":"CtBinaryOperatorImpl","sourcecode":"nonNullComparator == null"},"failures":[],"tindex":"4a0510cd-2eab-11e6-88fd-0d7c24cce2d5","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nonNullComparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:86","type":"CtUnaryOperatorImpl","sourcecode":"!(coll.isEmpty())"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"4a0537de-2eab-11e6-88fd-eb514c18e670","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:202","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (!(coll.isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final E E : coll) {\n                result |= add(e);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[90],"tindex":"4a055eef-2eab-11e6-88fd-21e66f17db0e","method":{"position":"org.apache.commons.collections4.list.PredicatedList:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.list.PredicatedList<T> predicatedList(final java.util.List<T> list, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.PredicatedList<T>(list , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtBinaryOperatorImpl","sourcecode":"(uniqueSet) == null"},"failures":[],"tindex":"4a055ef0-2eab-11e6-88fd-d544b5664927","method":{"position":"org.apache.commons.collections4.SetUtils:178","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> synchronizedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Collections.synchronizedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"uniqueSet":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[],"tindex":"4a058601-2eab-11e6-88fd-fd4a418b623a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"4a05ad12-2eab-11e6-88fd-31c6e7f8cd7f","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) > (coll.size())) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[91,92,93,94,95,96,97],"tindex":"4a05d423-2eab-11e6-88fd-d7688c8b4851","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (object instanceof java.lang.Object[]) {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtBinaryOperatorImpl","sourcecode":"((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"tindex":"4a05fb34-2eab-11e6-88fd-4fdedb561030","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (((((index % index) != 0) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((index % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (java.util.Set<E>.add(e)) {\n                    temp.add(e);\n                } \n            }\n            return super.addAll(index, temp);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[141],"tindex":"4a064955-2eab-11e6-88fd-7debf625b163","method":{"position":"org.apache.commons.collections4.IteratorUtils:781","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.iterators.NodeListIterator nodeListIterator(final org.w3c.dom.NodeList nodeList) {\n    if (nodeList == null) {\n        {\n            if (nodeList == null) {\n                throw new java.lang.NullPointerException(\"NodeList must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.NodeListIterator(nodeList);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"nodeList"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"4a067066-2eab-11e6-88fd-db474731b21b","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> collectionSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"4a067067-2eab-11e6-88fd-c9571907f6d7","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[212],"tindex":"4a069778-2eab-11e6-88fd-33f7c1461a84","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"4a06be89-2eab-11e6-88fd-b5178a2f0362","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtBinaryOperatorImpl","sourcecode":"(position1 == null) || (position2 == null)"},"failures":[150,171,190,205],"tindex":"4a06be8a-2eab-11e6-88fd-e5cb398ec415","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position1":"object","position2":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"4a06be8b-2eab-11e6-88fd-6b92396c5fb1","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:93","type":"CtBinaryOperatorImpl","sourcecode":"end < start"},"failures":[225,21,22,23,27,43],"tindex":"4a06e59c-2eab-11e6-88fd-67c94ae11232","method":{"position":"org.apache.commons.collections4.list.TreeList:502","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe < indexRelativeToMe) {\n        {\n            if ((getLeftSubTree()) == null) {\n                setLeft(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((-1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode.this , org.apache.commons.collections4.list.TreeList.AVLNode<E>), null);\n            } else {\n                setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) >= 0) {\n                (int)++;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"indexRelativeToMe","end":"indexRelativeToMe"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtInvocationImpl","sourcecode":"java.util.Iterator.class.isAssignableFrom(method.getReturnType())"},"failures":[],"tindex":"4a070cad-2eab-11e6-88fd-9fb33d88ac56","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj.isAssignableFrom(obj.getReturnType())) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Iterator.class":"obj","method":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[226,227,228,229,230],"tindex":"4a070cae-2eab-11e6-88fd-3b09757f9a82","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[225],"tindex":"4a070caf-2eab-11e6-88fd-bfa7cf443bba","method":{"position":"org.apache.commons.collections4.MapUtils:526","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key, final java.lang.Float defaultValue) {\n    if (defaultValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Float java.lang.Float = org.apache.commons.collections4.MapUtils.getFloat(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[],"tindex":"4a0733c0-2eab-11e6-88fd-a9a04ba111d7","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:101","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.util.Map.Entry) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Trie<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[225],"tindex":"4a0733c1-2eab-11e6-88fd-a1efad8adfd3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"4a0733c2-2eab-11e6-88fd-3b1d22a8f3af","method":{"position":"org.apache.commons.collections4.MapUtils:297","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Float getFloat(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Float) {\n                return ((java.lang.Float)(answer));\n            } \n            return java.lang.Float.valueOf(answer.floatValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl","sourcecode":"hm.isEmpty()"},"failures":[231],"tindex":"4a075ad3-2eab-11e6-88fd-099f7f3387b9","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:91","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends V> factory) {\n    if (map.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Short"},"failures":[232,233,234,235,236,237,238,239,240,225],"tindex":"4a075ad4-2eab-11e6-88fd-5f2db016e119","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value instanceof java.lang.Short) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"4a075ad5-2eab-11e6-88fd-a5ea38c31cb2","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:325","type":"CtMethodImpl","sourcecode":"private int increment(int index) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index++;\n            if (index >= (int)) {\n                index = 0;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtBinaryOperatorImpl","sourcecode":"leastIndex == (-1)"},"failures":[241],"tindex":"4a0781e6-2eab-11e6-88fd-2171f4b262e2","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"(inputCollection != null) && (predicate != null)"},"failures":[242],"tindex":"4a0781e7-2eab-11e6-88fd-5768ad7290df","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if ((inputCollection != null) && (predicate != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate","inputCollection":"inputCollection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtInvocationImpl","sourcecode":"currentNode.isLeftChild(dataElement)"},"failures":[243,244,245,246,247,248,249,250,251,252,235,236,237,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,226,288,289,290,291,292,293,294,227,228,229,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,230,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"tindex":"4a07a8f8-2eab-11e6-88fd-7d5474185224","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:879","type":"CtMethodImpl","sourcecode":"private void doRedBlackInsert(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> insertedNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (insertedNode.isLeftChild(dataElement)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = insertedNode;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(currentNode, dataElement);\n            while (((currentNode != null) && (currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]))) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(currentNode.getParent(dataElement), dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isRightChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateLeft(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                } else {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateRight(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateLeft(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()], dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentNode":"insertedNode","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[],"tindex":"4a07d009-2eab-11e6-88fd-b7904c967237","method":{"position":"org.apache.commons.collections4.CollectionUtils:326","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> subtract(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b, final org.apache.commons.collections4.Predicate<O> p) {\n    if (a instanceof java.util.Set<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>();\n            final org.apache.commons.collections4.bag.HashBag<O> org.apache.commons.collections4.bag.HashBag<O> = new org.apache.commons.collections4.bag.HashBag<O>();\n            for (final O O : b) {\n                if (p.evaluate(element)) {\n                    bag.add(element);\n                } \n            }\n            for (final O O : a) {\n                if (!(bag.remove(element, 1))) {\n                    list.add(element);\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"a"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":36,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}