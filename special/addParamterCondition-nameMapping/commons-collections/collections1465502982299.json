{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":445,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":384,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":399,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":411,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":45,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":282,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":205,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":591,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":477,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":420,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":169,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":616,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":436,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":211,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":69,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":167,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":614,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":393,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":397,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":538,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":161,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":10,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":443,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":398,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":425,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":581,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":511,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":518,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":93,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":553,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":138,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":473,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":534,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":280,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":344,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":431,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":423,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":100,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":101,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":139,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":348,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":208,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":589,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":293,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":592,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":328,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":29,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":412,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":562,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":237,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":307,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":155,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":385,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":102,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":217,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":300,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":309,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":371,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":197,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":458,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":94,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":594,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":469,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":630,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":610,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":617,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":144,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":216,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":271,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":599,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":115,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":249,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":497,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":450,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":455,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":396,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":577,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":147,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":440,"org.apache.commons.collections4.map.ListOrderedMapTest.testIndexOf":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":325,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":516,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":111,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":607,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":314,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":602,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":478,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":350,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":142,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":238,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":451,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":128,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":156,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":259,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":522,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":527,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":287,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":122,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":542,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":189,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":498,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":316,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":421,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":632,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":465,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":587,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":448,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":179,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":560,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":379,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":438,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":627,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":572,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":463,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":74,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":164,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":180,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":505,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":1,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":492,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":494,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":433,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":96,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":204,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":313,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":368,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":537,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":121,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":135,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":481,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":327,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":466,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":588,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":336,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":255,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":373,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":381,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":467,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":92,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":613,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":536,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":470,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":615,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":14,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":502,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":203,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":222,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":337,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":130,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":224,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":247,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":533,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":540,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":618,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":629,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":7,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":262,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":490,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":77,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":166,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":525,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":70,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":489,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":285,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":302,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":268,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":554,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":283,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":242,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":250,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":175,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":98,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":404,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":50,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":360,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":568,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":390,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":233,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":134,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":33,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":408,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":424,"org.apache.commons.collections4.ListUtilsTest.testSubtract":374,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":575,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":524,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":158,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":168,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":148,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":565,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":245,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":472,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":109,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":326,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":200,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":556,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":566,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":188,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":78,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":410,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":612,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":279,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":269,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":275,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":13,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":464,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":65,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":321,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":31,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":116,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":276,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":320,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":28,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":366,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":517,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":181,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":310,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":172,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":530,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":608,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":474,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":504,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":449,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":356,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":380,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":541,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":152,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":334,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":341,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":479,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":95,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":85,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":345,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":392,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":372,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":140,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":36,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":619,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":523,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":195,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":496,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":622,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":151,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":428,"org.apache.commons.collections4.ListUtilsTest.testHashCode":532,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":378,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":120,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":99,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":611,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":624,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":252,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":44,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":468,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":129,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":543,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":548,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":488,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":580,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":306,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":332,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":165,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":564,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":289,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":422,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":574,"org.apache.commons.collections4.ListUtilsTest.testPartition":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":117,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":559,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":235,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":365,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":190,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":232,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":578,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":355,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":549,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":584,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":427,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":513,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":400,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":367,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":221,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":550,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":342,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":486,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":23,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":570,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":418,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":213,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":264,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":435,"org.apache.commons.collections4.map.ListOrderedMap2Test.testIndexOf":509,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":459,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":174,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":376,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":184,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":407,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":626,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":83,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":520,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":485,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":377,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":318,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":176,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":454,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":319,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":552,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":340,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":573,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":606,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":506,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":603,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":447,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":219,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":544,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":601,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":563,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":256,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":480,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":290,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":487,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":491,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":113,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":567,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":631,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":182,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":296,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":545,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":391,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":202,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":331,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":388,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":177,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":369,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":621,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":357,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":114,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":596,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":308,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":186,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":437,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":508,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":75,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":73,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":229,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":304,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":270,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":273,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":227,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":586,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":329,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":298,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":405,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":185,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":295,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":595,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":547,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":339,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":131,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":535,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":343,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":5,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":432,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":576,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":236,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":415,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":500,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":225,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":403,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":439,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":288,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":220,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":317,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":8,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":482,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":475,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":196,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":82,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":183,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":284,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":382,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":272,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":519,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":171,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":301,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":434,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":59,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":597,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":126,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":6,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":127,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":192,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":604,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":163,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":274,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":620,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":260,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":253,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":364,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":406,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":281,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":623,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":230,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":27,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":157,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":243,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":353,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":383,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":499,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":323,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":441,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":417,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":352,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":108,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":198,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":299,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":248,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":521,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":34,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":89,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":361,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":558,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":358,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":228,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":61,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":3,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":19,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":173,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":72,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":362,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":483,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":501,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":291,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":419,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":609,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":48,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":187,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":414,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":4,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":90,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":261,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":315,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":484,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":133,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":159,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":386,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":460,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":21,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":526,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":582,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":354,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":590,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":579,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":515,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":47,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":214,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":555,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":170,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":194,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":97,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":600,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":178,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":528,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":46,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":258,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":324,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":453,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":529,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":218,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":286,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":512,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":212,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":209,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":598,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":471,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":551,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":305,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":240,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":416,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":110,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":32,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":199,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":462,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":64,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":84,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":585,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":193,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":413,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":569,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":571},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[0],"tindex":"1a4d4fd9-2e7e-11e6-ad17-5f3361fbf995","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[1],"tindex":"1a4e132a-2e7e-11e6-ad17-c9cecc286bb0","method":{"position":"org.apache.commons.collections4.CollectionUtils:1770","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<E> transformingCollection(final java.util.Collection<E> collection, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(collection, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[2],"tindex":"1a4e132b-2e7e-11e6-ad17-d74860e8d575","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtBinaryOperatorImpl","sourcecode":"collection == null"},"failures":[3],"tindex":"1a4e3a3c-2e7e-11e6-ad17-3d9ac9f336ac","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"1a4e3a3d-2e7e-11e6-ad17-911bdb63d1f6","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:330","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entryAfter(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[4],"tindex":"1a4e614e-2e7e-11e6-ad17-f324763daeb5","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n            } \n            java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[5],"tindex":"1a4e614f-2e7e-11e6-ad17-edeefd3b8fc4","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1a4e8860-2e7e-11e6-ad17-b5bd99174f44","method":{"position":"org.apache.commons.collections4.MapUtils:762","type":"CtMethodImpl","sourcecode":"public static <K>short getShortValue(final java.util.Map<? super K, ?> map, final K key, final short defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (shortObject == null) {\n                return defaultValue;\n            } \n            return shortObject.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[6],"tindex":"1a4e8861-2e7e-11e6-ad17-f31f6cf35cfc","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[7],"tindex":"1a4eaf72-2e7e-11e6-ad17-b5341c0d8c03","method":{"position":"org.apache.commons.collections4.CollectionUtils:1497","type":"CtMethodImpl","sourcecode":"public static int maxSize(final java.util.Collection<? extends java.lang.Object> coll) {\n    if (coll == null) {\n        {\n            if (coll == null) {\n                throw new java.lang.NullPointerException(\"The collection must not be null\");\n            } \n            if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n                return ((org.apache.commons.collections4.BoundedCollection<?>)(coll)).maxSize();\n            } \n            try {\n                final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(coll);\n                return bcoll.maxSize();\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return -1;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[8],"tindex":"1a4eaf73-2e7e-11e6-ad17-2794270cf4b7","method":{"position":"org.apache.commons.collections4.IteratorUtils:297","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start) {\n    if (start < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[],"tindex":"1a4ed684-2e7e-11e6-ad17-ad6481d3c156","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof org.w3c.dom.Node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupValue(obj)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[9,10],"tindex":"1a4efd95-2e7e-11e6-ad17-3d9b6f96d23a","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[11,12],"tindex":"1a4efd96-2e7e-11e6-ad17-35224ddf05bc","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"1a4f24a7-2e7e-11e6-ad17-ddff2b186aea","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[8],"tindex":"1a4f24a8-2e7e-11e6-ad17-3f2f8cd50f76","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (end == end) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"end","end":"end"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"1a4f4bb9-2e7e-11e6-ad17-f751f2ac11a6","method":{"position":"org.apache.commons.collections4.MapUtils:641","type":"CtMethodImpl","sourcecode":"public static <K>int getIntValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (integerObject == null) {\n                return 0;\n            } \n            return integerObject.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"1a4f4bba-2e7e-11e6-ad17-33ecf9f97272","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[16,21,39,40],"tindex":"1a4f72cb-2e7e-11e6-ad17-cf54fe8d0830","method":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n                return true;\n            } \n            return java.util.Map.Entry<K, V>.equals(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[41],"tindex":"1a4f72cc-2e7e-11e6-ad17-7dc956974ffe","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n            } \n            return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"1a4f99dd-2e7e-11e6-ad17-0bdca8361714","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"1a4fc0ee-2e7e-11e6-ad17-cd4154def21f","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtBinaryOperatorImpl","sourcecode":"(end1 - start1) > (end2 - start2)"},"failures":[42,43,44,45,46,47],"tindex":"1a4fc0ef-2e7e-11e6-ad17-f13767e85c66","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:252","type":"CtMethodImpl","sourcecode":"private void buildScript(final int start1, final int end1, final int start2, final int end2, final org.apache.commons.collections4.sequence.EditScript<T> script) {\n    if ((end1 - start1) > (end1 - end2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.sequence.SequencesComparator.Snake org.apache.commons.collections4.sequence.SequencesComparator.Snake = getMiddleSnake(start1, end1, start2, end2);\n            if (((middle == null) || (((middle.getStart()) == end1) && ((middle.getDiag()) == (end1 - end2)))) || (((middle.getEnd()) == start1) && ((middle.getDiag()) == (start1 - start2)))) {\n                int int = start1;\n                int int = start2;\n                while ((i < end1) || (j < end2)) {\n                    if (((i < end1) && (j < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(i), java.util.List<T>.get(j)))) {\n                        script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                        ++i;\n                        ++j;\n                    } else {\n                        if ((end1 - start1) > (end2 - start2)) {\n                            script.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(i)));\n                            ++i;\n                        } else {\n                            script.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(j)));\n                            ++j;\n                        }\n                    }\n                }\n            } else {\n                buildScript(start1, middle.getStart(), start2, ((middle.getStart()) - (middle.getDiag())), script);\n                for (int int = middle.getStart() ; i < (middle.getEnd()) ; ++i) {\n                    script.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(i)));\n                }\n                buildScript(middle.getEnd(), end1, ((middle.getEnd()) - (middle.getDiag())), end2, script);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start1":"start1","end2":"end1","end1":"end1","start2":"end2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[48,49,50,51,52,53,54,55,56],"tindex":"1a4fe800-2e7e-11e6-ad17-2185526523aa","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:167","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[],"tindex":"1a4fe801-2e7e-11e6-ad17-c9f4fa6392b3","method":{"position":"org.apache.commons.collections4.IteratorUtils:763","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> loopingListIterator(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.NullPointerException(\"List must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.LoopingListIterator<E>(list);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"1a500f12-2e7e-11e6-ad17-d52e8ff7ea31","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1162","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n                return null;\n            } \n            while ((node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (node.int)) {\n                node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n            return node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"1a500f13-2e7e-11e6-ad17-4dce65310453","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"1a500f14-2e7e-11e6-ad17-613d8006aa98","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a503625-2e7e-11e6-ad17-85db7e0c4dd1","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[57],"tindex":"1a503626-2e7e-11e6-ad17-8fab2227faed","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"1a503627-2e7e-11e6-ad17-37aa821244d6","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                {\n                    return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[58],"tindex":"1a505d38-2e7e-11e6-ad17-f5296e5d2d1f","method":{"position":"org.apache.commons.collections4.functors.AndPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.AndPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"1a505d39-2e7e-11e6-ad17-1535d0c683d8","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"1a50844a-2e7e-11e6-ad17-63f1aee6e8bf","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"1a50844b-2e7e-11e6-ad17-89ff4fa30b65","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1a50ab5c-2e7e-11e6-ad17-b7202430282f","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[42,43,44,45,47,46],"tindex":"1a50d26d-2e7e-11e6-ad17-0f1d55e787ee","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (start < 0) {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[383],"tindex":"1a50d26e-2e7e-11e6-ad17-d5c4e8117dc7","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[384],"tindex":"1a50d26f-2e7e-11e6-ad17-2dd3600349c5","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a50f980-2e7e-11e6-ad17-c3c908db74f5","method":{"position":"org.apache.commons.collections4.map.SingletonMap:265","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            switch (map.size()) {\n                case 0 :\n                    return ;\n                case 1 :\n                    final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> = map.entrySet().iterator().next();\n                    put(entry.getKey(), entry.getValue());\n                    return ;\n                default :\n                    throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[],"tindex":"1a512091-2e7e-11e6-ad17-f31d8efc8902","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n                while (e.hasNext()) {\n                    if (!(coll.contains(e.next()))) {\n                        e.remove();\n                        modified = true;\n                    } \n                }\n                return modified;\n            } else {\n                return decorated().retainAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1056","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Iterator"},"failures":[385,386,48,387,388,389,49,50,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"tindex":"1a512092-2e7e-11e6-ad17-6f72a8e0a0ea","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a5147a3-2e7e-11e6-ad17-7b5b38835b65","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[495],"tindex":"1a5147a4-2e7e-11e6-ad17-4b1fad214ccf","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[496,497],"tindex":"1a516eb5-2e7e-11e6-ad17-419864e55f43","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            return super.getEntry(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"1a516eb6-2e7e-11e6-ad17-0b3a7de8db8c","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtBinaryOperatorImpl","sourcecode":"(node.getLeft(dataElement)) != null"},"failures":[498,499,500,501,502,503,504,505,506,507],"tindex":"1a516eb7-2e7e-11e6-ad17-a902ef57cf0d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1908","type":"CtMethodImpl","sourcecode":"private void swapColors(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getLeft(dataElement)) != null) {\n        {\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n            node.boolean[][dataElement.ordinal()] ^= boolean[][dataElement.ordinal()];\n            boolean[][dataElement.ordinal()] ^= node.boolean[][dataElement.ordinal()];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"1a5195c8-2e7e-11e6-ad17-df33cfcbd720","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:188","type":"CtMethodImpl","sourcecode":"public void setIterator(final int index, final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkNotStarted();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.ArrayList<java.util.Iterator<? extends E>>.set(index, iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"1a5195c9-2e7e-11e6-ad17-f994c26fa327","method":{"position":"org.apache.commons.collections4.map.LazySortedMap:75","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.LazySortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if ((map.size()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.LazySortedMap<K, V>(map , factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[508],"tindex":"1a5195ca-2e7e-11e6-ad17-9f7385ead6c7","method":{"position":"org.apache.commons.collections4.QueueUtils:93","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(queue, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[509,510],"tindex":"1a5195cb-2e7e-11e6-ad17-897d88415541","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:410","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.indexOf(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[63,64,65,66,67,68,69,70,71,72],"tindex":"1a51bcdc-2e7e-11e6-ad17-17bfaf38eb98","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[],"tindex":"1a51bcdd-2e7e-11e6-ad17-b33dcc7dde92","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[511,512,501,503,505,506,507],"tindex":"1a51bcde-2e7e-11e6-ad17-d99307f74ebd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:698","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> greatestNode(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n            if (rval != null) {\n                while ((rval.getRight(dataElement)) != null) {\n                    rval = rval.getRight(dataElement);\n                }\n            } \n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[513,514],"tindex":"1a51e3ef-2e7e-11e6-ad17-1376d0970842","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return org.apache.commons.collections4.functors.FunctorUtils.coerce(predicates[0]);\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[86],"tindex":"1a51e3f0-2e7e-11e6-ad17-d72c1e4b54eb","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"1a520b01-2e7e-11e6-ad17-058fab83092c","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"1a520b02-2e7e-11e6-ad17-a5a04bea2e1e","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:179","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator, final boolean reverse) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkLocked();\n            java.util.List<java.util.Comparator<E>>.set(index, comparator);\n            if (reverse == true) {\n                java.util.BitSet.set(index);\n            } else {\n                java.util.BitSet.clear(index);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"1a520b03-2e7e-11e6-ad17-afb1a8f9b4d3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:137","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[515],"tindex":"1a520b04-2e7e-11e6-ad17-e31a4b779a98","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"1a523215-2e7e-11e6-ad17-7d3a2aa67dcb","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[516,517,518,519,520,521,254,258,250,270,271,273,274,276,279,282],"tindex":"1a523216-2e7e-11e6-ad17-6fd2777989ec","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:123","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Enumeration<?>) {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().contains(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtBinaryOperatorImpl","sourcecode":"(object instanceof org.apache.commons.collections4.Bag) == false"},"failures":[],"tindex":"1a523217-2e7e-11e6-ad17-f1852e105f23","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if ((object instanceof org.apache.commons.collections4.Bag) == false) {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[498,499,500,501,502,503,504,505,506,507],"tindex":"1a525928-2e7e-11e6-ad17-6bc16ec30599","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:802","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> getRightChild(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? null : node.getRight(dataElement);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[522],"tindex":"1a525929-2e7e-11e6-ad17-2d3314a6e149","method":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:46","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsExceptionPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[523,524,525,526],"tindex":"1a52592a-2e7e-11e6-ad17-65ffcd436e81","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[527],"tindex":"1a52592b-2e7e-11e6-ad17-01a774496151","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"1a52803c-2e7e-11e6-ad17-4d44910e440a","method":{"position":"org.apache.commons.collections4.map.LRUMap:366","type":"CtMethodImpl","sourcecode":"protected boolean removeLRU(final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> entry) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[528],"tindex":"1a52803d-2e7e-11e6-ad17-4318d76c40a7","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"1a52803e-2e7e-11e6-ad17-8b68a5c14f0f","method":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.iterators.PushbackIterator<E> pushbackIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(iterator));\n                return it;\n            } \n            return new org.apache.commons.collections4.iterators.PushbackIterator<E>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"1a52a74f-2e7e-11e6-ad17-d5e9a9b6eb5e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index > 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[529,530],"tindex":"1a52a750-2e7e-11e6-ad17-29efaf07418a","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[531],"tindex":"1a52a751-2e7e-11e6-ad17-33da8e871d9a","method":{"position":"org.apache.commons.collections4.BagUtils:97","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> unmodifiableBag(final org.apache.commons.collections4.Bag<? extends E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[190,202,279,314,351],"tindex":"1a52a752-2e7e-11e6-ad17-ebaccbcadbf2","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll != null) {\n                boolean boolean = false;\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final java.lang.Object java.lang.Object = i.next();\n                    final boolean boolean = remove(obj, getCount(obj));\n                    result = result || changed;\n                }\n                return result;\n            } else {\n                return decorated().removeAll(null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[532],"tindex":"1a52ce63-2e7e-11e6-ad17-f9560a76c5b6","method":{"position":"org.apache.commons.collections4.ListUtils:281","type":"CtMethodImpl","sourcecode":"public static int hashCodeForList(final java.util.Collection<?> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                return 0;\n            } \n            int int = 1;\n            final java.util.Iterator<?> java.util.Iterator<?> = list.iterator();\n            while (it.hasNext()) {\n                final java.lang.Object java.lang.Object = it.next();\n                hashCode = (31 * hashCode) + (obj == null ? 0 : obj.hashCode());\n            }\n            return hashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[533],"tindex":"1a52ce64-2e7e-11e6-ad17-bb91dc7ac4f2","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"closures == null"},"failures":[534],"tindex":"1a52ce65-2e7e-11e6-ad17-095abd472b30","method":{"position":"org.apache.commons.collections4.functors.ChainedClosure:47","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(closures);\n            if ((closures.int) == 0) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            return new org.apache.commons.collections4.functors.ChainedClosure<E>(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[535],"tindex":"1a52ce66-2e7e-11e6-ad17-c570f00210a8","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"put instanceof java.util.Map"},"failures":[536],"tindex":"1a52f577-2e7e-11e6-ad17-2fba30240043","method":{"position":"org.apache.commons.collections4.SplitMapUtils:234","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <K, V>java.util.Map<K, V> writableMap(final org.apache.commons.collections4.Put<K, V> put) {\n    if (put instanceof java.util.Map) {\n        {\n            if (put == null) {\n                throw new java.lang.IllegalArgumentException(\"Put must not be null\");\n            } \n            if (put instanceof java.util.Map) {\n                return ((java.util.Map<K, V>)(put));\n            } \n            return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(put);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"put":"put"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[537],"tindex":"1a52f578-2e7e-11e6-ad17-8bb00ac76450","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"1a52f579-2e7e-11e6-ad17-4b6b847ae178","method":{"position":"org.apache.commons.collections4.map.CompositeMap:381","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[538,539,540,541],"tindex":"1a531c8a-2e7e-11e6-ad17-6b72da8c545b","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:336","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object key, final java.lang.Object value) {\n    if (key != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return false;\n            } \n            return coll.contains(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"1a531c8b-2e7e-11e6-ad17-af666dabce20","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"1a531c8c-2e7e-11e6-ad17-17899203140d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:216","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"1a53439d-2e7e-11e6-ad17-599b1f2acc12","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"1a53439e-2e7e-11e6-ad17-f10de938a598","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[536],"tindex":"1a53439f-2e7e-11e6-ad17-ef1ad9a9ad02","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[542,543],"tindex":"1a5343a0-2e7e-11e6-ad17-8372c24a0c34","method":{"position":"org.apache.commons.collections4.set.CompositeSet:282","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"1a536ab1-2e7e-11e6-ad17-65126b994fde","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592],"tindex":"1a536ab2-2e7e-11e6-ad17-838d68be6e35","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[593],"tindex":"1a536ab3-2e7e-11e6-ad17-0dab0836f397","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size > 0) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[594],"tindex":"1a5391c4-2e7e-11e6-ad17-916bfd859592","method":{"position":"org.apache.commons.collections4.ClosureUtils:182","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName, paramTypes, args));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,498,615,499,500,501,502,503,504,505,506,507],"tindex":"1a5391c5-2e7e-11e6-ad17-9f930179ea45","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[616,617,618,619,620,621,622],"tindex":"1a53b8d6-2e7e-11e6-ad17-8b1076332524","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"1a53b8d7-2e7e-11e6-ad17-e103d81d420c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:252","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> getEntry(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final K K = castKey(k);\n            if (key == null) {\n                return null;\n            } \n            final int int = lengthInBits(key);\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getNearestEntryForKey(key, lengthInBits);\n            return (!(entry.isEmpty())) && (compareKeys(key, entry.K)) ? entry : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[623,624],"tindex":"1a53b8d8-2e7e-11e6-ad17-79c95a9094b4","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if (index < 0) {\n        {\n            return decorated().listIterator(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.lang.Object[]"},"failures":[],"tindex":"1a53dfe9-2e7e-11e6-ad17-7d782b25824a","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:627","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if (getEntrySet().contains(obj)) {\n                final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(obj)).getKey();\n                org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[625,626],"tindex":"1a53dfea-2e7e-11e6-ad17-a5dad186aaaa","method":{"position":"org.apache.commons.collections4.functors.MapTransformer:49","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> mapTransformer(final java.util.Map<? super I, ? extends O> map) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer();\n            } \n            return new org.apache.commons.collections4.functors.MapTransformer<I, O>(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[627,628,629,630,631],"tindex":"1a53dfeb-2e7e-11e6-ad17-ef7039f6cf88","method":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            if ((org.apache.commons.collections4.comparators.ReverseComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.ReverseComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(object));\n                return java.util.Comparator<E>.equals(thatrc.java.util.Comparator<?>);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[632],"tindex":"1a5406fc-2e7e-11e6-ad17-73b92614067e","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}