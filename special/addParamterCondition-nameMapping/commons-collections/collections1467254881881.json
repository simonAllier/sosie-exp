{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":503,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":827,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":756,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":751,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":316,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":725,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":613,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":308,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":479,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":514,"org.apache.commons.collections4.CollectionUtilsTest.collect":467,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":10,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":16,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":11,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":472,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":223,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":465,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":88,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":492,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":846,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":493,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullValue":265,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":49,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":145,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":123,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":420,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":745,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":582,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":485,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":450,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":330,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":763,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":243,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":275,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":283,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":720,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":84,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":652,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":775,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":236,"org.apache.commons.collections4.CollectionUtilsTest.select":374,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":845,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":542,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":656,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":671,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":664,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":269,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":439,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":555,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":242,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":597,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":551,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":459,"org.apache.commons.collections4.CollectionUtilsTest.intersection":379,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":458,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":774,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":812,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":669,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":524,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":45,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRetainAll":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":515,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":288,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":550,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":114,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":244,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":808,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":504,"org.apache.commons.collections4.map.CompositeMapTest.testPut":15,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":135,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":408,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":451,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":854,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":326,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":433,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":102,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":522,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":617,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":401,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":837,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":611,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":215,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":251,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":590,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":814,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":878,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":571,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":359,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":537,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":641,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":382,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":79,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":247,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":750,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":392,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":231,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":540,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRetainAll":282,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":208,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":137,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":350,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":870,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":209,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":665,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":108,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":410,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":151,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalFullCollectionExists":587,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":449,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":574,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":842,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":547,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":169,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":676,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":729,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":800,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":471,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":616,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":59,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":605,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":739,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":766,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":599,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":113,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":55,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":97,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":857,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":125,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":707,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":633,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":747,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":293,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":755,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":639,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":238,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":736,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":706,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":338,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":717,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":856,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":507,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":148,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":826,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":511,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":859,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":502,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":858,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":118,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":691,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":1,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":843,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":199,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":100,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":245,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":162,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":47,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":672,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":3,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":371,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":427,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":168,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":206,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":219,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":596,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":844,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":259,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":500,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":871,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":295,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":592,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":880,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":667,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":166,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":404,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":662,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":399,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":340,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":418,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":840,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":608,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":455,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":167,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":180,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":703,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":182,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":181,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":564,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":400,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":604,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":321,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":72,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":601,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":44,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":157,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":398,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":0,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":554,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":621,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":771,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":558,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":203,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":772,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":159,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":416,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":429,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":733,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":714,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":591,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":248,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":188,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":217,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":496,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":234,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":807,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":136,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":133,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":281,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":185,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":661,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":198,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":794,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":832,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":728,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":834,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":373,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":170,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":791,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":294,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":589,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":675,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":836,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":822,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":508,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":561,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":376,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":634,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":74,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":423,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":828,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":127,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":799,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":430,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":362,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":815,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":660,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":263,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":860,"org.apache.commons.collections4.list.TreeListTest.testBug35258":393,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":655,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":134,"org.apache.commons.collections4.ListUtilsTest.testSelect":361,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":861,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":337,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":384,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":226,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":227,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":314,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":690,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":872,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":497,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":71,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":784,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":150,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":302,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":317,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":318,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":463,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":141,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":648,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":855,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":848,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":852,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":143,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":142,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":581,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":781,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":575,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":709,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":649,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":443,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":324,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":54,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":426,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":107,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":278,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":624,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":258,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":4,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":343,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":377,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":868,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":712,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":241,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":761,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":795,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":414,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":752,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":632,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":738,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":614,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":297,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToString":83,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":273,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":57,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":620,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":106,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":684,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":211,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":212,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":627,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":777,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":850,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":573,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":195,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":838,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveAll":268,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":548,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":322,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":447,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":336,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":510,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":552,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":873,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":495,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":129,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":315,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPutNullKey":270,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":572,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":882,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":303,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":638,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":754,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":237,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":847,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":710,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":385,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":204,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":657,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":518,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":726,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":310,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":798,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":666,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":631,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":786,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":630,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":448,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":801,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":196,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":68,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":866,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":287,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":75,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":528,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":381,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":40,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":230,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":521,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":369,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":353,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":789,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":175,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":727,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":160,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":841,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":99,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":773,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":202,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":252,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":674,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":397,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":735,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":491,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":395,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":803,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":327,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":325,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":569,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":530,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":250,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":642,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":12,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":879,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":464,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":679,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":577,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":883,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":62,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":823,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":626,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":51,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":501,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":612,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":869,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":598,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":704,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":339,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":570,"org.apache.commons.collections4.map.CompositeMapTest.testGet":14,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":506,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":721,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":806,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":835,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":740,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":583,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":711,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":576,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":610,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":61,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":328,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":366,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":874,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":405,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":36,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":545,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":749,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":701,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":428,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":431,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":483,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":697,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":205,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.CollectionUtilsTest.union":378,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":119,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":481,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":719,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":529,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":692,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":588,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":519,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":839,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":768,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":191,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":875,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":525,"org.apache.commons.collections4.map.UnmodifiableMapTest.testFullMapCompatibility":476,"org.apache.commons.collections4.list.TreeListTest.testRemove":390,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":454,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":737,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":744,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":285,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":580,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":512,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":92,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":556,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":578,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":396,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":689,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":615,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":437,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":602,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":778,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":453,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":535,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":811,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":533,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":272,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":177,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":644,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":658,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":734,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":647,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":566,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":816,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":257,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":280,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":255,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":585,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":779,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":802,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":96,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":109,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":422,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":161,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":229,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":311,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":659,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":623,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":797,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":27,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":284,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":517,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":681,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":776,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":460,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":25,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":26,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":695,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":462,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":50,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":173,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":770,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":299,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":115,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":300,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":183,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":298,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalEmptyCollectionExists":66,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":174,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":456,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":765,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":39,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":732,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":885,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":643,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":862,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":192,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":544,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":780,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":360,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":864,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":176,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":716,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":474,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":488,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":886,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":541,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":713,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":18,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":884,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":718,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":261,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":348,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":30,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":389,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":296,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":110,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":825,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":271,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":646,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":179,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":478,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":831,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":394,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":516,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":93,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":364,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":387,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":267,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":783,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":682,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":331,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":683,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":696,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":499,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":628,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":788,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":687,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":442,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":138,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":363,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":292,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":651,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":731,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":563,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":388,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":477,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":69,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":700,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":370,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":635,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":73,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":80,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":372,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":787,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":216,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":466,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":853,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":748,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":19,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":670,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":367,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":386,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":723,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":77,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":685,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":546,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":804,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":446,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":438,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":645,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":680,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":103,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":425,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":817,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":380,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":332,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":468,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":334,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":742,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":851,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":486,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsSelfHashCode":89,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":475,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":877,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":753,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":126,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":163,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":593,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":409,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":406,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":805,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":549,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":764,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":559,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":863,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":153,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":461,"org.apache.commons.collections4.map.CompositeMapTest.testSimpleSerialization":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":722,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":124,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":344,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":94,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":876,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":432,"org.apache.commons.collections4.set.CompositeSetTest.testContains":365,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveAll":276,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":625,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":568,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":686,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":536,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":557,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":790,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":759,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":111,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":833,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":435,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":391,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":415,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":419,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":743,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":121,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":383,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":76,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":35,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":43,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":677,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":147,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":140,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":279,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":487,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":32,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":34,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":33,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":306,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":650,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":595,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":769,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":785,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":865,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":233,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":715,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":452,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":562,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":821,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":149,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":320,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":184,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":796,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":526,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":46,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":345,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":560,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":440,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":849,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":609,"org.apache.commons.collections4.map.CompositeMapTest.testEqualsNull":65,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":813,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":527,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":606,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":323,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":867,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":699,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":824,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":539,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":793,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":6,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":767,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":513,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":489,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":441,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":122,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":342,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":413,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":329,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":809,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":818,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":820,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":239,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":473,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":607,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":482,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":286,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":603,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":792,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":171,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":829,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":132,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":830,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":708,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":782,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":678,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":810,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":741,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":457,"org.apache.commons.collections4.map.CompositeMapTest.testCanonicalFullCollectionExists":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":58,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":694,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":724,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":480,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":622,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":189,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":881,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":417,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":600,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCanonicalEmptyCollectionExists":586,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":356},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"0fcf4cfb-3e6d-11e6-bb48-cfa7a9d25ee8","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                {\n                    if (k == null) {\n                        return null;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    while (true) {\n                        if ((current.int) <= (path.int)) {\n                            if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                                return removeEntry(current);\n                            } else {\n                                return null;\n                            }\n                        } \n                        path = current;\n                        if (!(isBitSet(key, current.int, lengthInBits))) {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } else {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:61","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"0fcf9b1c-3e6d-11e6-bb48-0bf2c63e1681","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    if (map == null) {\n        {\n            for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n                if ((intersect.size()) != 0) {\n                    if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n                    } \n                    org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n                } \n            }\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n            temp[((temp.int) - 1)] = map;\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"0fcfc22d-3e6d-11e6-bb48-170abaa65151","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:56","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int bitIndex(final java.lang.String key, final int offsetInBits, final int lengthInBits, final java.lang.String other, final int otherOffsetInBits, final int otherLengthInBits) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = true;\n            if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n            } \n            final int int = offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = otherOffsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = beginIndex1 + (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = beginIndex2 + (otherLengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int));\n            final int int = java.lang.Math.max(endIndex1, endIndex2);\n            char char = 0;\n            char char = 0;\n            for (int int = 0 ; i < length ; i++) {\n                final int int = beginIndex1 + i;\n                final int int = beginIndex2 + i;\n                if (index1 >= endIndex1) {\n                    k = 0;\n                } else {\n                    k = key.charAt(index1);\n                }\n                if ((other == null) || (index2 >= endIndex2)) {\n                    f = 0;\n                } else {\n                    f = other.charAt(index2);\n                }\n                if (k != f) {\n                    final int int = k ^ f;\n                    return ((i * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(x))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                } \n                if (k != 0) {\n                    allNull = false;\n                } \n            }\n            if (allNull) {\n                return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n            } \n            return org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360],"tindex":"0fcfe93e-3e6d-11e6-bb48-3fdc37910885","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:52","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> unmodifiableSet(final java.util.Set<? extends E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(set));\n                return tmpSet;\n            } \n            return new org.apache.commons.collections4.set.UnmodifiableSet<E>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"0fcfe93f-3e6d-11e6-bb48-5b24b5af68cb","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"0fd01050-3e6d-11e6-bb48-f39110ed521d","method":{"position":"org.apache.commons.collections4.MapUtils:605","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return 0;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,14,15,16,17,18,19,20,21],"tindex":"0fd01051-3e6d-11e6-bb48-2bd8cf0c682a","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[385],"tindex":"0fd01052-3e6d-11e6-bb48-f9545938646b","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 != null) {\n                {\n                    final int int = hash(key1, key2);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"0fd03763-3e6d-11e6-bb48-d969410fe587","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        {\n            if (k == null) {\n                {\n                    if (k == null) {\n                        return null;\n                    } \n                    final K K = castKey(k);\n                    final int int = lengthInBits(key);\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                    while (true) {\n                        if ((current.int) <= (path.int)) {\n                            if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                                return removeEntry(current);\n                            } else {\n                                return null;\n                            }\n                        } \n                        path = current;\n                        if (!(isBitSet(key, current.int, lengthInBits))) {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        } else {\n                            current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"0fd05e74-3e6d-11e6-bb48-8b2109934ca1","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if ((map.size()) > 0) {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[386,385],"tindex":"0fd05e75-3e6d-11e6-bb48-8338236eed8a","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:657","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key2 != null) {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            if (key3 != null) {\n                h ^= key3.hashCode();\n            } \n            if (key4 != null) {\n                h ^= key4.hashCode();\n            } \n            if (key5 != null) {\n                h ^= key5.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[387,388],"tindex":"0fd05e76-3e6d-11e6-bb48-a7ab9c305db7","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"0fd08587-3e6d-11e6-bb48-210f1f34fadd","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[401,402],"tindex":"0fd08588-3e6d-11e6-bb48-e319e322152a","method":{"position":"org.apache.commons.collections4.CollectionUtils:774","type":"CtMethodImpl","sourcecode":"public static <T>boolean filterInverse(final java.lang.Iterable<T> collection, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.CollectionUtils.filter(collection, (predicate == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(predicate)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0fd08589-3e6d-11e6-bb48-93afab43485d","method":{"position":"org.apache.commons.collections4.map.LinkedMap:248","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[403],"tindex":"0fd0ac9a-3e6d-11e6-bb48-693726e9dbab","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return getEntry(index).getValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"count == 1"},"failures":[404],"tindex":"0fd0ac9b-3e6d-11e6-bb48-510f58a6c8bc","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[405,406,407,408,409,410,411,412,413,414,415,416,417,98,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434],"tindex":"0fd0ac9c-3e6d-11e6-bb48-1bf7d61e645e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[8,435],"tindex":"0fd0ac9d-3e6d-11e6-bb48-194158b1488b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1097","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) {\n    if (offsetInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if (((current.int) <= (path.int)) || (lengthInBits < (current.int))) {\n                    break;\n                } \n                path = current;\n                if (!(isBitSet(prefix, (offsetInBits + (current.int)), (offsetInBits + lengthInBits)))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = current.isEmpty() ? path : current;\n            if (entry.isEmpty()) {\n                return null;\n            } \n            final int int = offsetInBits + lengthInBits;\n            if ((entry == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && ((lengthInBits(entry.getKey())) < endIndexInBits)) {\n                return null;\n            } \n            if ((isBitSet(prefix, endIndexInBits, endIndexInBits)) != (isBitSet(entry.K, lengthInBits, lengthInBits(entry.K)))) {\n                return null;\n            } \n            final int int = getKeyAnalyzer().bitIndex(prefix, offsetInBits, lengthInBits, entry.K, 0, lengthInBits(entry.getKey()));\n            if ((bitIndex >= 0) && (bitIndex < lengthInBits)) {\n                return null;\n            } \n            return entry;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"offsetInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0fd0ac9e-3e6d-11e6-bb48-8d335cdc8d15","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n                    if (longObject == null) {\n                        return defaultValue;\n                    } \n                    return longObject.longValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[],"tindex":"0fd0d3af-3e6d-11e6-bb48-0be8cad8832a","method":{"position":"org.apache.commons.collections4.CollectionUtils:89","type":"CtMethodImpl","sourcecode":"public final int min(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(freqA(obj), freqB(obj));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[436],"tindex":"0fd0d3b0-3e6d-11e6-bb48-2352b6c6e72b","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false"},"failures":[],"tindex":"0fd0d3b1-3e6d-11e6-bb48-0fd5347e084a","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,344,346,349,350,352,359],"tindex":"0fd0d3b2-3e6d-11e6-bb48-296095f4a95b","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"0fd0d3b3-3e6d-11e6-bb48-21c1581472f4","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"0fd0fac4-3e6d-11e6-bb48-83792b124987","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key4 != null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key4"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"0fd0fac5-3e6d-11e6-bb48-ebc1b5d98723","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"0fd0fac6-3e6d-11e6-bb48-258f419e54d5","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:45","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceOfPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InstanceofPredicate(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0fd0fac7-3e6d-11e6-bb48-11b3cef9902c","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"0fd121d8-3e6d-11e6-bb48-cb75d8ae39b3","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[386,385,455,456,457],"tindex":"0fd121d9-3e6d-11e6-bb48-e70508b76670","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:223","type":"CtMethodImpl","sourcecode":"protected int hash(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if (key1 != null) {\n                h ^= key1.hashCode();\n            } \n            if (key2 != null) {\n                h ^= key2.hashCode();\n            } \n            h += ~(h << 9);\n            h ^= h >>> 14;\n            h += h << 4;\n            h ^= h >>> 10;\n            return h;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[],"tindex":"0fd121da-3e6d-11e6-bb48-7d978499c54a","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:207","type":"CtMethodImpl","sourcecode":"public void setReverseSort(final int index) {\n    if (index > 0) {\n        {\n            checkLocked();\n            java.util.BitSet.set(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[94,95,100,101,104,109,112,113,117,120],"tindex":"0fd121db-3e6d-11e6-bb48-95e4c046f869","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:251","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            if (nCopies > 0) {\n                final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n                int += nCopies;\n                if (mut == null) {\n                    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(object, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(nCopies));\n                    return true;\n                } \n                mut.int += nCopies;\n                return false;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[458,459,460,461,462,463],"tindex":"0fd121dc-3e6d-11e6-bb48-090ff57dfe87","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[464,465],"tindex":"0fd148ed-3e6d-11e6-bb48-7de7bf62732d","method":{"position":"org.apache.commons.collections4.IteratorUtils:695","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> filteredIterator(final java.util.Iterator<? extends E> iterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterIterator<E>(iterator , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0fd148ee-3e6d-11e6-bb48-01336c2e6aef","method":{"position":"org.apache.commons.collections4.map.LinkedMap:154","type":"CtMethodImpl","sourcecode":"public V getValue(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    return getEntry(index).getValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[466],"tindex":"0fd148ef-3e6d-11e6-bb48-6b5d5a0fca30","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[467],"tindex":"0fd148f0-3e6d-11e6-bb48-91255f1ffeda","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.util.EmptyStackException","condition":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtBinaryOperatorImpl","sourcecode":"n <= 0"},"failures":[],"tindex":"0fd148f1-3e6d-11e6-bb48-ede9cd1be321","method":{"position":"org.apache.commons.collections4.ArrayStack:105","type":"CtMethodImpl","sourcecode":"public E peek(final int n) throws java.util.EmptyStackException {\n    if (n <= 0) {\n        {\n            final int int = ((size()) - n) - 1;\n            if (m < 0) {\n                throw new java.util.EmptyStackException();\n            } else {\n                return get(m);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.util.EmptyStackException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:190","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[468],"tindex":"0fd17002-3e6d-11e6-bb48-612ea8d03239","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"0fd17003-3e6d-11e6-bb48-6bd2b15854af","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[154,192,223,234,306,340],"tindex":"0fd17004-3e6d-11e6-bb48-e9dbe643f2e3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtUnaryOperatorImpl","sourcecode":"!(o instanceof java.lang.Comparable)"},"failures":[469],"tindex":"0fd17005-3e6d-11e6-bb48-2ff0aa3f5403","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                {\n                    if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                        throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n                    } \n                    java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0fd17006-3e6d-11e6-bb48-d39b3f8432a3","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[470,471],"tindex":"0fd19717-3e6d-11e6-bb48-7904aad00b35","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:507","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.containsKey(value)) {\n                final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(value);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<java.lang.Object, V>.remove(key);\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[472,473,226,227,228,229,230,231,232,233,234,235,236,237,238,239,474,240,241,475,242,476,243,244,245,246,247,248,249,250,251,252,253,254,477,478,479,480,481,482,483,484],"tindex":"0fd19718-3e6d-11e6-bb48-4fc7f75b32cb","method":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:62","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"0fd19719-3e6d-11e6-bb48-579da646b54b","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[485,486,122,123,124,125,487,488,126,127,489,490,491,128,492,129,130,131,132,133,134,135,136,493,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547],"tindex":"0fd1971a-3e6d-11e6-bb48-4f32da377208","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1217","type":"CtMethodImpl","sourcecode":"private static void checkKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(key, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[],"tindex":"0fd1971b-3e6d-11e6-bb48-c35fb5747c76","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[548,549,550,551,552,553,111,554,112,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,113,577,578,579,114,580,581,582,583,584,585,586,587,433],"tindex":"0fd1be2c-3e6d-11e6-bb48-23262b469f9e","method":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.TransformedSortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(bag , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[588,589,590],"tindex":"0fd1be2d-3e6d-11e6-bb48-15299915aedd","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[],"tindex":"0fd1be2e-3e6d-11e6-bb48-8d6beceada64","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtBinaryOperatorImpl","sourcecode":"(transformer) != null"},"failures":[],"tindex":"0fd1be2f-3e6d-11e6-bb48-c3cf37d804b5","method":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.TransformedSortedSet<E> transformingSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer != null) {\n        {\n            return new org.apache.commons.collections4.set.TransformedSortedSet<E>(set , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map"},"failures":[42,45,48,50,51,53,55,57,58,59,60,63,68,70],"tindex":"0fd1be30-3e6d-11e6-bb48-99d26bb51dc8","method":{"position":"org.apache.commons.collections4.map.CompositeMap:465","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n                return org.apache.commons.collections4.map.CompositeMap.this.entrySet().equals(map.entrySet());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"0fd1e541-3e6d-11e6-bb48-13a05d3ded4f","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this)) {\n                return true;\n            } else if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(o));\n            if ((org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, other.getKey())) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, other.getValue()))) {\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"0fd1e542-3e6d-11e6-bb48-11f61296b3c7","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620],"tindex":"0fd1e543-3e6d-11e6-bb48-d71c6a6315ff","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674],"tindex":"0fd1e544-3e6d-11e6-bb48-87ce96a985f1","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"0fd20c55-3e6d-11e6-bb48-cb94e1c20d65","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1240","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntryInSubtree(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node, final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parentOfSubtree) {\n    if (parentOfSubtree == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, parentOfSubtree);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"parentOfSubtree"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:889","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"0fd20c56-3e6d-11e6-bb48-09a48584ba86","method":{"position":"org.apache.commons.collections4.IteratorUtils:938","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> toListIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0fd20c57-3e6d-11e6-bb48-5dd8991c9596","method":{"position":"org.apache.commons.collections4.MapUtils:125","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.String getString(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if (answer != null) {\n                    return answer.toString();\n                } \n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtBinaryOperatorImpl","sourcecode":"count > 3"},"failures":[],"tindex":"0fd20c58-3e6d-11e6-bb48-e5ec781687b4","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:72","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int count) {\n    if (count > 3) {\n        {\n            return decorated().add(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"0fd20c59-3e6d-11e6-bb48-5bb1efc7a00f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:538","type":"CtMethodImpl","sourcecode":"private V doRemoveKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[675,676],"tindex":"0fd20c5a-3e6d-11e6-bb48-c37cb3364217","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[677],"tindex":"0fd2336b-3e6d-11e6-bb48-f7bb65b1c202","method":{"position":"org.apache.commons.collections4.PredicateUtils:517","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0fd2336c-3e6d-11e6-bb48-9d37a2a5b4a3","method":{"position":"org.apache.commons.collections4.MapUtils:802","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key, final long defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n                    if (longObject == null) {\n                        return defaultValue;\n                    } \n                    return longObject.longValue();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement).getLeft(dataElement)) == node"},"failures":[485,486,125,122,123,124,487,488,489,490,491,126,127,128,129,492,130,131,132,133,134,135,136,493,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,497,494,495,496,499,500,505,506,507,501,502,503,504,498,510,508,509,511,513,512,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547],"tindex":"0fd2336d-3e6d-11e6-bb48-f14cfe8396c3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1888","type":"CtMethodImpl","sourcecode":"private void setParent(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[678],"tindex":"0fd2336e-3e6d-11e6-bb48-9584cc7582db","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate1 == null) || (predicate2 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[679,680,681,682,683],"tindex":"0fd2336f-3e6d-11e6-bb48-0fb5e2268dcf","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index < 0) {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[684,685,686,687,688,689,690],"tindex":"0fd25a80-3e6d-11e6-bb48-1175f81e5ba2","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:302","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            _putAll(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"0fd25a81-3e6d-11e6-bb48-f5dbaf05a875","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:71","type":"CtMethodImpl","sourcecode":"static boolean isNullBitKey(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"0fd25a82-3e6d-11e6-bb48-9b3c0fb4c3af","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if (entry == null) {\n        {\n            return entry.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[691,692,693,694,418,695,696,697,698,699,700,701,702,703,575,576,704,705,706,707],"tindex":"0fd25a83-3e6d-11e6-bb48-f11103ccd2d1","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:76","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (object instanceof java.util.Map<?, ?>) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[708],"tindex":"0fd25a84-3e6d-11e6-bb48-fb100622b9d8","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((a == null) || (b == null)) {\n                        throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                    } \n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n                    } \n                    final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n                    final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n                    final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n                    script.visit(visitor);\n                    return visitor.getSubSequence();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"0fd28195-3e6d-11e6-bb48-2b26688931cc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key2 != null) {\n                {\n                    final int int = hash(key1, key2);\n                    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n                    while (entry != null) {\n                        if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                            return true;\n                        } \n                        entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n                    }\n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.collections4.KeyValue"},"failures":[],"tindex":"0fd28196-3e6d-11e6-bb48-a75c34c938b7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2012","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.collections4.KeyValue) {\n        {\n            if (obj == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node.this)) {\n                return true;\n            } \n            if (!(obj instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return (getKey().equals(e.getKey())) && (getValue().equals(e.getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"0fd28197-3e6d-11e6-bb48-6d330948c6ae","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:586","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lookupValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    } else {\n                        {\n                            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(value, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[375,382,383],"tindex":"0fd28198-3e6d-11e6-bb48-378fe7dd641d","method":{"position":"org.apache.commons.collections4.CollectionUtils:279","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> disjunction(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((a == null) || (a == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, ((helper.max(obj)) - (helper.min(obj))));\n            }\n            return helper.list();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[709],"tindex":"0fd28199-3e6d-11e6-bb48-b503aca57ba4","method":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, java.lang.Boolean> predicateTransformer(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.PredicateTransformer<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[691,418,695,701,575],"tindex":"0fd2a8aa-3e6d-11e6-bb48-c3e2648a835a","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"0fd2a8ab-3e6d-11e6-bb48-6d0b99799259","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"0fd2a8ac-3e6d-11e6-bb48-97a4ee9ea0b9","method":{"position":"org.apache.commons.collections4.SplitMapUtils:63","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"0fd2a8ad-3e6d-11e6-bb48-7d7898caba50","method":{"position":"org.apache.commons.collections4.MapUtils:842","type":"CtMethodImpl","sourcecode":"public static <K>double getDoubleValue(final java.util.Map<? super K, ?> map, final K key, final double defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.getDouble(map, key);\n            if (doubleObject == null) {\n                return defaultValue;\n            } \n            return doubleObject.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.BoundedCollection"},"failures":[],"tindex":"0fd2a8ae-3e6d-11e6-bb48-b170b5172ef9","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[621,622,623,624,710,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673],"tindex":"0fd2a8af-3e6d-11e6-bb48-0fc5d51f8c8f","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:598","type":"CtMethodImpl","sourcecode":"protected void destroyEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            entry.java.lang.Object = null;\n            entry.java.lang.Object = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[711,77,712,713,714,715,716,717,99,108,111,116,128,129,131,132,133,134,136,718,719,720,721,722,723,724,725,726,727,728,729,166,167,169,170,171,172,174,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,197,198,200,201,202,203,205,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,238,240,243,244,246,250,253,267,269,272,273,275,278,279,281,287,288,289,290,291,292,294,799,800,801,802,803,804,805,806,807,808,809,310,312,315,316,318,322,325,810,811,812,813,814,815,816,817,344,346,349,350,352,356,359,818,819,820,821,822,823,824,603,825,826,827,828],"tindex":"0fd2cfc0-3e6d-11e6-bb48-c9b3dbfc7048","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            return decorated().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"0fd2cfc1-3e6d-11e6-bb48-7db9d559b7ea","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[367,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,464,849,465,850,851,852,853,854,855,856,857,858,859,860,861,22,23,24,25,26,27,28,31,32,33,34,37,38,42,45,48,50,51,52,53,55,56,57,58,59,60,63,68,69,70,862,863,864,865,866,867,868,869,870,871,872,873,874,875],"tindex":"0fd2cfc2-3e6d-11e6-bb48-1d9e827b0ce8","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"0fd2cfc3-3e6d-11e6-bb48-c389e31d8b37","method":{"position":"org.apache.commons.collections4.set.CompositeSet:388","type":"CtMethodImpl","sourcecode":"public void removeComposited(final java.util.Set<E> set) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<java.util.Set<E>>.remove(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"0fd2cfc4-3e6d-11e6-bb48-4998caddb3b2","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(int, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[876],"tindex":"0fd2cfc5-3e6d-11e6-bb48-4b94c8927cbb","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[877,878,879,880,881,882,883,884,885,886],"tindex":"0fd2f6d6-3e6d-11e6-bb48-832b0429484a","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if (label != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[],"tindex":"0fd2f6d7-3e6d-11e6-bb48-a1378b5dc418","method":{"position":"org.apache.commons.collections4.ListUtils:546","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> longestCommonSubsequence(final java.util.List<E> a, final java.util.List<E> b, final org.apache.commons.collections4.Equator<? super E> equator) {\n    if ((a == null) || (b == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((a == null) || (b == null)) {\n                        throw new java.lang.IllegalArgumentException(\"List must not be null\");\n                    } \n                    if (equator == null) {\n                        throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n                    } \n                    final org.apache.commons.collections4.sequence.SequencesComparator<E> org.apache.commons.collections4.sequence.SequencesComparator<E> = new org.apache.commons.collections4.sequence.SequencesComparator<E>(a , b , equator);\n                    final org.apache.commons.collections4.sequence.EditScript<E> org.apache.commons.collections4.sequence.EditScript<E> = comparator.getScript();\n                    final org.apache.commons.collections4.ListUtils.LcsVisitor<E> org.apache.commons.collections4.ListUtils.LcsVisitor<E> = new org.apache.commons.collections4.ListUtils.LcsVisitor<E>();\n                    script.visit(visitor);\n                    return visitor.getSubSequence();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"0fd2f6d8-3e6d-11e6-bb48-1da77c533497","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"0fd2f6d9-3e6d-11e6-bb48-ff08758a8a3a","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"0fd31dea-3e6d-11e6-bb48-2b9f72d2b81f","method":{"position":"org.apache.commons.collections4.set.CompositeSet:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj instanceof java.util.Set) {\n                final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(obj));\n                return ((set.size()) == (org.apache.commons.collections4.set.CompositeSet.this.size())) && (set.containsAll(org.apache.commons.collections4.set.CompositeSet.this));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[],"tindex":"0fd31deb-3e6d-11e6-bb48-cf49621e653e","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:187","type":"CtMethodImpl","sourcecode":"public void set(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.lang.Comparable)) {\n                {\n                    if ((org.apache.commons.collections4.iterators.ArrayListIterator.this.int) == (-1)) {\n                        throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n                    } \n                    java.lang.reflect.Array.set(org.apache.commons.collections4.iterators.ArrayListIterator.this.java.lang.Object, org.apache.commons.collections4.iterators.ArrayListIterator.this.int, o);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"0fd31dec-3e6d-11e6-bb48-f5eadbc801f8","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:626","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"0fd31ded-3e6d-11e6-bb48-a9ab38d307d3","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"0fd31dee-3e6d-11e6-bb48-cb7f66974983","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:49","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <T>org.apache.commons.collections4.Predicate<T>[] copy(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250647152/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Predicate<T>[])(predicates.clone()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}