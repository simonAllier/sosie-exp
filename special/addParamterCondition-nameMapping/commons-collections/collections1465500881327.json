{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":168,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":39,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":213,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":70,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":334,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":361,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":410,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":351,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":232,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":217,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":356,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":44,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":13,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":340,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":104,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":394,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":304,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":404,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":367,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":224,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":79,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":348,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":9,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":398,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":115,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":325,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":147,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":145,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":117,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":229,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":408,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":411,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":267,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":143,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":357,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":220,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":14,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":286,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":335,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":412,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":212,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":82,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":95,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":328,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":19,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":231,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":417,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":218,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":255,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":188,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":295,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":350,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":54,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":271,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":105,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":274,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":156,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":250,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":76,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":227,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":92,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":129,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":272,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":291,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":30,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":390,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":164,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":262,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":282,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":342,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":120,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":392,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":388,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":258,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":290,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":207,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":391,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":320,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":83,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":406,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":378,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":106,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":176,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":376,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":177,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":337,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":326,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":345,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":244,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":275,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":60,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":125,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":51,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":80,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":84,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":370,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":160,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":159,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":366,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":135,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":365,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":354,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":187,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":185,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":3,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":112,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":316,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":296,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":34,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":399,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":293,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":318,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":203,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":46,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":103,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":165,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":166,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":333,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":167,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":261,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":287,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":324,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":332,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":317,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":141,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":77,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":89,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":306,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":204,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":113,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":172,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":173,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":58,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":32,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":73,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":133,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":409,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":206,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":359,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":372,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":281,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":75,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":86,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":420,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":201,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":184,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":183,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":0,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":6,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":299,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":102,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":7,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":209,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":414,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":349,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":283,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":126,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":270,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":346,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":138,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":377,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":310,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":140,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":127,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":139,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":363,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":279,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":352,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":407,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":264,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":277,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":385,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":219,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":307,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":315,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":11,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":373,"org.apache.commons.collections4.map.HashedMapTest.testClone":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":12,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":8,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":292,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":98,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":97,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":418,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":415,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":136,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":252,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":355,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":305,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":196,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":208,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":198,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":142,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":336,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":155,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":280,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":119,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":297,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":379,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":157,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":144,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":128,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":285,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":21,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":122,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":371,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":268,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":329,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":330,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":43,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":251,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":308,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":69,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":68,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":65,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":389,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":64,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":150,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":67,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":321,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":402,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":66,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":238,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":61,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":63,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":62,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":301,"org.apache.commons.collections4.CollectionUtilsTest.isFull":59,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":88,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":269,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":180,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":48,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":134,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":248,"org.apache.commons.collections4.map.LinkedMapTest.testClone":393,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":116,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":178,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":289,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":344,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":110,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":42,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":215,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":91,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":109,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":118,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":85,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":331,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":121,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":239,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":278,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":413,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":192,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":237,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":358,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":387,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":421,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":181,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":152,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":151,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":107,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":381,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":294,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":52,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":222,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":130,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":214,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":276,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":236,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":240,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":111,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":403,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":49,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":193,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":131,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":195,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":194,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":423,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":26,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":314,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":397,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":230,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":50,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":211,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":382,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":300,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":36,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":87,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":161,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":162,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":163,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":327,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":338,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":416,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":124,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":405,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":341,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":94,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":246,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":360,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":284,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":375,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":234,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":137,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":260,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":400},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"36055b9a-2e79-11e6-82f0-e568d7411533","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Number"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"360645fb-2e79-11e6-82f0-4d47f7300393","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[38,39],"tindex":"36066d0c-2e79-11e6-82f0-3dc3745c86bc","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:692","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4, final java.lang.Object key5) {\n    if (key3 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((((multi.size()) == 5) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))))) && ((key5 == (multi.getKey(4))) || ((key5 != null) && (key5.equals(multi.getKey(4)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key3"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:133","type":"CtBinaryOperatorImpl","sourcecode":"(map) instanceof org.apache.commons.collections4.IterableMap"},"failures":[40],"tindex":"3606941d-2e79-11e6-82f0-af1e4a945e4e","method":{"position":"org.apache.commons.collections4.MapUtils:1698","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final java.util.Map<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (map instanceof org.apache.commons.collections4.IterableMap) {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl","sourcecode":"list1 == list2"},"failures":[],"tindex":"3606941e-2e79-11e6-82f0-154333d7c459","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (java.util.Set<E>.contains(next)) {\n                    setRetainAll.add(next);\n                } \n            }\n            if ((setRetainAll.size()) == (java.util.Set<E>.size())) {\n                return false;\n            } \n            if ((setRetainAll.size()) == 0) {\n                clear();\n            } else {\n                for (final java.util.Iterator<E> java.util.Iterator<E> = iterator() ; it.hasNext() ; ) {\n                    if (!(setRetainAll.contains(it.next()))) {\n                        it.remove();\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[41],"tindex":"3606bb2f-2e79-11e6-82f0-cf7f438b383b","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtBinaryOperatorImpl","sourcecode":"set == null"},"failures":[],"tindex":"36070950-2e79-11e6-82f0-1ffaa621625d","method":{"position":"org.apache.commons.collections4.SetUtils:246","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> orderedSet(final java.util.Set<E> set) {\n    if (set == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(set);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NullPointerException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[],"tindex":"36070951-2e79-11e6-82f0-d93c53352813","method":{"position":"org.apache.commons.collections4.MapUtils:1089","type":"CtMethodImpl","sourcecode":"public static <K>void safeAddToMap(final java.util.Map<? super K, java.lang.Object> map, final K key, final java.lang.Object value) throws java.lang.NullPointerException {\n    if (value == null) {\n        throw new java.lang.NullPointerException();\n    } else {\n        {\n            map.put(key, (value == null ? \"\" : value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"36070952-2e79-11e6-82f0-0f640e7210e0","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(nCopies)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"nCopies"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl","sourcecode":"removeCollection == null"},"failures":[],"tindex":"36073063-2e79-11e6-82f0-25dae46101af","method":{"position":"org.apache.commons.collections4.set.CompositeSet:265","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\");\n            } \n            return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(org.apache.commons.collections4.set.CompositeSet.this, java.util.List<java.util.Set<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtBinaryOperatorImpl","sourcecode":"(end) == (start)"},"failures":[],"tindex":"36075774-2e79-11e6-82f0-09ccaba21337","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (hashCode == hashCode) {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"hashCode","end":"hashCode"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[42],"tindex":"36075775-2e79-11e6-82f0-13638cdb8528","method":{"position":"org.apache.commons.collections4.CollectionUtils:1717","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> synchronizedCollection(final java.util.Collection<C> collection) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(collection);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[43],"tindex":"36077e86-2e79-11e6-82f0-71980fdd2c40","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (list == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return list == null ? defaultList : list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"list"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.lastItemIndex) == (-1)"},"failures":[],"tindex":"36077e87-2e79-11e6-82f0-8f55ece919a7","method":{"position":"org.apache.commons.collections4.list.TransformedList:142","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, java.util.Collection<? extends E> coll) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            coll = transform(coll);\n            return getList().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"3607a598-2e79-11e6-82f0-ed3fa6838a9f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:210","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E value) {\n    if (index <= 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            addNodeBefore(node, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtBinaryOperatorImpl","sourcecode":"(size) >= (threshold)"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"3607a599-2e79-11e6-82f0-d121fffe9e9e","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:339","type":"CtMethodImpl","sourcecode":"private int decrement(int index) {\n    if (index >= index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            index--;\n            if (index < 0) {\n                index = (int) - 1;\n            } \n            return index;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","threshold":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtBinaryOperatorImpl","sourcecode":"label != null"},"failures":[73,74,75,76,77],"tindex":"3607a59a-2e79-11e6-82f0-2d67d2b8dd24","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2061","type":"CtMethodImpl","sourcecode":"public V getKey(final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[38,78],"tindex":"3608b70b-2e79-11e6-82f0-d7e90de1b4e1","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:404","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"3608de1c-2e79-11e6-82f0-2b7616956c07","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:221","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<V, K>.get(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtBinaryOperatorImpl","sourcecode":"(closures.size()) == 0"},"failures":[79],"tindex":"3609052d-2e79-11e6-82f0-b132025047c2","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if ((closures.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtBinaryOperatorImpl","sourcecode":"(bitIndex >= 0) && (bitIndex < lengthInBits)"},"failures":[],"tindex":"3609052e-2e79-11e6-82f0-afe3c24ce74d","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:93","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if ((count >= 0) && (bitIndex < count)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().remove(object, count);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"count","bitIndex":"count"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[80],"tindex":"3609052f-2e79-11e6-82f0-ad963fdf7f65","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"i"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtBinaryOperatorImpl","sourcecode":"(lastReturned) == (-1)"},"failures":[81,82],"tindex":"36092c40-2e79-11e6-82f0-2783ccbd7e63","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[83],"tindex":"36092c41-2e79-11e6-82f0-af46974afa7c","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtBinaryOperatorImpl","sourcecode":"timeUnit == null"},"failures":[84],"tindex":"36092c42-2e79-11e6-82f0-017392b382ff","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:194","type":"CtMethodImpl","sourcecode":"private static long validateAndConvertToMillis(final long timeToLive, final java.util.concurrent.TimeUnit timeUnit) {\n    if (timeUnit == null) {\n        {\n            if (timeUnit == null) {\n                throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n            } \n            return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(timeToLive, timeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeUnit":"timeUnit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"36095353-2e79-11e6-82f0-9bd986697541","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[85],"tindex":"36095354-2e79-11e6-82f0-794a4a6396c2","method":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:195","type":"CtMethodImpl","sourcecode":"public K getKey(final int index) {\n    if (index < (index / 2)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return K[][index];\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"(inputIterator != null) && (transformer != null)"},"failures":[],"tindex":"36097a65-2e79-11e6-82f0-adf2692b9252","method":{"position":"org.apache.commons.collections4.IteratorUtils:669","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Iterator<O> transformedIterator(final java.util.Iterator<? extends I> iterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transform) {\n    if ((iterator != null) && (transform != null)) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (transform == null) {\n                throw new java.lang.NullPointerException(\"Transformer must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.TransformIterator<I, O>(iterator , transform);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"iterator","transformer":"transform"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtBinaryOperatorImpl","sourcecode":"leastIndex == (-1)"},"failures":[],"tindex":"36097a66-2e79-11e6-82f0-21bda011c45c","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:74","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"leastIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"36097a67-2e79-11e6-82f0-c14f855c1c82","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtBinaryOperatorImpl","sourcecode":"index > size"},"failures":[86,87,88,89],"tindex":"3609a178-2e79-11e6-82f0-b36ce60297b0","method":{"position":"org.apache.commons.collections4.list.TreeList:243","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E obj) {\n    if (index > index) {\n        {\n            checkInterval(index, 0, ((size()) - 1));\n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(index);\n            final E E = node.E;\n            node.setValue(obj);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[],"tindex":"3609a179-2e79-11e6-82f0-c121cd931ed9","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:359","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection1, final java.util.Collection<E> compositeCollection2) {\n    if ((compositeCollection2.size()) > 0) {\n        {\n            java.util.List<java.util.Collection<E>>.add(compositeCollection1);\n            java.util.List<java.util.Collection<E>>.add(compositeCollection2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"compositeCollection2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtBinaryOperatorImpl","sourcecode":"(array.length) < (size)"},"failures":[],"tindex":"3609a17a-2e79-11e6-82f0-63a8c45dc911","method":{"position":"org.apache.commons.collections4.list.TreeList:430","type":"CtMethodImpl","sourcecode":"int indexOf(final java.lang.Object object, final int index) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((getLeftSubTree()) != null) {\n                final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n                if (result != (-1)) {\n                    return result;\n                } \n            } \n            if ((E) == null ? (E) == object : E.equals(object)) {\n                return index;\n            } \n            if ((getRightSubTree()) != null) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, (index + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n            } \n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","array":"object","length":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtBinaryOperatorImpl","sourcecode":"(list1.size()) > (list2.size())"},"failures":[],"tindex":"3609c88b-2e79-11e6-82f0-d1bbafd67ff8","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if ((list1.size()) > (list1.size())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"3609c88c-2e79-11e6-82f0-2b1fdcc140f8","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"360b010d-2e79-11e6-82f0-b3a32528b7b7","method":{"position":"org.apache.commons.collections4.MapUtils:406","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Boolean getBoolean(final java.util.Map<? super K, ?> map, final K key, final java.lang.Boolean defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            java.lang.Boolean java.lang.Boolean = org.apache.commons.collections4.MapUtils.getBoolean(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[90,91],"tindex":"360b281e-2e79-11e6-82f0-55176f6d45ad","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtBinaryOperatorImpl","sourcecode":"rval != null"},"failures":[],"tindex":"360b281f-2e79-11e6-82f0-d13c5e5f86e6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:851","type":"CtMethodImpl","sourcecode":"private void rotateRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getLeft(dataElement);\n            node.setLeft(leftChild.getRight(dataElement), dataElement);\n            if ((leftChild.getRight(dataElement)) != null) {\n                leftChild.getRight(dataElement).setParent(node, dataElement);\n            } \n            leftChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = leftChild;\n            } else if ((node.getParent(dataElement).getRight(dataElement)) == node) {\n                node.getParent(dataElement).setRight(leftChild, dataElement);\n            } else {\n                node.getParent(dataElement).setLeft(leftChild, dataElement);\n            }\n            leftChild.setRight(node, dataElement);\n            node.setParent(leftChild, dataElement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rval":"node"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[],"tindex":"360b4f30-2e79-11e6-82f0-1bffe4bdc33d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Object[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[92],"tindex":"360b4f31-2e79-11e6-82f0-5d7b9e8b3b10","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtBinaryOperatorImpl","sourcecode":"x == yFormerParent"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"360b4f32-2e79-11e6-82f0-f16d78c69345","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == node) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"node","yFormerParent":"node"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"360b7643-2e79-11e6-82f0-af7ebcaf2ed5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:107","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (null == object) {\n        {\n            return decorated().contains(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.w3c.dom.Node"},"failures":[383,384,385,386,1,2,3,4,5,6,7,8,9,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"360bc464-2e79-11e6-82f0-6166f279878e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof org.w3c.dom.Node) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"360beb75-2e79-11e6-82f0-675aee087fde","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:142","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) > 0"},"failures":[410,411,412,413,414,415,416,417,418,419,420,421,422,423],"tindex":"360c1286-2e79-11e6-82f0-95291ee70666","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index > 0) {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":45,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}