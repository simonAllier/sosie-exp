{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":437,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":517,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalEmptyCollectionExists":724,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalEmptyCollectionExists":181,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":518,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":670,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":516,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":514,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":244,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":7,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":717,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":660,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":659,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":447,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":777,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":567,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":764,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":661,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":358,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":484,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":639,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":519,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testCanonicalFullCollectionExists":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":483,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":247,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":198,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":346,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":500,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":441,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":472,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":470,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":546,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":551,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectEqualsSelf":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":468,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":87,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":341,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":737,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":769,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":363,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":690,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":298,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":214,"org.apache.commons.collections4.CollectionUtilsTest.intersection":581,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":218,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":550,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":454,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":63,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":50,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":448,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":1,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":488,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":602,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":310,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":368,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":438,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":718,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":216,"org.apache.commons.collections4.map.CompositeMapTest.testPut":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":491,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":100,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalEmptyCollectionExists":558,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":684,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":745,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":406,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":584,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":680,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":585,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":687,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":302,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":227,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":716,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":510,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":113,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":465,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":315,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":120,"org.apache.commons.collections4.CollectionUtilsTest.testIsNotEmptyWithNull":700,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":284,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":64,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":415,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":292,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":31,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":361,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":506,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":734,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":597,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":786,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":320,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":770,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":128,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":765,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":632,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":317,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":362,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":282,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":534,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":231,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":383,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsSelfHashCode":792,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":615,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":599,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":285,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":487,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":587,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":474,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":729,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":744,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":373,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":731,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":529,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":434,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectHashCodeEqualsContract":791,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":703,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":503,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":795,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":501,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":662,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":436,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":743,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":112,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":111,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":110,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":726,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":788,"org.apache.commons.collections4.map.LRUMapTest.testReset":343,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":195,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":39,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":784,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":81,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":266,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsSelfHashCode":184,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":431,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":322,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":8,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":5,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":353,"org.apache.commons.collections4.map.LinkedMapTest.testReset":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":755,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalEmptyCollectionExists":789,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":364,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":376,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":59,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":248,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":141,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":209,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":375,"org.apache.commons.collections4.ListUtilsTest.testPartition":804,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":154,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":255,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":160,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":742,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":18,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":264,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":338,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":760,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":394,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":763,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":545,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":287,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":810,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":562,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":201,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":547,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":47,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":727,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":252,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":395,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":260,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":630,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":794,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":676,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":44,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":151,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":427,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":492,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":647,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":297,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":679,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":672,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":125,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":710,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":349,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":796,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":580,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":554,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAdd":169,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":4,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyIterator":175,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":645,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":127,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":213,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":335,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":334,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":196,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testListIterator":166,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":336,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":440,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":321,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":773,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":238,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":240,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":481,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":751,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":620,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":342,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":245,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":404,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":312,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":490,"org.apache.commons.collections4.map.LinkedMapTest.testClone":316,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":607,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":619,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":67,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":711,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":428,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":638,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":728,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":505,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":354,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":657,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":655,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":641,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":509,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":241,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":778,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":809,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":496,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":758,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":498,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":497,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":723,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":598,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":741,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":759,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":228,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":712,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":780,"org.apache.commons.collections4.queue.TransformedQueueTest.testSimpleSerialization":790,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":355,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":747,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":762,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":801,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":261,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":605,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":187,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":767,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":618,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":259,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":53,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":688,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":323,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":637,"org.apache.commons.collections4.map.LRUMapTest.testLRU":344,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":604,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":649,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":643,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":706,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":410,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testObjectHashCodeEqualsContract":183,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":48,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":512,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":797,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":387,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":221,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":622,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":369,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":385,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":294,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":591,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":768,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":553,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":439,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEqualsNull":180,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":426,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":486,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":421,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":596,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":109,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":766,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":713,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":167,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":379,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":380,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":374,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":450,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testEmptyListIteratorIsIndeedEmpty":171,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":754,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":671,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":757,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":399,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":756,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":539,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":249,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":391,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":808,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":457,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":281,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":452,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":669,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":525,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":443,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":327,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":401,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":207,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":174,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenSet":172,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":650,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":654,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":161,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":19,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":732,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":736,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":772,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":147,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":272,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":806,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":291,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":222,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":646,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":603,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":194,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":533,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":583,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":192,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":459,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":378,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":46,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":156,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":11,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":600,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":696,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":159,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":725,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":435,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":397,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":531,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":666,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":739,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":409,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":301,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":269,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":277,"org.apache.commons.collections4.map.CompositeMapTest.testGet":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":697,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":511,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":707,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":165,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":560,"org.apache.commons.collections4.queue.TransformedQueueTest.testSerializeDeserializeThenCompare":783,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":155,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":158,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":576,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":332,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":418,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectHashCodeEqualsContract":204,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":648,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":705,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":663,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":280,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":193,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":458,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":578,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":226,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":276,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":189,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":451,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":389,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":455,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testAddThenRemove":168,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":220,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":640,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":71,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":634,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":69,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":807,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":30,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":636,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":699,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":16,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":462,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":199,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":527,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":116,"org.apache.commons.collections4.map.LRUMapTest.testClone":352,"org.apache.commons.collections4.bag.CollectionBagTest.testCanonicalFullCollectionExists":722,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":129,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":333,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":594,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":72,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":682,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":229,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":761,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":629,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToString":774,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":442,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":552,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":398,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":279,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":215,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":290,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":543,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":242,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":283,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":250,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":616,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":400,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":563,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":681,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":653,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":627,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":476,"org.apache.commons.collections4.map.SingletonMapTest.testClone":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":467,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":569,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":559,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":621,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":644,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":691,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":339,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":592,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":642,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":449,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":145,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":574,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":678,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":386,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":752,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":212,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":775,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsSelfHashCode":561,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":382,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":299,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":190,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemoveThenSet":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":430,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":628,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":685,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":90,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":89,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":331,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":388,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":677,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":86,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":798,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":493,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":573,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":610,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":157,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":753,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":262,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":295,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":579,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":103,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":130,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":131,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":570,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":37,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":802,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":23,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":698,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":708,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":782,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":709,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":402,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":686,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":381,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":419,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":17,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":365,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":28,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":738,"org.apache.commons.collections4.map.PredicatedMapTest.testCanonicalFullCollectionExists":556,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":776,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":251,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":635,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":219,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":469,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":121,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":232,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":689,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":586,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":749,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":793,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":664,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":403,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":296,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":348,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":565,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":730,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":164,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":508,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":473,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":288,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":614,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":423,"org.apache.commons.collections4.set.CompositeSetTest.testContains":575,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":384,"org.apache.commons.collections4.queue.TransformedQueueTest.testCanonicalFullCollectionExists":787,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":108,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":170,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":300,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":258,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":413,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":779,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":625,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":522,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":217,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":43,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":593,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":735,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":683,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":20,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":186,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":502,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSerializeDeserializeThenCompare":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":495,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":564,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":590,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":6,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":475,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":513,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":557,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":263,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":102,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":781,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":119,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":133,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":542,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":504,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":673,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":612,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":429,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":740,"org.apache.commons.collections4.CollectionUtilsTest.isEmpty":701,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":515,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":601,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":366,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testRemove":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":800,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":456,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":771,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":414,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":537,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":667,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":197,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":750,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":254,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":477,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":27,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":246,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":123,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":424,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":396,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":805,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":152,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":656,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":97,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":489,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":803,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testFullIterator":176,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":693,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":237,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":306,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":370,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":371,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":224,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":719,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":60,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":785,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":153,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":658,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":98,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSimpleSerialization":182,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":278,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":163,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":106},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[0,1,2,3,4,5,6],"tindex":"9342f733-2eb0-11e6-9d79-d534998e79bf","method":{"position":"org.apache.commons.collections4.map.SingletonMap:534","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Enumeration) {\n        {\n            if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((other.size()) != 1) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = other.entrySet().iterator().next();\n            return (isEqualKey(entry.getKey())) && (isEqualValue(entry.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"9343ba84-2eb0-11e6-9d79-b9ea17f8c007","method":{"position":"org.apache.commons.collections4.MapUtils:1329","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(final java.util.Map<K, V> map) {\n    if ((map.size()) > 0) {\n        {\n            return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[7],"tindex":"9343e195-2eb0-11e6-9d79-b1ba6be5b2f8","method":{"position":"org.apache.commons.collections4.PredicateUtils:371","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.OnePredicate.onePredicate(predicates);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9343e196-2eb0-11e6-9d79-45d76ce9ffa0","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic java.lang.Object put(final K key, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(1);\n                coll.add(((V)(value)));\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.add(((V)(value)));\n            }\n            return result ? value : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) > 0"},"failures":[8,9],"tindex":"934408a7-2eb0-11e6-9d79-f542f17840e9","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        {\n            if ((collection.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n                    for (final E E : collection) {\n                        if (!(remove.contains(obj))) {\n                            list.add(obj);\n                        } \n                    }\n                    return list;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[10,11,12,13,14,15,16,17,18,19,20],"tindex":"93442fb8-2eb0-11e6-9d79-696b9a2db75c","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:213","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < 0) {\n        {\n            final int int = indexOf(object);\n            final E E = super.set(index, object);\n            if ((pos != (-1)) && (pos != index)) {\n                super.remove(pos);\n            } \n            java.util.Set<E>.remove(removed);\n            java.util.Set<E>.add(object);\n            return removed;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"934456c9-2eb0-11e6-9d79-bb86c933124e","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"tindex":"93447dda-2eb0-11e6-9d79-c1630dce6d9f","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:45","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> umodifiableListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(iterator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[207],"tindex":"9344a4eb-2eb0-11e6-9d79-e7c496954b6f","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"9344a4ec-2eb0-11e6-9d79-bddd399d24e5","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[306,307,308,309,310,311,312,313,314,315,78,316,317,318,319,320,321,322,323,79,324,325,80,81,326,82,83,327,328,84,85,329,330,86,87,331,332,333,334,335,336,88,89,90,337,338,339,340,91,341,342,92,93,94,95,96,343,344,345,97,98,99,100,346,347,348,349,350,351,352,353,354,355,356,357,358,359,101,360,361,102,103,362,104,105,363,364,106,107,365,366,108,109,367,368,369,370,371,372,110,111,112,373,374,375,376,113,377,378,114,115,116,117,118,379,157,380,158,381,382,383,384,159,160,385,386,161,387,162,388,163,164,165,389],"tindex":"9344cbfd-2eb0-11e6-9d79-1b2c39285ed9","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:262","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex) {\n    if (entry == null) {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = link;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"93451a1e-2eb0-11e6-9d79-57619b33d52e","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                {\n                    java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"93451a1f-2eb0-11e6-9d79-135f4a311a3b","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:412","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 != null) {\n        {\n            return (key1 == key2) || (key1.equals(key2));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[390,391,392,393,394],"tindex":"93454130-2eb0-11e6-9d79-35458a745fe8","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (mutator == null) {\n                {\n                    org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[395],"tindex":"93454131-2eb0-11e6-9d79-abde70578483","method":{"position":"org.apache.commons.collections4.list.TransformedList:123","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return getList().indexOf(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[396,397],"tindex":"93456842-2eb0-11e6-9d79-2742f9067e96","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:254","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if ((contains(item)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[124,127,128,133,134,135,136,137,138],"tindex":"93456843-2eb0-11e6-9d79-cd4f5f5c02b4","method":{"position":"org.apache.commons.collections4.map.Flat3Map:197","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(key);\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 2 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                    case 1 :\n                        if ((K) == null) {\n                            return true;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                return true;\n                            } \n                    }\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[],"tindex":"9345b664-2eb0-11e6-9d79-9d972447fd94","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1815","type":"CtMethodImpl","sourcecode":"private java.util.Map.Entry<V, K> createEntry(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node) {\n    if (node == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(node.getValue() , node.getKey());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[389],"tindex":"9345b665-2eb0-11e6-9d79-851a077f8a5d","method":{"position":"org.apache.commons.collections4.SplitMapUtils:138","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Bag"},"failures":[398,399,400],"tindex":"9345b666-2eb0-11e6-9d79-e7b0fd0bbc31","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9345dd77-2eb0-11e6-9d79-9fa1a68b780a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:77","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"93460488-2eb0-11e6-9d79-c72dbc496c60","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[401],"tindex":"93460489-2eb0-11e6-9d79-c7357e469c3d","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:378","type":"CtMethodImpl","sourcecode":"public boolean putAll(final K key, final java.util.Collection<V> values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((values == null) || ((values.size()) == 0)) {\n                return false;\n            } \n            boolean boolean = false;\n            java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                coll = createCollection(values.size());\n                coll.addAll(values);\n                if ((coll.size()) > 0) {\n                    decorated().put(key, coll);\n                    result = true;\n                } \n            } else {\n                result = coll.addAll(values);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"values"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"9346048a-2eb0-11e6-9d79-677f9a999e4e","method":{"position":"org.apache.commons.collections4.ComparatorUtils:215","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E min(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c < 0 ? o1 : o2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[402],"tindex":"93462b9b-2eb0-11e6-9d79-b7f96d8d633e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[403,404],"tindex":"93462b9c-2eb0-11e6-9d79-270c8f50e0ac","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:100","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[405,406],"tindex":"934652ad-2eb0-11e6-9d79-fdbf2afb10aa","method":{"position":"org.apache.commons.collections4.list.PredicatedList:112","type":"CtMethodImpl","sourcecode":"public void add(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            decorated().add(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[407,408,409,410],"tindex":"934652ae-2eb0-11e6-9d79-bd48073585c6","method":{"position":"org.apache.commons.collections4.map.CompositeMap:281","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].get(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[411,412,413,414,415,416,417,418,419,420],"tindex":"934652af-2eb0-11e6-9d79-9b99ee32290d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:745","type":"CtMethodImpl","sourcecode":"private static boolean isBlack(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            return (node == null) || (node.isBlack(dataElement));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"934679c0-2eb0-11e6-9d79-a1ea9841a734","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:701","type":"CtMethodImpl","sourcecode":"public void atomic(final java.lang.Runnable r) {\n    if (r == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (r == null) {\n                throw new java.lang.NullPointerException();\n            } \n            atomic(r, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"r"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[],"tindex":"934679c1-2eb0-11e6-9d79-35be59088e8d","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key2 != null) {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key2"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl","sourcecode":"transformer == null"},"failures":[421],"tindex":"934679c2-2eb0-11e6-9d79-3556ee1a9ee6","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[422,423],"tindex":"9346a0d3-2eb0-11e6-9d79-b7e0cf725d40","method":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.PredicatedSortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(bag , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[],"tindex":"9346a0d4-2eb0-11e6-9d79-bb4f2ddfe5cb","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:419","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object k) {\n    if (k == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (k == null) {\n                return null;\n            } \n            final K K = castKey(k);\n            final int int = lengthInBits(key);\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            while (true) {\n                if ((current.int) <= (path.int)) {\n                    if ((!(current.isEmpty())) && (compareKeys(key, current.K))) {\n                        return removeEntry(current);\n                    } else {\n                        return null;\n                    }\n                } \n                path = current;\n                if (!(isBitSet(key, current.int, lengthInBits))) {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } else {\n                    current = current.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"k"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[424],"tindex":"9346c7e5-2eb0-11e6-9d79-99f89d9d8040","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:112","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,411,453,454,455,412,456,457,458,459,460,461,462,463,464,413,465,466,414,415,467,468,416,417,418,419,420,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"tindex":"9346c7e6-2eb0-11e6-9d79-b1d5d320ce2c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:547","type":"CtMethodImpl","sourcecode":"private K doRemoveValue(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            if (node == null) {\n                return null;\n            } \n            doRedBlackDelete(node);\n            return node.getKey();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtBinaryOperatorImpl","sourcecode":"(mutator) == null"},"failures":[],"tindex":"9346eef7-2eb0-11e6-9d79-59fb6b7db5ec","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:340","type":"CtMethodImpl","sourcecode":"public void setMutator(final org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> mutator) {\n    if (mutator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (mutator == null) {\n                {\n                    org.apache.commons.collections4.collection.CompositeCollection.this.org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E> = mutator;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mutator":"mutator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563],"tindex":"9346eef8-2eb0-11e6-9d79-358114318611","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:78","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.PredicatedMap<K, V> predicatedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPredicate, final org.apache.commons.collections4.Predicate<? super V> valuePredicate) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.PredicatedMap<K, V>(map , keyPredicate , valuePredicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[389],"tindex":"9346eef9-2eb0-11e6-9d79-67a90c28fd80","method":{"position":"org.apache.commons.collections4.SplitMapUtils:184","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"9347160a-2eb0-11e6-9d79-7d90dc724d5d","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[564],"tindex":"9347160b-2eb0-11e6-9d79-57ab78fb232b","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:45","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.MapIterator<K, V> unmodifiableMapIterator(final org.apache.commons.collections4.MapIterator<? extends K, ? extends V> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"9347160c-2eb0-11e6-9d79-d5eeac0690f1","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:300","type":"CtMethodImpl","sourcecode":"public K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return doRemoveValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[565],"tindex":"93473d1d-2eb0-11e6-9d79-8db31886d120","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[407,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582],"tindex":"93473d1e-2eb0-11e6-9d79-7d2590d85ade","method":{"position":"org.apache.commons.collections4.CollectionUtils:251","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> intersection(final java.lang.Iterable<? extends O> a, final java.lang.Iterable<? extends O> b) {\n    if ((b == null) || (b == null)) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O> = new org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>(a , b);\n            for (final O O : helper) {\n                helper.setCardinality(obj, helper.min(obj));\n            }\n            return helper.list();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[],"tindex":"93473d1f-2eb0-11e6-9d79-af2200629b52","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"93476430-2eb0-11e6-9d79-db3b7e498d5f","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        {\n                            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n                            if (answer == null) {\n                                answer = defaultValue;\n                            } \n                            return answer;\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:82","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"93476431-2eb0-11e6-9d79-ebd6a6e3a7f3","method":{"position":"org.apache.commons.collections4.ComparatorUtils:152","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullLowComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[583,584,585,586,254,587,588,255,589,590,256,591,592,251,593,252,253,594,595,596,303,597,598,304,599,600,305,601,602,300,603,301,302,604,605,606,607,608],"tindex":"93478b42-2eb0-11e6-9d79-69931b02a2b2","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[423],"tindex":"93478b43-2eb0-11e6-9d79-03aab3e66310","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtBinaryOperatorImpl","sourcecode":"(node.getParent(dataElement)) == null"},"failures":[425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,444,445,446,447,448,449,450,451,452,411,453,454,455,412,456,457,458,459,460,461,462,463,464,413,465,466,414,415,467,468,416,417,418,419,420,442,443,469,470,471,472,473,474,475,476,477,478,479,480,481,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,482,483],"tindex":"93478b44-2eb0-11e6-9d79-8718c95b6e71","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1874","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[609,0,1,2,3,610,4,5,611,612,613,614,615,6],"tindex":"9347b255-2eb0-11e6-9d79-d54f634a81e7","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9347b256-2eb0-11e6-9d79-0f60ffe19501","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (index < 0) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[],"tindex":"9347b257-2eb0-11e6-9d79-970acc1bcfd2","method":{"position":"org.apache.commons.collections4.list.TreeList:158","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                return -1;\n            } \n            return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[616,617],"tindex":"9347d968-2eb0-11e6-9d79-11565f766701","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtBinaryOperatorImpl","sourcecode":"coll == null"},"failures":[],"tindex":"9347d969-2eb0-11e6-9d79-85389230b9f6","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[618],"tindex":"9347d96a-2eb0-11e6-9d79-97f2b7da5b7e","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl","sourcecode":"(end) < (start)"},"failures":[619],"tindex":"9348007b-2eb0-11e6-9d79-d77714fd66ca","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (end < start) {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.List) == false"},"failures":[],"tindex":"9348007c-2eb0-11e6-9d79-a1788d3f71c3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1484","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            return (lookupKey(obj)) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"9348007d-2eb0-11e6-9d79-fd482045ad31","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"(collection == null) || ((collection.size()) != 1)"},"failures":[],"tindex":"9348278e-2eb0-11e6-9d79-9156a67eac9d","method":{"position":"org.apache.commons.collections4.ListUtils:352","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> removeAll(final java.util.Collection<E> collection, final java.util.Collection<?> remove) {\n    if ((collection == null) || ((collection.size()) != 1)) {\n        {\n            if ((collection.size()) > 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n                    for (final E E : collection) {\n                        if (!(remove.contains(obj))) {\n                            list.add(obj);\n                        } \n                    }\n                    return list;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtBinaryOperatorImpl","sourcecode":"(coll instanceof org.apache.commons.collections4.BoundedCollection) == false"},"failures":[620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,398,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,400,696,697,698,699],"tindex":"9348278f-2eb0-11e6-9d79-4dde9a273c4e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if ((coll instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[700,701],"tindex":"93482790-2eb0-11e6-9d79-c5730b1e0cd1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"93484ea1-2eb0-11e6-9d79-e71d359f789f","method":{"position":"org.apache.commons.collections4.IteratorUtils:544","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E> iterator1, final java.util.Iterator<? extends E> iterator2) {\n    if (comparator == null) {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterator1 , iterator2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[211,212,702,213,214,703,215,704,705,216,706,707,217,708,709,710,711,218,712,713,714,715,219,220,716,717,221,718,222,719,720,223,224,721,722,723,724,725,726,727,238,239,728,240,241,729,242,730,731,243,732,733,244,734,735,250,251,593,252,253,586,254,587,588,255,589,590,256,591,592,287,288,736,289,290,737,291,738,739,292,740,741,293,742,743],"tindex":"93484ea2-2eb0-11e6-9d79-6b321d0f150f","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:46","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> collectionBag(final org.apache.commons.collections4.Bag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return new org.apache.commons.collections4.bag.CollectionBag<E>(bag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[],"tindex":"93484ea3-2eb0-11e6-9d79-0366bde46559","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:292","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((coll.size()) == 0) {\n                return false;\n            } \n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.removeAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtBinaryOperatorImpl","sourcecode":"(transformers.size()) == 0"},"failures":[744],"tindex":"934875b4-2eb0-11e6-9d79-752fdf5812ad","method":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:70","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Transformer<T, T> chainedTransformer(final java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> transformers) {\n    if ((transformers.size()) == 0) {\n        {\n            if (transformers == null) {\n                throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n            } \n            if ((transformers.size()) == 0) {\n                return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n            } \n            final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = transformers.toArray(new org.apache.commons.collections4.Transformer[transformers.size()]);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(cmds);\n            return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , cmds);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"934875b5-2eb0-11e6-9d79-4f3d4d720c12","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                {\n                    java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n                    if (answer == null) {\n                        answer = defaultValue;\n                    } \n                    return answer;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[745,746,747,389,748,749,750,751],"tindex":"93489cc6-2eb0-11e6-9d79-6d697d678b3e","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"93489cc7-2eb0-11e6-9d79-b186099fd99d","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = getValue();\n            return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[411,412,413,414,415,416,417,418,419,420],"tindex":"93489cc8-2eb0-11e6-9d79-11de9ee2ccf9","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[752,753],"tindex":"9348c3d9-2eb0-11e6-9d79-7799b1360017","method":{"position":"org.apache.commons.collections4.list.PredicatedList:132","type":"CtMethodImpl","sourcecode":"public E set(final int index, final E object) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validate(object);\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl","sourcecode":"(entry.getValue()) == null"},"failures":[31,754,755,35,36,37,38,39,40,49,756,757,53,54,55,56,57,58,87,337,340,91,92,93,94,95,96,109,373,376,113,114,115,116,117,118,129,758,759,133,134,135,136,137,138,760,150,761,762,379,384,159,387,388],"tindex":"9348c3da-2eb0-11e6-9d79-756068703bd7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.getValue()) == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (previous == null) {\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    } else {\n                        previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtBinaryOperatorImpl","sourcecode":"o == null"},"failures":[427,428,453,454,473,474],"tindex":"9348c3db-2eb0-11e6-9d79-6fb9ca93ab5c","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1200","type":"CtMethodImpl","sourcecode":"private static void checkNonNullComparable(final java.lang.Object o, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                throw new java.lang.NullPointerException((dataElement + \" cannot be null\"));\n            } \n            if (!(o instanceof java.lang.Comparable)) {\n                throw new java.lang.ClassCastException((dataElement + \" must be Comparable\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtBinaryOperatorImpl","sourcecode":"(queue.size()) > 0"},"failures":[763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,583,780,781,782,783,784,785,786,787,788,789,790,791,792,793],"tindex":"9348eaec-2eb0-11e6-9d79-a3872c7131a5","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if ((queue.size()) > 0) {\n        {\n            return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl","sourcecode":"queue instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[794],"tindex":"9348eaed-2eb0-11e6-9d79-4b9cb44c6f8b","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map.Entry) == false"},"failures":[],"tindex":"9348eaee-2eb0-11e6-9d79-0f509936411f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map.Entry) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.containsKey(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection"},"failures":[],"tindex":"934911ff-2eb0-11e6-9d79-05326d4d5e1f","method":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:111","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return decorated().addAll(coll);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl","sourcecode":"(coll.size()) == 0"},"failures":[795,796],"tindex":"93491200-2eb0-11e6-9d79-718fb5dc11d4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtBinaryOperatorImpl","sourcecode":"entry == null"},"failures":[],"tindex":"93491201-2eb0-11e6-9d79-ff0d01c642d0","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:582","type":"CtMethodImpl","sourcecode":"protected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (entry == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((entry.getValue()) == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (previous == null) {\n                        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex] = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    } else {\n                        previous.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"93491202-2eb0-11e6-9d79-494b248decb0","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"93493913-2eb0-11e6-9d79-ddac6238a8bd","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        {\n                            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n                            if (answer == null) {\n                                answer = defaultValue;\n                            } \n                            return answer;\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[797,798,799,800],"tindex":"93493914-2eb0-11e6-9d79-edf66f7ea5d5","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:368","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n                return false;\n            } \n            if (coll.isEmpty()) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear();\n                return true;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"93496025-2eb0-11e6-9d79-89c162672ad8","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtBinaryOperatorImpl","sourcecode":"iterator instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"93496026-2eb0-11e6-9d79-dd5fdaa12808","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:169","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[744,801,802],"tindex":"93496027-2eb0-11e6-9d79-2d334a7c6538","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:168","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic <I, O>org.apache.commons.collections4.Transformer<I, O>[] copy(final org.apache.commons.collections4.Transformer<? super I, ? extends O>... transformers) {\n    if (transformers == null) {\n        {\n            if (transformers == null) {\n                return null;\n            } \n            return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"transformers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[803],"tindex":"93496028-2eb0-11e6-9d79-85b43874018c","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[],"tindex":"93498739-2eb0-11e6-9d79-d7f173ba8088","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (null == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"9349873a-2eb0-11e6-9d79-d7b3f89c42db","method":{"position":"org.apache.commons.collections4.SetUtils:274","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> synchronizedSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return java.util.Collections.synchronizedSortedSet(set);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[804],"tindex":"9349873b-2eb0-11e6-9d79-35bad6b8699b","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LazyMap:110","type":"CtBinaryOperatorImpl","sourcecode":"factory == null"},"failures":[],"tindex":"9349873c-2eb0-11e6-9d79-8b59aded4c7b","method":{"position":"org.apache.commons.collections4.MapUtils:1623","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> lazySortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Factory<? extends V> factory) {\n    if (factory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(map, factory);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[805],"tindex":"9349873d-2eb0-11e6-9d79-c5f7ae40dd85","method":{"position":"org.apache.commons.collections4.ListUtils:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character get(int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Character.valueOf(java.lang.CharSequence.charAt(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"9349ae4e-2eb0-11e6-9d79-551c0a3e3ff9","method":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:79","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[806,807],"tindex":"9349ae4f-2eb0-11e6-9d79-5936dc30cb1c","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[7],"tindex":"9349ae50-2eb0-11e6-9d79-258531f40bac","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"9349d561-2eb0-11e6-9d79-0b78b0cec6f6","method":{"position":"org.apache.commons.collections4.PredicateUtils:289","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AllPredicate.allPredicate(predicates);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"9349d562-2eb0-11e6-9d79-8f171906f3a5","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"9349d563-2eb0-11e6-9d79-ed36edd8b9cd","method":{"position":"org.apache.commons.collections4.MapUtils:486","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key, final java.lang.Integer defaultValue) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (map != null) {\n                        {\n                            java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.getInteger(map, key);\n                            if (answer == null) {\n                                answer = defaultValue;\n                            } \n                            return answer;\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Collection"},"failures":[],"tindex":"9349d564-2eb0-11e6-9d79-47a84bd4bc87","method":{"position":"org.apache.commons.collections4.CollectionUtils:111","type":"CtMethodImpl","sourcecode":"private final int getFreq(final java.lang.Object obj, final java.util.Map<?, java.lang.Integer> freqMap) {\n    if (obj instanceof java.util.Collection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Integer java.lang.Integer = freqMap.get(obj);\n            if (count != null) {\n                return count.intValue();\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl","sourcecode":"(comparator) == null"},"failures":[],"tindex":"9349d565-2eb0-11e6-9d79-8550cfb678a7","method":{"position":"org.apache.commons.collections4.IteratorUtils:566","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> collatedIterator(final java.util.Comparator<? super E> comparator, final java.util.Iterator<? extends E>... iterators) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.CollatingIterator<E>(comparator , iterators);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[808,809,810],"tindex":"9349fc76-2eb0-11e6-9d79-e5284790a579","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}